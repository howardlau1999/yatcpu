
my.elf:     file format elf32-littleriscv


Disassembly of section .text:

00001000 <rvtest_entry_point>:

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN
    1000:	feedc0b7          	lui	ra,0xfeedc
    1004:	ead08093          	addi	ra,ra,-339 # feedbead <_end+0xfeed5ea9>
    1008:	ff76e137          	lui	sp,0xff76e
    100c:	f5610113          	addi	sp,sp,-170 # ff76df56 <_end+0xff767f52>
    1010:	7fbb71b7          	lui	gp,0x7fbb7
    1014:	fab18193          	addi	gp,gp,-85 # 7fbb6fab <_end+0x7fbb0fa7>
    1018:	bfddb237          	lui	tp,0xbfddb
    101c:	7d520213          	addi	tp,tp,2005 # bfddb7d5 <_end+0xbfdd57d1>
    1020:	00000297          	auipc	t0,0x0
    1024:	0d828293          	addi	t0,t0,216 # 10f8 <rvtest_code_begin>
    1028:	00004317          	auipc	t1,0x4
    102c:	fd830313          	addi	t1,t1,-40 # 5000 <rvtest_data_begin>
    1030:	b7fbb3b7          	lui	t2,0xb7fbb
    1034:	6fa38393          	addi	t2,t2,1786 # b7fbb6fa <_end+0xb7fb56f6>
    1038:	5bfde437          	lui	s0,0x5bfde
    103c:	b7d40413          	addi	s0,s0,-1155 # 5bfddb7d <_end+0x5bfd7b79>
    1040:	adfef4b7          	lui	s1,0xadfef
    1044:	dbe48493          	addi	s1,s1,-578 # adfeedbe <_end+0xadfe8dba>
    1048:	56ff7537          	lui	a0,0x56ff7
    104c:	6df50513          	addi	a0,a0,1759 # 56ff76df <_end+0x56ff16db>
    1050:	ab7fc5b7          	lui	a1,0xab7fc
    1054:	b6f58593          	addi	a1,a1,-1169 # ab7fbb6f <_end+0xab7f5b6b>
    1058:	d5bfe637          	lui	a2,0xd5bfe
    105c:	db760613          	addi	a2,a2,-585 # d5bfddb7 <_end+0xd5bf7db3>
    1060:	eadff6b7          	lui	a3,0xeadff
    1064:	edb68693          	addi	a3,a3,-293 # eadfeedb <_end+0xeadf8ed7>
    1068:	f56ff737          	lui	a4,0xf56ff
    106c:	76d70713          	addi	a4,a4,1901 # f56ff76d <_end+0xf56f9769>
    1070:	fab807b7          	lui	a5,0xfab80
    1074:	bb678793          	addi	a5,a5,-1098 # fab7fbb6 <_end+0xfab79bb2>
    1078:	7d5c0837          	lui	a6,0x7d5c0
    107c:	ddb80813          	addi	a6,a6,-549 # 7d5bfddb <_end+0x7d5b9dd7>
    1080:	beae08b7          	lui	a7,0xbeae0
    1084:	eed88893          	addi	a7,a7,-275 # beadfeed <_end+0xbead9ee9>
    1088:	df570937          	lui	s2,0xdf570
    108c:	f7690913          	addi	s2,s2,-138 # df56ff76 <_end+0xdf569f72>
    1090:	6fab89b7          	lui	s3,0x6fab8
    1094:	fbb98993          	addi	s3,s3,-69 # 6fab7fbb <_end+0x6fab1fb7>
    1098:	b7d5ca37          	lui	s4,0xb7d5c
    109c:	fdda0a13          	addi	s4,s4,-35 # b7d5bfdd <_end+0xb7d55fd9>
    10a0:	dbeaeab7          	lui	s5,0xdbeae
    10a4:	feea8a93          	addi	s5,s5,-18 # dbeadfee <_end+0xdbea7fea>
    10a8:	6df57b37          	lui	s6,0x6df57
    10ac:	ff7b0b13          	addi	s6,s6,-9 # 6df56ff7 <_end+0x6df50ff3>
    10b0:	b6fabbb7          	lui	s7,0xb6fab
    10b4:	7fbb8b93          	addi	s7,s7,2043 # b6fab7fb <_end+0xb6fa57f7>
    10b8:	db7d6c37          	lui	s8,0xdb7d6
    10bc:	bfdc0c13          	addi	s8,s8,-1027 # db7d5bfd <_end+0xdb7cfbf9>
    10c0:	edbebcb7          	lui	s9,0xedbeb
    10c4:	dfec8c93          	addi	s9,s9,-514 # edbeadfe <_end+0xedbe4dfa>
    10c8:	76df5d37          	lui	s10,0x76df5
    10cc:	6ffd0d13          	addi	s10,s10,1791 # 76df56ff <_end+0x76def6fb>
    10d0:	bb6fbdb7          	lui	s11,0xbb6fb
    10d4:	b7fd8d93          	addi	s11,s11,-1153 # bb6fab7f <_end+0xbb6f4b7b>
    10d8:	ddb7de37          	lui	t3,0xddb7d
    10dc:	5bfe0e13          	addi	t3,t3,1471 # ddb7d5bf <_end+0xddb775bb>
    10e0:	eedbfeb7          	lui	t4,0xeedbf
    10e4:	adfe8e93          	addi	t4,t4,-1313 # eedbeadf <_end+0xeedb8adb>
    10e8:	f76dff37          	lui	t5,0xf76df
    10ec:	56ff0f13          	addi	t5,t5,1391 # f76df56f <_end+0xf76d956b>
    10f0:	fbb70fb7          	lui	t6,0xfbb70
    10f4:	ab7f8f93          	addi	t6,t6,-1353 # fbb6fab7 <_end+0xfbb69ab3>

000010f8 <rvtest_code_begin>:

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*);def TEST_CASE_1=True;",or)

RVTEST_SIGBASE( x3,signature_x3_1)
    10f8:	00004197          	auipc	gp,0x4
    10fc:	f1818193          	addi	gp,gp,-232 # 5010 <begin_signature>

00001100 <inst_0>:

inst_0:
// rs2 == rd != rs1, rs1==x8, rs2==x26, rd==x26, rs1_val > 0 and rs2_val > 0, rs2_val == 16, rs1_val == 1048576, rs1_val != rs2_val
// opcode: or ; op1:x8; op2:x26; dest:x26; op1val:0x100000;  op2val:0x10
TEST_RR_OP(or, x26, x8, x26, 0x100010, 0x100000, 0x10, x3, 0, x5)
    1100:	00100437          	lui	s0,0x100
    1104:	01000d13          	li	s10,16
    1108:	01a46d33          	or	s10,s0,s10
    110c:	01a1a023          	sw	s10,0(gp)

00001110 <inst_1>:

inst_1:
// rs1 == rs2 != rd, rs1==x6, rs2==x6, rd==x17, rs1_val > 0 and rs2_val < 0, rs2_val == -2049, rs1_val == 2
// opcode: or ; op1:x6; op2:x6; dest:x17; op1val:0x2;  op2val:0x2
TEST_RR_OP(or, x17, x6, x6, 0x2, 0x2, 0x2, x3, 4, x5)
    1110:	00200313          	li	t1,2
    1114:	00200313          	li	t1,2
    1118:	006368b3          	or	a7,t1,t1
    111c:	0111a223          	sw	a7,4(gp)

00001120 <inst_2>:

inst_2:
// rs1 == rs2 == rd, rs1==x31, rs2==x31, rd==x31, rs1_val < 0 and rs2_val < 0, rs1_val == -268435457, rs2_val == -1025
// opcode: or ; op1:x31; op2:x31; dest:x31; op1val:-0x10000001;  op2val:-0x10000001
TEST_RR_OP(or, x31, x31, x31, 0xefffffff, -0x10000001, -0x10000001, x3, 8, x5)
    1120:	f0000fb7          	lui	t6,0xf0000
    1124:	ffff8f93          	addi	t6,t6,-1 # efffffff <_end+0xefff9ffb>
    1128:	f0000fb7          	lui	t6,0xf0000
    112c:	ffff8f93          	addi	t6,t6,-1 # efffffff <_end+0xefff9ffb>
    1130:	01ffefb3          	or	t6,t6,t6
    1134:	01f1a423          	sw	t6,8(gp)

00001138 <inst_3>:

inst_3:
// rs1 == rd != rs2, rs1==x27, rs2==x29, rd==x27, rs1_val < 0 and rs2_val > 0, rs1_val == -2049, rs2_val == 4194304
// opcode: or ; op1:x27; op2:x29; dest:x27; op1val:-0x801;  op2val:0x400000
TEST_RR_OP(or, x27, x27, x29, 0xfffff7ff, -0x801, 0x400000, x3, 12, x5)
    1138:	fffffdb7          	lui	s11,0xfffff
    113c:	7ffd8d93          	addi	s11,s11,2047 # fffff7ff <_end+0xffff97fb>
    1140:	00400eb7          	lui	t4,0x400
    1144:	01ddedb3          	or	s11,s11,t4
    1148:	01b1a623          	sw	s11,12(gp)

0000114c <inst_4>:

inst_4:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x30, rs2==x19, rd==x18, rs1_val == rs2_val, rs2_val == -1048577, rs1_val == -1048577
// opcode: or ; op1:x30; op2:x19; dest:x18; op1val:-0x100001;  op2val:-0x100001
TEST_RR_OP(or, x18, x30, x19, 0xffefffff, -0x100001, -0x100001, x3, 16, x5)
    114c:	fff00f37          	lui	t5,0xfff00
    1150:	ffff0f13          	addi	t5,t5,-1 # ffefffff <_end+0xffef9ffb>
    1154:	fff009b7          	lui	s3,0xfff00
    1158:	fff98993          	addi	s3,s3,-1 # ffefffff <_end+0xffef9ffb>
    115c:	013f6933          	or	s2,t5,s3
    1160:	0121a823          	sw	s2,16(gp)

00001164 <inst_5>:

inst_5:
// rs1==x21, rs2==x14, rd==x9, rs2_val == (-2**(xlen-1)), rs2_val == -2147483648, rs1_val == 131072
// opcode: or ; op1:x21; op2:x14; dest:x9; op1val:0x20000;  op2val:-0x80000000
TEST_RR_OP(or, x9, x21, x14, 0x80020000, 0x20000, -0x80000000, x3, 20, x5)
    1164:	00020ab7          	lui	s5,0x20
    1168:	80000737          	lui	a4,0x80000
    116c:	00eae4b3          	or	s1,s5,a4
    1170:	0091aa23          	sw	s1,20(gp)

00001174 <inst_6>:

inst_6:
// rs1==x26, rs2==x24, rd==x4, rs2_val == 0, rs1_val == -8193
// opcode: or ; op1:x26; op2:x24; dest:x4; op1val:-0x2001;  op2val:0x0
TEST_RR_OP(or, x4, x26, x24, 0xffffdfff, -0x2001, 0x0, x3, 24, x5)
    1174:	ffffed37          	lui	s10,0xffffe
    1178:	fffd0d13          	addi	s10,s10,-1 # ffffdfff <_end+0xffff7ffb>
    117c:	00000c13          	li	s8,0
    1180:	018d6233          	or	tp,s10,s8
    1184:	0041ac23          	sw	tp,24(gp)

00001188 <inst_7>:

inst_7:
// rs1==x9, rs2==x8, rd==x30, rs2_val == (2**(xlen-1)-1), rs1_val == 0, rs2_val == 2147483647
// opcode: or ; op1:x9; op2:x8; dest:x30; op1val:0x0;  op2val:0x7fffffff
TEST_RR_OP(or, x30, x9, x8, 0x7fffffff, 0x0, 0x7fffffff, x3, 28, x5)
    1188:	00000493          	li	s1,0
    118c:	80000437          	lui	s0,0x80000
    1190:	fff40413          	addi	s0,s0,-1 # 7fffffff <_end+0x7fff9ffb>
    1194:	0084ef33          	or	t5,s1,s0
    1198:	01e1ae23          	sw	t5,28(gp)

0000119c <inst_8>:

inst_8:
// rs1==x23, rs2==x7, rd==x8, rs2_val == 1, rs1_val == -8388609
// opcode: or ; op1:x23; op2:x7; dest:x8; op1val:-0x800001;  op2val:0x1
TEST_RR_OP(or, x8, x23, x7, 0xff7fffff, -0x800001, 0x1, x3, 32, x5)
    119c:	ff800bb7          	lui	s7,0xff800
    11a0:	fffb8b93          	addi	s7,s7,-1 # ff7fffff <_end+0xff7f9ffb>
    11a4:	00100393          	li	t2,1
    11a8:	007be433          	or	s0,s7,t2
    11ac:	0281a023          	sw	s0,32(gp)

000011b0 <inst_9>:

inst_9:
// rs1==x12, rs2==x0, rd==x22, rs1_val == (-2**(xlen-1)), rs1_val == -2147483648
// opcode: or ; op1:x12; op2:x0; dest:x22; op1val:-0x80000000;  op2val:0x0
TEST_RR_OP(or, x22, x12, x0, 0x80000000, -0x80000000, 0x0, x3, 36, x5)
    11b0:	80000637          	lui	a2,0x80000
    11b4:	00000013          	nop
    11b8:	00066b33          	or	s6,a2,zero
    11bc:	0361a223          	sw	s6,36(gp)

000011c0 <inst_10>:

inst_10:
// rs1==x10, rs2==x30, rd==x28, rs1_val == (2**(xlen-1)-1), rs2_val == 64, rs1_val == 2147483647
// opcode: or ; op1:x10; op2:x30; dest:x28; op1val:0x7fffffff;  op2val:0x40
TEST_RR_OP(or, x28, x10, x30, 0x7fffffff, 0x7fffffff, 0x40, x3, 40, x5)
    11c0:	80000537          	lui	a0,0x80000
    11c4:	fff50513          	addi	a0,a0,-1 # 7fffffff <_end+0x7fff9ffb>
    11c8:	04000f13          	li	t5,64
    11cc:	01e56e33          	or	t3,a0,t5
    11d0:	03c1a423          	sw	t3,40(gp)

000011d4 <inst_11>:

inst_11:
// rs1==x18, rs2==x21, rd==x16, rs1_val == 1, 
// opcode: or ; op1:x18; op2:x21; dest:x16; op1val:0x1;  op2val:0x55555554
TEST_RR_OP(or, x16, x18, x21, 0x55555555, 0x1, 0x55555554, x3, 44, x5)
    11d4:	00100913          	li	s2,1
    11d8:	55555ab7          	lui	s5,0x55555
    11dc:	554a8a93          	addi	s5,s5,1364 # 55555554 <_end+0x5554f550>
    11e0:	01596833          	or	a6,s2,s5
    11e4:	0301a623          	sw	a6,44(gp)

000011e8 <inst_12>:

inst_12:
// rs1==x14, rs2==x17, rd==x12, rs2_val == 2, rs1_val == 4096
// opcode: or ; op1:x14; op2:x17; dest:x12; op1val:0x1000;  op2val:0x2
TEST_RR_OP(or, x12, x14, x17, 0x1002, 0x1000, 0x2, x3, 48, x5)
    11e8:	00001737          	lui	a4,0x1
    11ec:	00200893          	li	a7,2
    11f0:	01176633          	or	a2,a4,a7
    11f4:	02c1a823          	sw	a2,48(gp)

000011f8 <inst_13>:

inst_13:
// rs1==x19, rs2==x16, rd==x15, rs2_val == 4, 
// opcode: or ; op1:x19; op2:x16; dest:x15; op1val:-0x800001;  op2val:0x4
TEST_RR_OP(or, x15, x19, x16, 0xff7fffff, -0x800001, 0x4, x3, 52, x5)
    11f8:	ff8009b7          	lui	s3,0xff800
    11fc:	fff98993          	addi	s3,s3,-1 # ff7fffff <_end+0xff7f9ffb>
    1200:	00400813          	li	a6,4
    1204:	0109e7b3          	or	a5,s3,a6
    1208:	02f1aa23          	sw	a5,52(gp)

0000120c <inst_14>:

inst_14:
// rs1==x4, rs2==x2, rd==x7, rs2_val == 8, rs1_val == -1025
// opcode: or ; op1:x4; op2:x2; dest:x7; op1val:-0x401;  op2val:0x8
TEST_RR_OP(or, x7, x4, x2, 0xfffffbff, -0x401, 0x8, x3, 56, x5)
    120c:	bff00213          	li	tp,-1025
    1210:	00800113          	li	sp,8
    1214:	002263b3          	or	t2,tp,sp
    1218:	0271ac23          	sw	t2,56(gp)

0000121c <inst_15>:

inst_15:
// rs1==x2, rs2==x22, rd==x11, rs2_val == 32, 
// opcode: or ; op1:x2; op2:x22; dest:x11; op1val:0x7fffffff;  op2val:0x20
TEST_RR_OP(or, x11, x2, x22, 0x7fffffff, 0x7fffffff, 0x20, x3, 60, x5)
    121c:	80000137          	lui	sp,0x80000
    1220:	fff10113          	addi	sp,sp,-1 # 7fffffff <_end+0x7fff9ffb>
    1224:	02000b13          	li	s6,32
    1228:	016165b3          	or	a1,sp,s6
    122c:	02b1ae23          	sw	a1,60(gp)

00001230 <inst_16>:

inst_16:
// rs1==x28, rs2==x15, rd==x25, rs2_val == 128, rs1_val == -513
// opcode: or ; op1:x28; op2:x15; dest:x25; op1val:-0x201;  op2val:0x80
TEST_RR_OP(or, x25, x28, x15, 0xfffffdff, -0x201, 0x80, x3, 64, x5)
    1230:	dff00e13          	li	t3,-513
    1234:	08000793          	li	a5,128
    1238:	00fe6cb3          	or	s9,t3,a5
    123c:	0591a023          	sw	s9,64(gp)

00001240 <inst_17>:

inst_17:
// rs1==x25, rs2==x1, rd==x6, rs2_val == 256, 
// opcode: or ; op1:x25; op2:x1; dest:x6; op1val:0xb504;  op2val:0x100
TEST_RR_OP(or, x6, x25, x1, 0xb504, 0xb504, 0x100, x3, 68, x5)
    1240:	0000bcb7          	lui	s9,0xb
    1244:	504c8c93          	addi	s9,s9,1284 # b504 <_end+0x5500>
    1248:	10000093          	li	ra,256
    124c:	001ce333          	or	t1,s9,ra
    1250:	0461a223          	sw	t1,68(gp)

00001254 <inst_18>:

inst_18:
// rs1==x17, rs2==x10, rd==x20, rs2_val == 512, rs1_val == 4
// opcode: or ; op1:x17; op2:x10; dest:x20; op1val:0x4;  op2val:0x200
TEST_RR_OP(or, x20, x17, x10, 0x204, 0x4, 0x200, x3, 72, x8)
    1254:	00400893          	li	a7,4
    1258:	20000513          	li	a0,512
    125c:	00a8ea33          	or	s4,a7,a0
    1260:	0541a423          	sw	s4,72(gp)
RVTEST_SIGBASE( x6,signature_x6_0)
    1264:	00004317          	auipc	t1,0x4
    1268:	df830313          	addi	t1,t1,-520 # 505c <signature_x6_0>

0000126c <inst_19>:

inst_19:
// rs1==x20, rs2==x23, rd==x5, rs2_val == 1024, 
// opcode: or ; op1:x20; op2:x23; dest:x5; op1val:-0x100001;  op2val:0x400
TEST_RR_OP(or, x5, x20, x23, 0xffefffff, -0x100001, 0x400, x6, 0, x8)
    126c:	fff00a37          	lui	s4,0xfff00
    1270:	fffa0a13          	addi	s4,s4,-1 # ffefffff <_end+0xffef9ffb>
    1274:	40000b93          	li	s7,1024
    1278:	017a62b3          	or	t0,s4,s7
    127c:	00532023          	sw	t0,0(t1)

00001280 <inst_20>:

inst_20:
// rs1==x11, rs2==x12, rd==x2, rs2_val == 2048, 
// opcode: or ; op1:x11; op2:x12; dest:x2; op1val:0x0;  op2val:0x800
TEST_RR_OP(or, x2, x11, x12, 0x800, 0x0, 0x800, x6, 4, x8)
    1280:	00000593          	li	a1,0
    1284:	00001637          	lui	a2,0x1
    1288:	80060613          	addi	a2,a2,-2048 # 800 <offset+0x720>
    128c:	00c5e133          	or	sp,a1,a2
    1290:	00232223          	sw	sp,4(t1)

00001294 <inst_21>:

inst_21:
// rs1==x13, rs2==x20, rd==x1, rs2_val == 4096, rs1_val == -67108865
// opcode: or ; op1:x13; op2:x20; dest:x1; op1val:-0x4000001;  op2val:0x1000
TEST_RR_OP(or, x1, x13, x20, 0xfbffffff, -0x4000001, 0x1000, x6, 8, x8)
    1294:	fc0006b7          	lui	a3,0xfc000
    1298:	fff68693          	addi	a3,a3,-1 # fbffffff <_end+0xfbff9ffb>
    129c:	00001a37          	lui	s4,0x1
    12a0:	0146e0b3          	or	ra,a3,s4
    12a4:	00132423          	sw	ra,8(t1)

000012a8 <inst_22>:

inst_22:
// rs1==x15, rs2==x27, rd==x3, rs2_val == 8192, 
// opcode: or ; op1:x15; op2:x27; dest:x3; op1val:0x4;  op2val:0x2000
TEST_RR_OP(or, x3, x15, x27, 0x2004, 0x4, 0x2000, x6, 12, x8)
    12a8:	00400793          	li	a5,4
    12ac:	00002db7          	lui	s11,0x2
    12b0:	01b7e1b3          	or	gp,a5,s11
    12b4:	00332623          	sw	gp,12(t1)

000012b8 <inst_23>:

inst_23:
// rs1==x22, rs2==x4, rd==x21, rs2_val == 16384, rs1_val == -65537
// opcode: or ; op1:x22; op2:x4; dest:x21; op1val:-0x10001;  op2val:0x4000
TEST_RR_OP(or, x21, x22, x4, 0xfffeffff, -0x10001, 0x4000, x6, 16, x8)
    12b8:	ffff0b37          	lui	s6,0xffff0
    12bc:	fffb0b13          	addi	s6,s6,-1 # fffeffff <_end+0xfffe9ffb>
    12c0:	00004237          	lui	tp,0x4
    12c4:	004b6ab3          	or	s5,s6,tp
    12c8:	01532823          	sw	s5,16(t1)

000012cc <inst_24>:

inst_24:
// rs1==x7, rs2==x13, rd==x19, rs2_val == 32768, rs1_val == 524288
// opcode: or ; op1:x7; op2:x13; dest:x19; op1val:0x80000;  op2val:0x8000
TEST_RR_OP(or, x19, x7, x13, 0x88000, 0x80000, 0x8000, x6, 20, x8)
    12cc:	000803b7          	lui	t2,0x80
    12d0:	000086b7          	lui	a3,0x8
    12d4:	00d3e9b3          	or	s3,t2,a3
    12d8:	01332a23          	sw	s3,20(t1)

000012dc <inst_25>:

inst_25:
// rs1==x24, rs2==x5, rd==x14, rs2_val == 65536, 
// opcode: or ; op1:x24; op2:x5; dest:x14; op1val:-0x4;  op2val:0x10000
TEST_RR_OP(or, x14, x24, x5, 0xfffffffc, -0x4, 0x10000, x6, 24, x8)
    12dc:	ffc00c13          	li	s8,-4
    12e0:	000102b7          	lui	t0,0x10
    12e4:	005c6733          	or	a4,s8,t0
    12e8:	00e32c23          	sw	a4,24(t1)

000012ec <inst_26>:

inst_26:
// rs1==x16, rs2==x18, rd==x10, rs2_val == 131072, rs1_val == 1431655765
// opcode: or ; op1:x16; op2:x18; dest:x10; op1val:0x55555555;  op2val:0x20000
TEST_RR_OP(or, x10, x16, x18, 0x55575555, 0x55555555, 0x20000, x6, 28, x8)
    12ec:	55555837          	lui	a6,0x55555
    12f0:	55580813          	addi	a6,a6,1365 # 55555555 <_end+0x5554f551>
    12f4:	00020937          	lui	s2,0x20
    12f8:	01286533          	or	a0,a6,s2
    12fc:	00a32e23          	sw	a0,28(t1)

00001300 <inst_27>:

inst_27:
// rs1==x1, rs2==x9, rd==x23, rs2_val == 262144, 
// opcode: or ; op1:x1; op2:x9; dest:x23; op1val:-0xb504;  op2val:0x40000
TEST_RR_OP(or, x23, x1, x9, 0xffff4afc, -0xb504, 0x40000, x6, 32, x8)
    1300:	ffff50b7          	lui	ra,0xffff5
    1304:	afc08093          	addi	ra,ra,-1284 # ffff4afc <_end+0xfffeeaf8>
    1308:	000404b7          	lui	s1,0x40
    130c:	0090ebb3          	or	s7,ra,s1
    1310:	03732023          	sw	s7,32(t1)

00001314 <inst_28>:

inst_28:
// rs1==x3, rs2==x11, rd==x29, rs2_val == 524288, 
// opcode: or ; op1:x3; op2:x11; dest:x29; op1val:0x4;  op2val:0x80000
TEST_RR_OP(or, x29, x3, x11, 0x80004, 0x4, 0x80000, x6, 36, x8)
    1314:	00400193          	li	gp,4
    1318:	000805b7          	lui	a1,0x80
    131c:	00b1eeb3          	or	t4,gp,a1
    1320:	03d32223          	sw	t4,36(t1)

00001324 <inst_29>:

inst_29:
// rs1==x29, rs2==x28, rd==x13, rs2_val == 1048576, rs1_val == -4097
// opcode: or ; op1:x29; op2:x28; dest:x13; op1val:-0x1001;  op2val:0x100000
TEST_RR_OP(or, x13, x29, x28, 0xffffefff, -0x1001, 0x100000, x6, 40, x8)
    1324:	fffffeb7          	lui	t4,0xfffff
    1328:	fffe8e93          	addi	t4,t4,-1 # ffffefff <_end+0xffff8ffb>
    132c:	00100e37          	lui	t3,0x100
    1330:	01cee6b3          	or	a3,t4,t3
    1334:	02d32423          	sw	a3,40(t1)

00001338 <inst_30>:

inst_30:
// rs1==x5, rs2==x3, rd==x0, rs2_val == 2097152, 
// opcode: or ; op1:x5; op2:x3; dest:x0; op1val:0x33333332;  op2val:0x200000
TEST_RR_OP(or, x0, x5, x3, 0, 0x33333332, 0x200000, x6, 44, x8)
    1338:	333332b7          	lui	t0,0x33333
    133c:	33228293          	addi	t0,t0,818 # 33333332 <_end+0x3332d32e>
    1340:	002001b7          	lui	gp,0x200
    1344:	0032e033          	or	zero,t0,gp
    1348:	02032623          	sw	zero,44(t1)

0000134c <inst_31>:

inst_31:
// rs1==x0, rs2==x25, rd==x24, rs2_val == 8388608, 
// opcode: or ; op1:x0; op2:x25; dest:x24; op1val:0x0;  op2val:0x800000
TEST_RR_OP(or, x24, x0, x25, 0x800000, 0x0, 0x800000, x6, 48, x8)
    134c:	00000013          	nop
    1350:	00800cb7          	lui	s9,0x800
    1354:	01906c33          	or	s8,zero,s9
    1358:	03832823          	sw	s8,48(t1)

0000135c <inst_32>:

inst_32:
// rs2_val == 16777216, rs1_val == 64
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x40;  op2val:0x1000000
TEST_RR_OP(or, x12, x10, x11, 0x1000040, 0x40, 0x1000000, x6, 52, x8)
    135c:	04000513          	li	a0,64
    1360:	010005b7          	lui	a1,0x1000
    1364:	00b56633          	or	a2,a0,a1
    1368:	02c32a23          	sw	a2,52(t1)

0000136c <inst_33>:

inst_33:
// rs2_val == 33554432, rs1_val == -9
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x9;  op2val:0x2000000
TEST_RR_OP(or, x12, x10, x11, 0xfffffff7, -0x9, 0x2000000, x6, 56, x8)
    136c:	ff700513          	li	a0,-9
    1370:	020005b7          	lui	a1,0x2000
    1374:	00b56633          	or	a2,a0,a1
    1378:	02c32c23          	sw	a2,56(t1)

0000137c <inst_34>:

inst_34:
// rs2_val == 67108864, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x4000000
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x55555556, 0x4000000, x6, 60, x8)
    137c:	55555537          	lui	a0,0x55555
    1380:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    1384:	040005b7          	lui	a1,0x4000
    1388:	00b56633          	or	a2,a0,a1
    138c:	02c32e23          	sw	a2,60(t1)

00001390 <inst_35>:

inst_35:
// rs2_val == 134217728, rs1_val == 16777216
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x1000000;  op2val:0x8000000
TEST_RR_OP(or, x12, x10, x11, 0x9000000, 0x1000000, 0x8000000, x6, 64, x8)
    1390:	01000537          	lui	a0,0x1000
    1394:	080005b7          	lui	a1,0x8000
    1398:	00b56633          	or	a2,a0,a1
    139c:	04c32023          	sw	a2,64(t1)

000013a0 <inst_36>:

inst_36:
// rs2_val == 268435456, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x6;  op2val:0x10000000
TEST_RR_OP(or, x12, x10, x11, 0xfffffffa, -0x6, 0x10000000, x6, 68, x8)
    13a0:	ffa00513          	li	a0,-6
    13a4:	100005b7          	lui	a1,0x10000
    13a8:	00b56633          	or	a2,a0,a1
    13ac:	04c32223          	sw	a2,68(t1)

000013b0 <inst_37>:

inst_37:
// rs2_val == 536870912, rs1_val == -1431655766
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x20000000
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaa, -0x55555556, 0x20000000, x6, 72, x8)
    13b0:	aaaab537          	lui	a0,0xaaaab
    13b4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    13b8:	200005b7          	lui	a1,0x20000
    13bc:	00b56633          	or	a2,a0,a1
    13c0:	04c32423          	sw	a2,72(t1)

000013c4 <inst_38>:

inst_38:
// rs2_val == 1073741824, rs1_val == 8388608
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x800000;  op2val:0x40000000
TEST_RR_OP(or, x12, x10, x11, 0x40800000, 0x800000, 0x40000000, x6, 76, x8)
    13c4:	00800537          	lui	a0,0x800
    13c8:	400005b7          	lui	a1,0x40000
    13cc:	00b56633          	or	a2,a0,a1
    13d0:	04c32623          	sw	a2,76(t1)

000013d4 <inst_39>:

inst_39:
// rs2_val == -2, rs1_val == 32
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x20;  op2val:-0x2
TEST_RR_OP(or, x12, x10, x11, 0xfffffffe, 0x20, -0x2, x6, 80, x8)
    13d4:	02000513          	li	a0,32
    13d8:	ffe00593          	li	a1,-2
    13dc:	00b56633          	or	a2,a0,a1
    13e0:	04c32823          	sw	a2,80(t1)

000013e4 <inst_40>:

inst_40:
// rs2_val == -3, rs1_val == 268435456
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x10000000;  op2val:-0x3
TEST_RR_OP(or, x12, x10, x11, 0xfffffffd, 0x10000000, -0x3, x6, 84, x8)
    13e4:	10000537          	lui	a0,0x10000
    13e8:	ffd00593          	li	a1,-3
    13ec:	00b56633          	or	a2,a0,a1
    13f0:	04c32a23          	sw	a2,84(t1)

000013f4 <inst_41>:

inst_41:
// rs2_val == -5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:-0x5
TEST_RR_OP(or, x12, x10, x11, 0xfffffffb, 0x1, -0x5, x6, 88, x8)
    13f4:	00100513          	li	a0,1
    13f8:	ffb00593          	li	a1,-5
    13fc:	00b56633          	or	a2,a0,a1
    1400:	04c32c23          	sw	a2,88(t1)

00001404 <inst_42>:

inst_42:
// rs2_val == -9, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x80000;  op2val:-0x9
TEST_RR_OP(or, x12, x10, x11, 0xfffffff7, 0x80000, -0x9, x6, 92, x8)
    1404:	00080537          	lui	a0,0x80
    1408:	ff700593          	li	a1,-9
    140c:	00b56633          	or	a2,a0,a1
    1410:	04c32e23          	sw	a2,92(t1)

00001414 <inst_43>:

inst_43:
// rs2_val == -17, rs1_val == 8
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x8;  op2val:-0x11
TEST_RR_OP(or, x12, x10, x11, 0xffffffef, 0x8, -0x11, x6, 96, x8)
    1414:	00800513          	li	a0,8
    1418:	fef00593          	li	a1,-17
    141c:	00b56633          	or	a2,a0,a1
    1420:	06c32023          	sw	a2,96(t1)

00001424 <inst_44>:

inst_44:
// rs2_val == -33, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:-0x21
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0xb504, -0x21, x6, 100, x8)
    1424:	ffff5537          	lui	a0,0xffff5
    1428:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffeeaf8>
    142c:	fdf00593          	li	a1,-33
    1430:	00b56633          	or	a2,a0,a1
    1434:	06c32223          	sw	a2,100(t1)

00001438 <inst_45>:

inst_45:
// rs2_val == -65, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x20000;  op2val:-0x41
TEST_RR_OP(or, x12, x10, x11, 0xffffffbf, 0x20000, -0x41, x6, 104, x8)
    1438:	00020537          	lui	a0,0x20
    143c:	fbf00593          	li	a1,-65
    1440:	00b56633          	or	a2,a0,a1
    1444:	06c32423          	sw	a2,104(t1)

00001448 <inst_46>:

inst_46:
// rs2_val == -129, rs1_val == -2097153
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x200001;  op2val:-0x81
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x200001, -0x81, x6, 108, x8)
    1448:	ffe00537          	lui	a0,0xffe00
    144c:	fff50513          	addi	a0,a0,-1 # ffdfffff <_end+0xffdf9ffb>
    1450:	f7f00593          	li	a1,-129
    1454:	00b56633          	or	a2,a0,a1
    1458:	06c32623          	sw	a2,108(t1)

0000145c <inst_47>:

inst_47:
// rs2_val == -257, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:-0x101
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, 0x33333334, -0x101, x6, 112, x8)
    145c:	33333537          	lui	a0,0x33333
    1460:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    1464:	eff00593          	li	a1,-257
    1468:	00b56633          	or	a2,a0,a1
    146c:	06c32823          	sw	a2,112(t1)

00001470 <inst_48>:

inst_48:
// rs2_val == -513, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x7fffffff;  op2val:-0x201
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, 0x7fffffff, -0x201, x6, 116, x8)
    1470:	80000537          	lui	a0,0x80000
    1474:	fff50513          	addi	a0,a0,-1 # 7fffffff <_end+0x7fff9ffb>
    1478:	dff00593          	li	a1,-513
    147c:	00b56633          	or	a2,a0,a1
    1480:	06c32a23          	sw	a2,116(t1)

00001484 <inst_49>:

inst_49:
// rs2_val == -4097, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:-0x1001
TEST_RR_OP(or, x12, x10, x11, 0xffffefff, 0x3, -0x1001, x6, 120, x8)
    1484:	00300513          	li	a0,3
    1488:	fffff5b7          	lui	a1,0xfffff
    148c:	fff58593          	addi	a1,a1,-1 # ffffefff <_end+0xffff8ffb>
    1490:	00b56633          	or	a2,a0,a1
    1494:	06c32c23          	sw	a2,120(t1)

00001498 <inst_50>:

inst_50:
// rs2_val == -8193, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x80000000;  op2val:-0x2001
TEST_RR_OP(or, x12, x10, x11, 0xffffdfff, -0x80000000, -0x2001, x6, 124, x8)
    1498:	80000537          	lui	a0,0x80000
    149c:	ffffe5b7          	lui	a1,0xffffe
    14a0:	fff58593          	addi	a1,a1,-1 # ffffdfff <_end+0xffff7ffb>
    14a4:	00b56633          	or	a2,a0,a1
    14a8:	06c32e23          	sw	a2,124(t1)

000014ac <inst_51>:

inst_51:
// rs2_val == -16385, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:-0x4001
TEST_RR_OP(or, x12, x10, x11, 0xffffbfff, 0x5, -0x4001, x6, 128, x8)
    14ac:	00500513          	li	a0,5
    14b0:	ffffc5b7          	lui	a1,0xffffc
    14b4:	fff58593          	addi	a1,a1,-1 # ffffbfff <_end+0xffff5ffb>
    14b8:	00b56633          	or	a2,a0,a1
    14bc:	08c32023          	sw	a2,128(t1)

000014c0 <inst_52>:

inst_52:
// rs2_val == -32769, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x800001;  op2val:-0x8001
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x800001, -0x8001, x6, 132, x8)
    14c0:	ff800537          	lui	a0,0xff800
    14c4:	fff50513          	addi	a0,a0,-1 # ff7fffff <_end+0xff7f9ffb>
    14c8:	ffff85b7          	lui	a1,0xffff8
    14cc:	fff58593          	addi	a1,a1,-1 # ffff7fff <_end+0xffff1ffb>
    14d0:	00b56633          	or	a2,a0,a1
    14d4:	08c32223          	sw	a2,132(t1)

000014d8 <inst_53>:

inst_53:
// rs2_val == -65537, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x9;  op2val:-0x10001
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x9, -0x10001, x6, 136, x8)
    14d8:	ff700513          	li	a0,-9
    14dc:	ffff05b7          	lui	a1,0xffff0
    14e0:	fff58593          	addi	a1,a1,-1 # fffeffff <_end+0xfffe9ffb>
    14e4:	00b56633          	or	a2,a0,a1
    14e8:	08c32423          	sw	a2,136(t1)

000014ec <inst_54>:

inst_54:
// rs2_val == -131073, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:-0x20001
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0xb503, -0x20001, x6, 140, x8)
    14ec:	ffff5537          	lui	a0,0xffff5
    14f0:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffeeaf9>
    14f4:	fffe05b7          	lui	a1,0xfffe0
    14f8:	fff58593          	addi	a1,a1,-1 # fffdffff <_end+0xfffd9ffb>
    14fc:	00b56633          	or	a2,a0,a1
    1500:	08c32623          	sw	a2,140(t1)

00001504 <inst_55>:

inst_55:
// rs2_val == -262145, rs1_val == -33
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x21;  op2val:-0x40001
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x21, -0x40001, x6, 144, x8)
    1504:	fdf00513          	li	a0,-33
    1508:	fffc05b7          	lui	a1,0xfffc0
    150c:	fff58593          	addi	a1,a1,-1 # fffbffff <_end+0xfffb9ffb>
    1510:	00b56633          	or	a2,a0,a1
    1514:	08c32823          	sw	a2,144(t1)

00001518 <inst_56>:

inst_56:
// rs2_val == -524289, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:-0x80001
TEST_RR_OP(or, x12, x10, x11, 0xfff7ffff, 0xb503, -0x80001, x6, 148, x8)
    1518:	0000b537          	lui	a0,0xb
    151c:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    1520:	fff805b7          	lui	a1,0xfff80
    1524:	fff58593          	addi	a1,a1,-1 # fff7ffff <_end+0xfff79ffb>
    1528:	00b56633          	or	a2,a0,a1
    152c:	08c32a23          	sw	a2,148(t1)

00001530 <inst_57>:

inst_57:
// rs2_val == -2097153, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:-0x200001
TEST_RR_OP(or, x12, x10, x11, 0xffdfffff, 0x55555555, -0x200001, x6, 152, x8)
    1530:	55555537          	lui	a0,0x55555
    1534:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1538:	ffe005b7          	lui	a1,0xffe00
    153c:	fff58593          	addi	a1,a1,-1 # ffdfffff <_end+0xffdf9ffb>
    1540:	00b56633          	or	a2,a0,a1
    1544:	08c32c23          	sw	a2,152(t1)

00001548 <inst_58>:

inst_58:
// rs2_val == -4194305, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:-0x400001
TEST_RR_OP(or, x12, x10, x11, 0xffbfffff, 0x3, -0x400001, x6, 156, x8)
    1548:	00300513          	li	a0,3
    154c:	ffc005b7          	lui	a1,0xffc00
    1550:	fff58593          	addi	a1,a1,-1 # ffbfffff <_end+0xffbf9ffb>
    1554:	00b56633          	or	a2,a0,a1
    1558:	08c32e23          	sw	a2,156(t1)

0000155c <inst_59>:

inst_59:
// rs2_val == -8388609, rs1_val == -257
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x101;  op2val:-0x800001
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x101, -0x800001, x6, 160, x8)
    155c:	eff00513          	li	a0,-257
    1560:	ff8005b7          	lui	a1,0xff800
    1564:	fff58593          	addi	a1,a1,-1 # ff7fffff <_end+0xff7f9ffb>
    1568:	00b56633          	or	a2,a0,a1
    156c:	0ac32023          	sw	a2,160(t1)

00001570 <inst_60>:

inst_60:
// rs2_val == -16777217, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:-0x1000001
TEST_RR_OP(or, x12, x10, x11, 0xfeffffff, 0x66666666, -0x1000001, x6, 164, x8)
    1570:	66666537          	lui	a0,0x66666
    1574:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    1578:	ff0005b7          	lui	a1,0xff000
    157c:	fff58593          	addi	a1,a1,-1 # feffffff <_end+0xfeff9ffb>
    1580:	00b56633          	or	a2,a0,a1
    1584:	0ac32223          	sw	a2,164(t1)

00001588 <inst_61>:

inst_61:
// rs2_val == -33554433, rs1_val == -32769
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x8001;  op2val:-0x2000001
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x8001, -0x2000001, x6, 168, x8)
    1588:	ffff8537          	lui	a0,0xffff8
    158c:	fff50513          	addi	a0,a0,-1 # ffff7fff <_end+0xffff1ffb>
    1590:	fe0005b7          	lui	a1,0xfe000
    1594:	fff58593          	addi	a1,a1,-1 # fdffffff <_end+0xfdff9ffb>
    1598:	00b56633          	or	a2,a0,a1
    159c:	0ac32423          	sw	a2,168(t1)

000015a0 <inst_62>:

inst_62:
// rs2_val == -67108865, rs1_val == 65536
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:-0x4000001
TEST_RR_OP(or, x12, x10, x11, 0xfbffffff, 0x10000, -0x4000001, x6, 172, x8)
    15a0:	00010537          	lui	a0,0x10
    15a4:	fc0005b7          	lui	a1,0xfc000
    15a8:	fff58593          	addi	a1,a1,-1 # fbffffff <_end+0xfbff9ffb>
    15ac:	00b56633          	or	a2,a0,a1
    15b0:	0ac32623          	sw	a2,172(t1)

000015b4 <inst_63>:

inst_63:
// rs2_val == -134217729, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:-0x8000001
TEST_RR_OP(or, x12, x10, x11, 0xf7ffffff, 0x66666665, -0x8000001, x6, 176, x8)
    15b4:	66666537          	lui	a0,0x66666
    15b8:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    15bc:	f80005b7          	lui	a1,0xf8000
    15c0:	fff58593          	addi	a1,a1,-1 # f7ffffff <_end+0xf7ff9ffb>
    15c4:	00b56633          	or	a2,a0,a1
    15c8:	0ac32823          	sw	a2,176(t1)

000015cc <inst_64>:

inst_64:
// rs2_val == -268435457, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x40000000;  op2val:-0x10000001
TEST_RR_OP(or, x12, x10, x11, 0xefffffff, -0x40000000, -0x10000001, x6, 180, x8)
    15cc:	c0000537          	lui	a0,0xc0000
    15d0:	f00005b7          	lui	a1,0xf0000
    15d4:	fff58593          	addi	a1,a1,-1 # efffffff <_end+0xefff9ffb>
    15d8:	00b56633          	or	a2,a0,a1
    15dc:	0ac32a23          	sw	a2,180(t1)

000015e0 <inst_65>:

inst_65:
// rs2_val == -536870913, rs1_val == 512
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x200;  op2val:-0x20000001
TEST_RR_OP(or, x12, x10, x11, 0xdfffffff, 0x200, -0x20000001, x6, 184, x8)
    15e0:	20000513          	li	a0,512
    15e4:	e00005b7          	lui	a1,0xe0000
    15e8:	fff58593          	addi	a1,a1,-1 # dfffffff <_end+0xdfff9ffb>
    15ec:	00b56633          	or	a2,a0,a1
    15f0:	0ac32c23          	sw	a2,184(t1)

000015f4 <inst_66>:

inst_66:
// rs2_val == -1073741825, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:-0x40000001
TEST_RR_OP(or, x12, x10, x11, 0xbfffffff, -0x55555555, -0x40000001, x6, 188, x8)
    15f4:	aaaab537          	lui	a0,0xaaaab
    15f8:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    15fc:	c00005b7          	lui	a1,0xc0000
    1600:	fff58593          	addi	a1,a1,-1 # bfffffff <_end+0xbfff9ffb>
    1604:	00b56633          	or	a2,a0,a1
    1608:	0ac32e23          	sw	a2,188(t1)

0000160c <inst_67>:

inst_67:
// rs2_val == 1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x4;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xfffffffd, -0x4, 0x55555555, x6, 192, x8)
    160c:	ffc00513          	li	a0,-4
    1610:	555555b7          	lui	a1,0x55555
    1614:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    1618:	00b56633          	or	a2,a0,a1
    161c:	0cc32023          	sw	a2,192(t1)

00001620 <inst_68>:

inst_68:
// rs2_val == -1431655766, rs1_val == -536870913
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x20000001;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x20000001, -0x55555556, x6, 196, x8)
    1620:	e0000537          	lui	a0,0xe0000
    1624:	fff50513          	addi	a0,a0,-1 # dfffffff <_end+0xdfff9ffb>
    1628:	aaaab5b7          	lui	a1,0xaaaab
    162c:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1630:	00b56633          	or	a2,a0,a1
    1634:	0cc32223          	sw	a2,196(t1)

00001638 <inst_69>:

inst_69:
// rs1_val == 16, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x10;  op2val:-0x7
TEST_RR_OP(or, x12, x10, x11, 0xfffffff9, 0x10, -0x7, x6, 200, x8)
    1638:	01000513          	li	a0,16
    163c:	ff900593          	li	a1,-7
    1640:	00b56633          	or	a2,a0,a1
    1644:	0cc32423          	sw	a2,200(t1)

00001648 <inst_70>:

inst_70:
// rs1_val == 128, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x80;  op2val:-0x7
TEST_RR_OP(or, x12, x10, x11, 0xfffffff9, 0x80, -0x7, x6, 204, x8)
    1648:	08000513          	li	a0,128
    164c:	ff900593          	li	a1,-7
    1650:	00b56633          	or	a2,a0,a1
    1654:	0cc32623          	sw	a2,204(t1)

00001658 <inst_71>:

inst_71:
// rs1_val == 256, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x100;  op2val:-0x4000001
TEST_RR_OP(or, x12, x10, x11, 0xfbffffff, 0x100, -0x4000001, x6, 208, x8)
    1658:	10000513          	li	a0,256
    165c:	fc0005b7          	lui	a1,0xfc000
    1660:	fff58593          	addi	a1,a1,-1 # fbffffff <_end+0xfbff9ffb>
    1664:	00b56633          	or	a2,a0,a1
    1668:	0cc32823          	sw	a2,208(t1)

0000166c <inst_72>:

inst_72:
// rs1_val == 1024, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x400;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaeaa, 0x400, -0x55555556, x6, 212, x8)
    166c:	40000513          	li	a0,1024
    1670:	aaaab5b7          	lui	a1,0xaaaab
    1674:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1678:	00b56633          	or	a2,a0,a1
    167c:	0cc32a23          	sw	a2,212(t1)

00001680 <inst_73>:

inst_73:
// rs1_val == 2048, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x800;  op2val:-0x200001
TEST_RR_OP(or, x12, x10, x11, 0xffdfffff, 0x800, -0x200001, x6, 216, x8)
    1680:	00001537          	lui	a0,0x1
    1684:	80050513          	addi	a0,a0,-2048 # 800 <offset+0x720>
    1688:	ffe005b7          	lui	a1,0xffe00
    168c:	fff58593          	addi	a1,a1,-1 # ffdfffff <_end+0xffdf9ffb>
    1690:	00b56633          	or	a2,a0,a1
    1694:	0cc32c23          	sw	a2,216(t1)

00001698 <inst_74>:

inst_74:
// rs1_val == 8192, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2000;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xb503, 0x2000, 0xb503, x6, 220, x8)
    1698:	00002537          	lui	a0,0x2
    169c:	0000b5b7          	lui	a1,0xb
    16a0:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    16a4:	00b56633          	or	a2,a0,a1
    16a8:	0cc32e23          	sw	a2,220(t1)

000016ac <inst_75>:

inst_75:
// rs1_val == 16384, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4000;  op2val:-0x6
TEST_RR_OP(or, x12, x10, x11, 0xfffffffa, 0x4000, -0x6, x6, 224, x8)
    16ac:	00004537          	lui	a0,0x4
    16b0:	ffa00593          	li	a1,-6
    16b4:	00b56633          	or	a2,a0,a1
    16b8:	0ec32023          	sw	a2,224(t1)

000016bc <inst_76>:

inst_76:
// rs1_val == 32768, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x8000;  op2val:0x800
TEST_RR_OP(or, x12, x10, x11, 0x8800, 0x8000, 0x800, x6, 228, x8)
    16bc:	00008537          	lui	a0,0x8
    16c0:	000015b7          	lui	a1,0x1
    16c4:	80058593          	addi	a1,a1,-2048 # 800 <offset+0x720>
    16c8:	00b56633          	or	a2,a0,a1
    16cc:	0ec32223          	sw	a2,228(t1)

000016d0 <inst_77>:

inst_77:
// rs1_val == 262144, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x40000;  op2val:-0x1000001
TEST_RR_OP(or, x12, x10, x11, 0xfeffffff, 0x40000, -0x1000001, x6, 232, x8)
    16d0:	00040537          	lui	a0,0x40
    16d4:	ff0005b7          	lui	a1,0xff000
    16d8:	fff58593          	addi	a1,a1,-1 # feffffff <_end+0xfeff9ffb>
    16dc:	00b56633          	or	a2,a0,a1
    16e0:	0ec32423          	sw	a2,232(t1)

000016e4 <inst_78>:

inst_78:
// rs1_val == 2097152, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x200000;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x200000, 0x200000, 0x0, x6, 236, x8)
    16e4:	00200537          	lui	a0,0x200
    16e8:	00000593          	li	a1,0
    16ec:	00b56633          	or	a2,a0,a1
    16f0:	0ec32623          	sw	a2,236(t1)

000016f4 <inst_79>:

inst_79:
// rs1_val == 4194304, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x400000;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff4afd, 0x400000, -0xb503, x6, 240, x8)
    16f4:	00400537          	lui	a0,0x400
    16f8:	ffff55b7          	lui	a1,0xffff5
    16fc:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0xfffeeaf9>
    1700:	00b56633          	or	a2,a0,a1
    1704:	0ec32823          	sw	a2,240(t1)

00001708 <inst_80>:

inst_80:
// rs1_val == 33554432, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2000000;  op2val:0x3fffffff
TEST_RR_OP(or, x12, x10, x11, 0x3fffffff, 0x2000000, 0x3fffffff, x6, 244, x8)
    1708:	02000537          	lui	a0,0x2000
    170c:	400005b7          	lui	a1,0x40000
    1710:	fff58593          	addi	a1,a1,-1 # 3fffffff <_end+0x3fff9ffb>
    1714:	00b56633          	or	a2,a0,a1
    1718:	0ec32a23          	sw	a2,244(t1)

0000171c <inst_81>:

inst_81:
// rs1_val == 67108864, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4000000;  op2val:-0x80001
TEST_RR_OP(or, x12, x10, x11, 0xfff7ffff, 0x4000000, -0x80001, x6, 248, x8)
    171c:	04000537          	lui	a0,0x4000
    1720:	fff805b7          	lui	a1,0xfff80
    1724:	fff58593          	addi	a1,a1,-1 # fff7ffff <_end+0xfff79ffb>
    1728:	00b56633          	or	a2,a0,a1
    172c:	0ec32c23          	sw	a2,248(t1)

00001730 <inst_82>:

inst_82:
// rs1_val == 134217728, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x8000000;  op2val:0x20
TEST_RR_OP(or, x12, x10, x11, 0x8000020, 0x8000000, 0x20, x6, 252, x8)
    1730:	08000537          	lui	a0,0x8000
    1734:	02000593          	li	a1,32
    1738:	00b56633          	or	a2,a0,a1
    173c:	0ec32e23          	sw	a2,252(t1)

00001740 <inst_83>:

inst_83:
// rs1_val == 536870912, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x20000000;  op2val:-0x2001
TEST_RR_OP(or, x12, x10, x11, 0xffffdfff, 0x20000000, -0x2001, x6, 256, x8)
    1740:	20000537          	lui	a0,0x20000
    1744:	ffffe5b7          	lui	a1,0xffffe
    1748:	fff58593          	addi	a1,a1,-1 # ffffdfff <_end+0xffff7ffb>
    174c:	00b56633          	or	a2,a0,a1
    1750:	10c32023          	sw	a2,256(t1)

00001754 <inst_84>:

inst_84:
// rs1_val == 1073741824, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x40000000;  op2val:0x8
TEST_RR_OP(or, x12, x10, x11, 0x40000008, 0x40000000, 0x8, x6, 260, x8)
    1754:	40000537          	lui	a0,0x40000
    1758:	00800593          	li	a1,8
    175c:	00b56633          	or	a2,a0,a1
    1760:	10c32223          	sw	a2,260(t1)

00001764 <inst_85>:

inst_85:
// rs1_val == -2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x2;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0xfffffffe, -0x2, 0x4, x6, 264, x8)
    1764:	ffe00513          	li	a0,-2
    1768:	00400593          	li	a1,4
    176c:	00b56633          	or	a2,a0,a1
    1770:	10c32423          	sw	a2,264(t1)

00001774 <inst_86>:

inst_86:
// rs1_val == -3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x3;  op2val:-0x8
TEST_RR_OP(or, x12, x10, x11, 0xfffffffd, -0x3, -0x8, x6, 268, x8)
    1774:	ffd00513          	li	a0,-3
    1778:	ff800593          	li	a1,-8
    177c:	00b56633          	or	a2,a0,a1
    1780:	10c32623          	sw	a2,268(t1)

00001784 <inst_87>:

inst_87:
// rs1_val == -5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x5;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x5, -0xb503, x6, 272, x8)
    1784:	ffb00513          	li	a0,-5
    1788:	ffff55b7          	lui	a1,0xffff5
    178c:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0xfffeeaf9>
    1790:	00b56633          	or	a2,a0,a1
    1794:	10c32823          	sw	a2,272(t1)

00001798 <inst_88>:

inst_88:
// rs1_val == -17, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x11;  op2val:-0x400001
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x11, -0x400001, x6, 276, x8)
    1798:	fef00513          	li	a0,-17
    179c:	ffc005b7          	lui	a1,0xffc00
    17a0:	fff58593          	addi	a1,a1,-1 # ffbfffff <_end+0xffbf9ffb>
    17a4:	00b56633          	or	a2,a0,a1
    17a8:	10c32a23          	sw	a2,276(t1)

000017ac <inst_89>:

inst_89:
// rs1_val == -65, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x41;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0xffffffbf, -0x41, 0x5, x6, 280, x8)
    17ac:	fbf00513          	li	a0,-65
    17b0:	00500593          	li	a1,5
    17b4:	00b56633          	or	a2,a0,a1
    17b8:	10c32c23          	sw	a2,280(t1)

000017bc <inst_90>:

inst_90:
// rs1_val == -129, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x81;  op2val:0x800000
TEST_RR_OP(or, x12, x10, x11, 0xffffff7f, -0x81, 0x800000, x6, 284, x8)
    17bc:	f7f00513          	li	a0,-129
    17c0:	008005b7          	lui	a1,0x800
    17c4:	00b56633          	or	a2,a0,a1
    17c8:	10c32e23          	sw	a2,284(t1)

000017cc <inst_91>:

inst_91:
// rs1_val == -16385, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x4001;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffffbfff, -0x4001, 0xb503, x6, 288, x8)
    17cc:	ffffc537          	lui	a0,0xffffc
    17d0:	fff50513          	addi	a0,a0,-1 # ffffbfff <_end+0xffff5ffb>
    17d4:	0000b5b7          	lui	a1,0xb
    17d8:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    17dc:	00b56633          	or	a2,a0,a1
    17e0:	12c32023          	sw	a2,288(t1)

000017e4 <inst_92>:

inst_92:
// rs1_val == -131073, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x20001;  op2val:-0x4001
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x20001, -0x4001, x6, 292, x8)
    17e4:	fffe0537          	lui	a0,0xfffe0
    17e8:	fff50513          	addi	a0,a0,-1 # fffdffff <_end+0xfffd9ffb>
    17ec:	ffffc5b7          	lui	a1,0xffffc
    17f0:	fff58593          	addi	a1,a1,-1 # ffffbfff <_end+0xffff5ffb>
    17f4:	00b56633          	or	a2,a0,a1
    17f8:	12c32223          	sw	a2,292(t1)

000017fc <inst_93>:

inst_93:
// rs1_val == -262145, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x40001;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xfffbffff, -0x40001, -0x55555556, x6, 296, x8)
    17fc:	fffc0537          	lui	a0,0xfffc0
    1800:	fff50513          	addi	a0,a0,-1 # fffbffff <_end+0xfffb9ffb>
    1804:	aaaab5b7          	lui	a1,0xaaaab
    1808:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    180c:	00b56633          	or	a2,a0,a1
    1810:	12c32423          	sw	a2,296(t1)

00001814 <inst_94>:

inst_94:
// rs1_val == -524289, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x80001;  op2val:-0x41
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x80001, -0x41, x6, 300, x8)
    1814:	fff80537          	lui	a0,0xfff80
    1818:	fff50513          	addi	a0,a0,-1 # fff7ffff <_end+0xfff79ffb>
    181c:	fbf00593          	li	a1,-65
    1820:	00b56633          	or	a2,a0,a1
    1824:	12c32623          	sw	a2,300(t1)

00001828 <inst_95>:

inst_95:
// rs1_val == -4194305, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x400001;  op2val:-0x101
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x400001, -0x101, x6, 304, x8)
    1828:	ffc00537          	lui	a0,0xffc00
    182c:	fff50513          	addi	a0,a0,-1 # ffbfffff <_end+0xffbf9ffb>
    1830:	eff00593          	li	a1,-257
    1834:	00b56633          	or	a2,a0,a1
    1838:	12c32823          	sw	a2,304(t1)

0000183c <inst_96>:

inst_96:
// rs1_val == -16777217, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x1000001;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0xfeffffff, -0x1000001, 0x0, x6, 308, x8)
    183c:	ff000537          	lui	a0,0xff000
    1840:	fff50513          	addi	a0,a0,-1 # feffffff <_end+0xfeff9ffb>
    1844:	00000593          	li	a1,0
    1848:	00b56633          	or	a2,a0,a1
    184c:	12c32a23          	sw	a2,308(t1)

00001850 <inst_97>:

inst_97:
// rs1_val == -33554433, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x2000001;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0xfdffffff, -0x2000001, 0x4, x6, 312, x8)
    1850:	fe000537          	lui	a0,0xfe000
    1854:	fff50513          	addi	a0,a0,-1 # fdffffff <_end+0xfdff9ffb>
    1858:	00400593          	li	a1,4
    185c:	00b56633          	or	a2,a0,a1
    1860:	12c32c23          	sw	a2,312(t1)

00001864 <inst_98>:

inst_98:
// rs1_val == -134217729, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x8000001;  op2val:-0x5
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x8000001, -0x5, x6, 316, x8)
    1864:	f8000537          	lui	a0,0xf8000
    1868:	fff50513          	addi	a0,a0,-1 # f7ffffff <_end+0xf7ff9ffb>
    186c:	ffb00593          	li	a1,-5
    1870:	00b56633          	or	a2,a0,a1
    1874:	12c32e23          	sw	a2,316(t1)

00001878 <inst_99>:

inst_99:
// rs1_val == -1073741825, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x40000001;  op2val:-0x40000001
TEST_RR_OP(or, x12, x10, x11, 0xbfffffff, -0x40000001, -0x40000001, x6, 320, x8)
    1878:	c0000537          	lui	a0,0xc0000
    187c:	fff50513          	addi	a0,a0,-1 # bfffffff <_end+0xbfff9ffb>
    1880:	c00005b7          	lui	a1,0xc0000
    1884:	fff58593          	addi	a1,a1,-1 # bfffffff <_end+0xbfff9ffb>
    1888:	00b56633          	or	a2,a0,a1
    188c:	14c32023          	sw	a2,320(t1)

00001890 <inst_100>:

inst_100:
// rs1_val==3 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x3, 0x3, 0x3, x6, 324, x8)
    1890:	00300513          	li	a0,3
    1894:	00300593          	li	a1,3
    1898:	00b56633          	or	a2,a0,a1
    189c:	14c32223          	sw	a2,324(t1)

000018a0 <inst_101>:

inst_101:
// rs1_val==3 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x3, 0x55555555, x6, 328, x8)
    18a0:	00300513          	li	a0,3
    18a4:	555555b7          	lui	a1,0x55555
    18a8:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    18ac:	00b56633          	or	a2,a0,a1
    18b0:	14c32423          	sw	a2,328(t1)

000018b4 <inst_102>:

inst_102:
// rs1_val==3 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaab, 0x3, -0x55555556, x6, 332, x8)
    18b4:	00300513          	li	a0,3
    18b8:	aaaab5b7          	lui	a1,0xaaaab
    18bc:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    18c0:	00b56633          	or	a2,a0,a1
    18c4:	14c32623          	sw	a2,332(t1)

000018c8 <inst_103>:

inst_103:
// rs1_val==3 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x7, 0x3, 0x5, x6, 336, x8)
    18c8:	00300513          	li	a0,3
    18cc:	00500593          	li	a1,5
    18d0:	00b56633          	or	a2,a0,a1
    18d4:	14c32823          	sw	a2,336(t1)

000018d8 <inst_104>:

inst_104:
// rs1_val==3 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x33333333, 0x3, 0x33333333, x6, 340, x8)
    18d8:	00300513          	li	a0,3
    18dc:	333335b7          	lui	a1,0x33333
    18e0:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    18e4:	00b56633          	or	a2,a0,a1
    18e8:	14c32a23          	sw	a2,340(t1)

000018ec <inst_105>:

inst_105:
// rs1_val==3 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x3, 0x66666666, x6, 344, x8)
    18ec:	00300513          	li	a0,3
    18f0:	666665b7          	lui	a1,0x66666
    18f4:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    18f8:	00b56633          	or	a2,a0,a1
    18fc:	14c32c23          	sw	a2,344(t1)

00001900 <inst_106>:

inst_106:
// rs1_val==3 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff4aff, 0x3, -0xb504, x6, 348, x8)
    1900:	00300513          	li	a0,3
    1904:	ffff55b7          	lui	a1,0xffff5
    1908:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0xfffeeaf8>
    190c:	00b56633          	or	a2,a0,a1
    1910:	14c32e23          	sw	a2,348(t1)

00001914 <inst_107>:

inst_107:
// rs1_val==3 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0x3, 0xb504, x6, 352, x8)
    1914:	00300513          	li	a0,3
    1918:	0000b5b7          	lui	a1,0xb
    191c:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    1920:	00b56633          	or	a2,a0,a1
    1924:	16c32023          	sw	a2,352(t1)

00001928 <inst_108>:

inst_108:
// rs1_val==3 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x3, 0x3, 0x2, x6, 356, x8)
    1928:	00300513          	li	a0,3
    192c:	00200593          	li	a1,2
    1930:	00b56633          	or	a2,a0,a1
    1934:	16c32223          	sw	a2,356(t1)

00001938 <inst_109>:

inst_109:
// rs1_val==3 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x3, 0x55555554, x6, 360, x8)
    1938:	00300513          	li	a0,3
    193c:	555555b7          	lui	a1,0x55555
    1940:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    1944:	00b56633          	or	a2,a0,a1
    1948:	16c32423          	sw	a2,360(t1)

0000194c <inst_110>:

inst_110:
// rs1_val==3 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x3, 0x3, 0x0, x6, 364, x8)
    194c:	00300513          	li	a0,3
    1950:	00000593          	li	a1,0
    1954:	00b56633          	or	a2,a0,a1
    1958:	16c32623          	sw	a2,364(t1)

0000195c <inst_111>:

inst_111:
// rs1_val==3 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x7, 0x3, 0x4, x6, 368, x8)
    195c:	00300513          	li	a0,3
    1960:	00400593          	li	a1,4
    1964:	00b56633          	or	a2,a0,a1
    1968:	16c32823          	sw	a2,368(t1)

0000196c <inst_112>:

inst_112:
// rs1_val==3 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x33333333, 0x3, 0x33333332, x6, 372, x8)
    196c:	00300513          	li	a0,3
    1970:	333335b7          	lui	a1,0x33333
    1974:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    1978:	00b56633          	or	a2,a0,a1
    197c:	16c32a23          	sw	a2,372(t1)

00001980 <inst_113>:

inst_113:
// rs1_val==3 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x3, 0x66666665, x6, 376, x8)
    1980:	00300513          	li	a0,3
    1984:	666665b7          	lui	a1,0x66666
    1988:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    198c:	00b56633          	or	a2,a0,a1
    1990:	16c32c23          	sw	a2,376(t1)

00001994 <inst_114>:

inst_114:
// rs1_val==3 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xb503, 0x3, 0xb503, x6, 380, x8)
    1994:	00300513          	li	a0,3
    1998:	0000b5b7          	lui	a1,0xb
    199c:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    19a0:	00b56633          	or	a2,a0,a1
    19a4:	16c32e23          	sw	a2,380(t1)

000019a8 <inst_115>:

inst_115:
// rs1_val==3 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x3, 0x55555556, x6, 384, x8)
    19a8:	00300513          	li	a0,3
    19ac:	555555b7          	lui	a1,0x55555
    19b0:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    19b4:	00b56633          	or	a2,a0,a1
    19b8:	18c32023          	sw	a2,384(t1)

000019bc <inst_116>:

inst_116:
// rs1_val==3 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaab, 0x3, -0x55555555, x6, 388, x8)
    19bc:	00300513          	li	a0,3
    19c0:	aaaab5b7          	lui	a1,0xaaaab
    19c4:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    19c8:	00b56633          	or	a2,a0,a1
    19cc:	18c32223          	sw	a2,388(t1)

000019d0 <inst_117>:

inst_117:
// rs1_val==3 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x7, 0x3, 0x6, x6, 392, x8)
    19d0:	00300513          	li	a0,3
    19d4:	00600593          	li	a1,6
    19d8:	00b56633          	or	a2,a0,a1
    19dc:	18c32423          	sw	a2,392(t1)

000019e0 <inst_118>:

inst_118:
// rs1_val==3 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x33333337, 0x3, 0x33333334, x6, 396, x8)
    19e0:	00300513          	li	a0,3
    19e4:	333335b7          	lui	a1,0x33333
    19e8:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    19ec:	00b56633          	or	a2,a0,a1
    19f0:	18c32623          	sw	a2,396(t1)

000019f4 <inst_119>:

inst_119:
// rs1_val==3 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x3, 0x66666667, x6, 400, x8)
    19f4:	00300513          	li	a0,3
    19f8:	666665b7          	lui	a1,0x66666
    19fc:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    1a00:	00b56633          	or	a2,a0,a1
    1a04:	18c32823          	sw	a2,400(t1)

00001a08 <inst_120>:

inst_120:
// rs1_val==3 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff4aff, 0x3, -0xb503, x6, 404, x8)
    1a08:	00300513          	li	a0,3
    1a0c:	ffff55b7          	lui	a1,0xffff5
    1a10:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0xfffeeaf9>
    1a14:	00b56633          	or	a2,a0,a1
    1a18:	18c32a23          	sw	a2,404(t1)

00001a1c <inst_121>:

inst_121:
// rs1_val==3 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0x3, 0xb505, x6, 408, x8)
    1a1c:	00300513          	li	a0,3
    1a20:	0000b5b7          	lui	a1,0xb
    1a24:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    1a28:	00b56633          	or	a2,a0,a1
    1a2c:	18c32c23          	sw	a2,408(t1)

00001a30 <inst_122>:

inst_122:
// rs1_val==1431655765 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x55555555, 0x3, x6, 412, x8)
    1a30:	55555537          	lui	a0,0x55555
    1a34:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1a38:	00300593          	li	a1,3
    1a3c:	00b56633          	or	a2,a0,a1
    1a40:	18c32e23          	sw	a2,412(t1)

00001a44 <inst_123>:

inst_123:
// rs1_val==1431655765 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x55555555, 0x55555555, 0x55555555, x6, 416, x8)
    1a44:	55555537          	lui	a0,0x55555
    1a48:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1a4c:	555555b7          	lui	a1,0x55555
    1a50:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    1a54:	00b56633          	or	a2,a0,a1
    1a58:	1ac32023          	sw	a2,416(t1)

00001a5c <inst_124>:

inst_124:
// rs1_val==1431655765 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, 0x55555555, -0x55555556, x6, 420, x8)
    1a5c:	55555537          	lui	a0,0x55555
    1a60:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1a64:	aaaab5b7          	lui	a1,0xaaaab
    1a68:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1a6c:	00b56633          	or	a2,a0,a1
    1a70:	1ac32223          	sw	a2,420(t1)

00001a74 <inst_125>:

inst_125:
// rs1_val==1431655765 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x55555555, 0x55555555, 0x5, x6, 424, x8)
    1a74:	55555537          	lui	a0,0x55555
    1a78:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1a7c:	00500593          	li	a1,5
    1a80:	00b56633          	or	a2,a0,a1
    1a84:	1ac32423          	sw	a2,424(t1)

00001a88 <inst_126>:

inst_126:
// rs1_val==1431655765 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x55555555, 0x33333333, x6, 428, x8)
    1a88:	55555537          	lui	a0,0x55555
    1a8c:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1a90:	333335b7          	lui	a1,0x33333
    1a94:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    1a98:	00b56633          	or	a2,a0,a1
    1a9c:	1ac32623          	sw	a2,428(t1)

00001aa0 <inst_127>:

inst_127:
// rs1_val==1431655765 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x55555555, 0x66666666, x6, 432, x8)
    1aa0:	55555537          	lui	a0,0x55555
    1aa4:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1aa8:	666665b7          	lui	a1,0x66666
    1aac:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    1ab0:	00b56633          	or	a2,a0,a1
    1ab4:	1ac32823          	sw	a2,432(t1)

00001ab8 <inst_128>:

inst_128:
// rs1_val==1431655765 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff5ffd, 0x55555555, -0xb504, x6, 436, x8)
    1ab8:	55555537          	lui	a0,0x55555
    1abc:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1ac0:	ffff55b7          	lui	a1,0xffff5
    1ac4:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0xfffeeaf8>
    1ac8:	00b56633          	or	a2,a0,a1
    1acc:	1ac32a23          	sw	a2,436(t1)

00001ad0 <inst_129>:

inst_129:
// rs1_val==1431655765 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0x5555f555, 0x55555555, 0xb504, x6, 440, x8)
    1ad0:	55555537          	lui	a0,0x55555
    1ad4:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1ad8:	0000b5b7          	lui	a1,0xb
    1adc:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    1ae0:	00b56633          	or	a2,a0,a1
    1ae4:	1ac32c23          	sw	a2,440(t1)

00001ae8 <inst_130>:

inst_130:
// rs1_val==1431655765 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x55555555, 0x2, x6, 444, x8)
    1ae8:	55555537          	lui	a0,0x55555
    1aec:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1af0:	00200593          	li	a1,2
    1af4:	00b56633          	or	a2,a0,a1
    1af8:	1ac32e23          	sw	a2,444(t1)

00001afc <inst_131>:

inst_131:
// rs1_val==1431655765 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x55555555, 0x55555555, 0x55555554, x6, 448, x8)
    1afc:	55555537          	lui	a0,0x55555
    1b00:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1b04:	555555b7          	lui	a1,0x55555
    1b08:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    1b0c:	00b56633          	or	a2,a0,a1
    1b10:	1cc32023          	sw	a2,448(t1)

00001b14 <inst_132>:

inst_132:
// rs1_val==1431655765 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x55555555, 0x55555555, 0x0, x6, 452, x8)
    1b14:	55555537          	lui	a0,0x55555
    1b18:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1b1c:	00000593          	li	a1,0
    1b20:	00b56633          	or	a2,a0,a1
    1b24:	1cc32223          	sw	a2,452(t1)

00001b28 <inst_133>:

inst_133:
// rs1_val==1431655765 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x55555555, 0x55555555, 0x4, x6, 456, x8)
    1b28:	55555537          	lui	a0,0x55555
    1b2c:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1b30:	00400593          	li	a1,4
    1b34:	00b56633          	or	a2,a0,a1
    1b38:	1cc32423          	sw	a2,456(t1)

00001b3c <inst_134>:

inst_134:
// rs1_val==1431655765 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x55555555, 0x33333332, x6, 460, x8)
    1b3c:	55555537          	lui	a0,0x55555
    1b40:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1b44:	333335b7          	lui	a1,0x33333
    1b48:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    1b4c:	00b56633          	or	a2,a0,a1
    1b50:	1cc32623          	sw	a2,460(t1)

00001b54 <inst_135>:

inst_135:
// rs1_val==1431655765 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x77777775, 0x55555555, 0x66666665, x6, 464, x8)
    1b54:	55555537          	lui	a0,0x55555
    1b58:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1b5c:	666665b7          	lui	a1,0x66666
    1b60:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    1b64:	00b56633          	or	a2,a0,a1
    1b68:	1cc32823          	sw	a2,464(t1)

00001b6c <inst_136>:

inst_136:
// rs1_val==1431655765 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0x5555f557, 0x55555555, 0xb503, x6, 468, x8)
    1b6c:	55555537          	lui	a0,0x55555
    1b70:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1b74:	0000b5b7          	lui	a1,0xb
    1b78:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    1b7c:	00b56633          	or	a2,a0,a1
    1b80:	1cc32a23          	sw	a2,468(t1)

00001b84 <inst_137>:

inst_137:
// rs1_val==1431655765 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x55555555, 0x55555556, x6, 472, x8)
    1b84:	55555537          	lui	a0,0x55555
    1b88:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1b8c:	555555b7          	lui	a1,0x55555
    1b90:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    1b94:	00b56633          	or	a2,a0,a1
    1b98:	1cc32c23          	sw	a2,472(t1)

00001b9c <inst_138>:

inst_138:
// rs1_val==1431655765 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, 0x55555555, -0x55555555, x6, 476, x8)
    1b9c:	55555537          	lui	a0,0x55555
    1ba0:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1ba4:	aaaab5b7          	lui	a1,0xaaaab
    1ba8:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    1bac:	00b56633          	or	a2,a0,a1
    1bb0:	1cc32e23          	sw	a2,476(t1)

00001bb4 <inst_139>:

inst_139:
// rs1_val==1431655765 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x55555555, 0x6, x6, 480, x8)
    1bb4:	55555537          	lui	a0,0x55555
    1bb8:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1bbc:	00600593          	li	a1,6
    1bc0:	00b56633          	or	a2,a0,a1
    1bc4:	1ec32023          	sw	a2,480(t1)

00001bc8 <inst_140>:

inst_140:
// rs1_val==1431655765 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x77777775, 0x55555555, 0x33333334, x6, 484, x8)
    1bc8:	55555537          	lui	a0,0x55555
    1bcc:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1bd0:	333335b7          	lui	a1,0x33333
    1bd4:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    1bd8:	00b56633          	or	a2,a0,a1
    1bdc:	1ec32223          	sw	a2,484(t1)

00001be0 <inst_141>:

inst_141:
// rs1_val==1431655765 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x55555555, 0x66666667, x6, 488, x8)
    1be0:	55555537          	lui	a0,0x55555
    1be4:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1be8:	666665b7          	lui	a1,0x66666
    1bec:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    1bf0:	00b56633          	or	a2,a0,a1
    1bf4:	1ec32423          	sw	a2,488(t1)

00001bf8 <inst_142>:

inst_142:
// rs1_val==1431655765 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff5ffd, 0x55555555, -0xb503, x6, 492, x8)
    1bf8:	55555537          	lui	a0,0x55555
    1bfc:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1c00:	ffff55b7          	lui	a1,0xffff5
    1c04:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0xfffeeaf9>
    1c08:	00b56633          	or	a2,a0,a1
    1c0c:	1ec32623          	sw	a2,492(t1)

00001c10 <inst_143>:

inst_143:
// rs1_val==1431655765 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0x5555f555, 0x55555555, 0xb505, x6, 496, x8)
    1c10:	55555537          	lui	a0,0x55555
    1c14:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1c18:	0000b5b7          	lui	a1,0xb
    1c1c:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    1c20:	00b56633          	or	a2,a0,a1
    1c24:	1ec32823          	sw	a2,496(t1)

00001c28 <inst_144>:

inst_144:
// rs1_val==-1431655766 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaab, -0x55555556, 0x3, x6, 500, x8)
    1c28:	aaaab537          	lui	a0,0xaaaab
    1c2c:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1c30:	00300593          	li	a1,3
    1c34:	00b56633          	or	a2,a0,a1
    1c38:	1ec32a23          	sw	a2,500(t1)

00001c3c <inst_145>:

inst_145:
// rs1_val==-1431655766 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x55555556, 0x55555555, x6, 504, x8)
    1c3c:	aaaab537          	lui	a0,0xaaaab
    1c40:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1c44:	555555b7          	lui	a1,0x55555
    1c48:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    1c4c:	00b56633          	or	a2,a0,a1
    1c50:	1ec32c23          	sw	a2,504(t1)

00001c54 <inst_146>:

inst_146:
// rs1_val==-1431655766 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaa, -0x55555556, -0x55555556, x6, 508, x8)
    1c54:	aaaab537          	lui	a0,0xaaaab
    1c58:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1c5c:	aaaab5b7          	lui	a1,0xaaaab
    1c60:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1c64:	00b56633          	or	a2,a0,a1
    1c68:	1ec32e23          	sw	a2,508(t1)

00001c6c <inst_147>:

inst_147:
// rs1_val==-1431655766 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaf, -0x55555556, 0x5, x6, 512, x8)
    1c6c:	aaaab537          	lui	a0,0xaaaab
    1c70:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1c74:	00500593          	li	a1,5
    1c78:	00b56633          	or	a2,a0,a1
    1c7c:	20c32023          	sw	a2,512(t1)

00001c80 <inst_148>:

inst_148:
// rs1_val==-1431655766 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0xbbbbbbbb, -0x55555556, 0x33333333, x6, 516, x8)
    1c80:	aaaab537          	lui	a0,0xaaaab
    1c84:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1c88:	333335b7          	lui	a1,0x33333
    1c8c:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    1c90:	00b56633          	or	a2,a0,a1
    1c94:	20c32223          	sw	a2,516(t1)

00001c98 <inst_149>:

inst_149:
// rs1_val==-1431655766 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0xeeeeeeee, -0x55555556, 0x66666666, x6, 520, x8)
    1c98:	aaaab537          	lui	a0,0xaaaab
    1c9c:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1ca0:	666665b7          	lui	a1,0x66666
    1ca4:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    1ca8:	00b56633          	or	a2,a0,a1
    1cac:	20c32423          	sw	a2,520(t1)

00001cb0 <inst_150>:

inst_150:
// rs1_val==-1431655766 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffffeafe, -0x55555556, -0xb504, x6, 524, x8)
    1cb0:	aaaab537          	lui	a0,0xaaaab
    1cb4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1cb8:	ffff55b7          	lui	a1,0xffff5
    1cbc:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0xfffeeaf8>
    1cc0:	00b56633          	or	a2,a0,a1
    1cc4:	20c32623          	sw	a2,524(t1)

00001cc8 <inst_151>:

inst_151:
// rs1_val==-1431655766 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xaaaabfae, -0x55555556, 0xb504, x6, 528, x8)
    1cc8:	aaaab537          	lui	a0,0xaaaab
    1ccc:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1cd0:	0000b5b7          	lui	a1,0xb
    1cd4:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    1cd8:	00b56633          	or	a2,a0,a1
    1cdc:	20c32823          	sw	a2,528(t1)

00001ce0 <inst_152>:

inst_152:
// rs1_val==-1431655766 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaa, -0x55555556, 0x2, x6, 532, x8)
    1ce0:	aaaab537          	lui	a0,0xaaaab
    1ce4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1ce8:	00200593          	li	a1,2
    1cec:	00b56633          	or	a2,a0,a1
    1cf0:	20c32a23          	sw	a2,532(t1)

00001cf4 <inst_153>:

inst_153:
// rs1_val==-1431655766 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0xfffffffe, -0x55555556, 0x55555554, x6, 536, x8)
    1cf4:	aaaab537          	lui	a0,0xaaaab
    1cf8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1cfc:	555555b7          	lui	a1,0x55555
    1d00:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    1d04:	00b56633          	or	a2,a0,a1
    1d08:	20c32c23          	sw	a2,536(t1)

00001d0c <inst_154>:

inst_154:
// rs1_val==-1431655766 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaa, -0x55555556, 0x0, x6, 540, x8)
    1d0c:	aaaab537          	lui	a0,0xaaaab
    1d10:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1d14:	00000593          	li	a1,0
    1d18:	00b56633          	or	a2,a0,a1
    1d1c:	20c32e23          	sw	a2,540(t1)

00001d20 <inst_155>:

inst_155:
// rs1_val==-1431655766 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaae, -0x55555556, 0x4, x6, 544, x8)
    1d20:	aaaab537          	lui	a0,0xaaaab
    1d24:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1d28:	00400593          	li	a1,4
    1d2c:	00b56633          	or	a2,a0,a1
    1d30:	22c32023          	sw	a2,544(t1)

00001d34 <inst_156>:

inst_156:
// rs1_val==-1431655766 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0xbbbbbbba, -0x55555556, 0x33333332, x6, 548, x8)
    1d34:	aaaab537          	lui	a0,0xaaaab
    1d38:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1d3c:	333335b7          	lui	a1,0x33333
    1d40:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    1d44:	00b56633          	or	a2,a0,a1
    1d48:	22c32223          	sw	a2,548(t1)

00001d4c <inst_157>:

inst_157:
// rs1_val==-1431655766 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0xeeeeeeef, -0x55555556, 0x66666665, x6, 552, x8)
    1d4c:	aaaab537          	lui	a0,0xaaaab
    1d50:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1d54:	666665b7          	lui	a1,0x66666
    1d58:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    1d5c:	00b56633          	or	a2,a0,a1
    1d60:	22c32423          	sw	a2,552(t1)

00001d64 <inst_158>:

inst_158:
// rs1_val==-1431655766 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xaaaabfab, -0x55555556, 0xb503, x6, 556, x8)
    1d64:	aaaab537          	lui	a0,0xaaaab
    1d68:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1d6c:	0000b5b7          	lui	a1,0xb
    1d70:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    1d74:	00b56633          	or	a2,a0,a1
    1d78:	22c32623          	sw	a2,556(t1)

00001d7c <inst_159>:

inst_159:
// rs1_val==-1431655766 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xfffffffe, -0x55555556, 0x55555556, x6, 560, x8)
    1d7c:	aaaab537          	lui	a0,0xaaaab
    1d80:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1d84:	555555b7          	lui	a1,0x55555
    1d88:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    1d8c:	00b56633          	or	a2,a0,a1
    1d90:	22c32823          	sw	a2,560(t1)

00001d94 <inst_160>:

inst_160:
// rs1_val==-1431655766 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaab, -0x55555556, -0x55555555, x6, 564, x8)
    1d94:	aaaab537          	lui	a0,0xaaaab
    1d98:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1d9c:	aaaab5b7          	lui	a1,0xaaaab
    1da0:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    1da4:	00b56633          	or	a2,a0,a1
    1da8:	22c32a23          	sw	a2,564(t1)

00001dac <inst_161>:

inst_161:
// rs1_val==-1431655766 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaae, -0x55555556, 0x6, x6, 568, x8)
    1dac:	aaaab537          	lui	a0,0xaaaab
    1db0:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1db4:	00600593          	li	a1,6
    1db8:	00b56633          	or	a2,a0,a1
    1dbc:	22c32c23          	sw	a2,568(t1)

00001dc0 <inst_162>:

inst_162:
// rs1_val==-1431655766 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0xbbbbbbbe, -0x55555556, 0x33333334, x6, 572, x8)
    1dc0:	aaaab537          	lui	a0,0xaaaab
    1dc4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1dc8:	333335b7          	lui	a1,0x33333
    1dcc:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    1dd0:	00b56633          	or	a2,a0,a1
    1dd4:	22c32e23          	sw	a2,572(t1)

00001dd8 <inst_163>:

inst_163:
// rs1_val==-1431655766 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0xeeeeeeef, -0x55555556, 0x66666667, x6, 576, x8)
    1dd8:	aaaab537          	lui	a0,0xaaaab
    1ddc:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1de0:	666665b7          	lui	a1,0x66666
    1de4:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    1de8:	00b56633          	or	a2,a0,a1
    1dec:	24c32023          	sw	a2,576(t1)

00001df0 <inst_164>:

inst_164:
// rs1_val==-1431655766 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffffeaff, -0x55555556, -0xb503, x6, 580, x8)
    1df0:	aaaab537          	lui	a0,0xaaaab
    1df4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1df8:	ffff55b7          	lui	a1,0xffff5
    1dfc:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0xfffeeaf9>
    1e00:	00b56633          	or	a2,a0,a1
    1e04:	24c32223          	sw	a2,580(t1)

00001e08 <inst_165>:

inst_165:
// rs1_val==-1431655766 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xaaaabfaf, -0x55555556, 0xb505, x6, 584, x8)
    1e08:	aaaab537          	lui	a0,0xaaaab
    1e0c:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1e10:	0000b5b7          	lui	a1,0xb
    1e14:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    1e18:	00b56633          	or	a2,a0,a1
    1e1c:	24c32423          	sw	a2,584(t1)

00001e20 <inst_166>:

inst_166:
// rs1_val==5 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x7, 0x5, 0x3, x6, 588, x8)
    1e20:	00500513          	li	a0,5
    1e24:	00300593          	li	a1,3
    1e28:	00b56633          	or	a2,a0,a1
    1e2c:	24c32623          	sw	a2,588(t1)

00001e30 <inst_167>:

inst_167:
// rs1_val==5 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x55555555, 0x5, 0x55555555, x6, 592, x8)
    1e30:	00500513          	li	a0,5
    1e34:	555555b7          	lui	a1,0x55555
    1e38:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    1e3c:	00b56633          	or	a2,a0,a1
    1e40:	24c32823          	sw	a2,592(t1)

00001e44 <inst_168>:

inst_168:
// rs1_val==5 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaf, 0x5, -0x55555556, x6, 596, x8)
    1e44:	00500513          	li	a0,5
    1e48:	aaaab5b7          	lui	a1,0xaaaab
    1e4c:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1e50:	00b56633          	or	a2,a0,a1
    1e54:	24c32a23          	sw	a2,596(t1)

00001e58 <inst_169>:

inst_169:
// rs1_val==5 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x5, 0x5, 0x5, x6, 600, x8)
    1e58:	00500513          	li	a0,5
    1e5c:	00500593          	li	a1,5
    1e60:	00b56633          	or	a2,a0,a1
    1e64:	24c32c23          	sw	a2,600(t1)

00001e68 <inst_170>:

inst_170:
// rs1_val==5 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x33333337, 0x5, 0x33333333, x6, 604, x8)
    1e68:	00500513          	li	a0,5
    1e6c:	333335b7          	lui	a1,0x33333
    1e70:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    1e74:	00b56633          	or	a2,a0,a1
    1e78:	24c32e23          	sw	a2,604(t1)

00001e7c <inst_171>:

inst_171:
// rs1_val==5 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x5, 0x66666666, x6, 608, x8)
    1e7c:	00500513          	li	a0,5
    1e80:	666665b7          	lui	a1,0x66666
    1e84:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    1e88:	00b56633          	or	a2,a0,a1
    1e8c:	26c32023          	sw	a2,608(t1)

00001e90 <inst_172>:

inst_172:
// rs1_val==5 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff4afd, 0x5, -0xb504, x6, 612, x8)
    1e90:	00500513          	li	a0,5
    1e94:	ffff55b7          	lui	a1,0xffff5
    1e98:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0xfffeeaf8>
    1e9c:	00b56633          	or	a2,a0,a1
    1ea0:	26c32223          	sw	a2,612(t1)

00001ea4 <inst_173>:

inst_173:
// rs1_val==5 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xb505, 0x5, 0xb504, x6, 616, x8)
    1ea4:	00500513          	li	a0,5
    1ea8:	0000b5b7          	lui	a1,0xb
    1eac:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    1eb0:	00b56633          	or	a2,a0,a1
    1eb4:	26c32423          	sw	a2,616(t1)

00001eb8 <inst_174>:

inst_174:
// rs1_val==5 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x7, 0x5, 0x2, x6, 620, x8)
    1eb8:	00500513          	li	a0,5
    1ebc:	00200593          	li	a1,2
    1ec0:	00b56633          	or	a2,a0,a1
    1ec4:	26c32623          	sw	a2,620(t1)

00001ec8 <inst_175>:

inst_175:
// rs1_val==5 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x55555555, 0x5, 0x55555554, x6, 624, x8)
    1ec8:	00500513          	li	a0,5
    1ecc:	555555b7          	lui	a1,0x55555
    1ed0:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    1ed4:	00b56633          	or	a2,a0,a1
    1ed8:	26c32823          	sw	a2,624(t1)

00001edc <inst_176>:

inst_176:
// rs1_val==5 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x5, 0x5, 0x0, x6, 628, x8)
    1edc:	00500513          	li	a0,5
    1ee0:	00000593          	li	a1,0
    1ee4:	00b56633          	or	a2,a0,a1
    1ee8:	26c32a23          	sw	a2,628(t1)

00001eec <inst_177>:

inst_177:
// rs1_val==5 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x5, 0x5, 0x4, x6, 632, x8)
    1eec:	00500513          	li	a0,5
    1ef0:	00400593          	li	a1,4
    1ef4:	00b56633          	or	a2,a0,a1
    1ef8:	26c32c23          	sw	a2,632(t1)

00001efc <inst_178>:

inst_178:
// rs1_val==5 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x33333337, 0x5, 0x33333332, x6, 636, x8)
    1efc:	00500513          	li	a0,5
    1f00:	333335b7          	lui	a1,0x33333
    1f04:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    1f08:	00b56633          	or	a2,a0,a1
    1f0c:	26c32e23          	sw	a2,636(t1)

00001f10 <inst_179>:

inst_179:
// rs1_val==5 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x66666665, 0x5, 0x66666665, x6, 640, x8)
    1f10:	00500513          	li	a0,5
    1f14:	666665b7          	lui	a1,0x66666
    1f18:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    1f1c:	00b56633          	or	a2,a0,a1
    1f20:	28c32023          	sw	a2,640(t1)

00001f24 <inst_180>:

inst_180:
// rs1_val==5 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0x5, 0xb503, x6, 644, x8)
    1f24:	00500513          	li	a0,5
    1f28:	0000b5b7          	lui	a1,0xb
    1f2c:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    1f30:	00b56633          	or	a2,a0,a1
    1f34:	28c32223          	sw	a2,644(t1)

00001f38 <inst_181>:

inst_181:
// rs1_val==5 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x5, 0x55555556, x6, 648, x8)
    1f38:	00500513          	li	a0,5
    1f3c:	555555b7          	lui	a1,0x55555
    1f40:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    1f44:	00b56633          	or	a2,a0,a1
    1f48:	28c32423          	sw	a2,648(t1)

00001f4c <inst_182>:

inst_182:
// rs1_val==5 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaf, 0x5, -0x55555555, x6, 652, x8)
    1f4c:	00500513          	li	a0,5
    1f50:	aaaab5b7          	lui	a1,0xaaaab
    1f54:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    1f58:	00b56633          	or	a2,a0,a1
    1f5c:	28c32623          	sw	a2,652(t1)

00001f60 <inst_183>:

inst_183:
// rs1_val==5 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x7, 0x5, 0x6, x6, 656, x8)
    1f60:	00500513          	li	a0,5
    1f64:	00600593          	li	a1,6
    1f68:	00b56633          	or	a2,a0,a1
    1f6c:	28c32823          	sw	a2,656(t1)

00001f70 <inst_184>:

inst_184:
// rs1_val==5 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x33333335, 0x5, 0x33333334, x6, 660, x8)
    1f70:	00500513          	li	a0,5
    1f74:	333335b7          	lui	a1,0x33333
    1f78:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    1f7c:	00b56633          	or	a2,a0,a1
    1f80:	28c32a23          	sw	a2,660(t1)

00001f84 <inst_185>:

inst_185:
// rs1_val==5 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x5, 0x66666667, x6, 664, x8)
    1f84:	00500513          	li	a0,5
    1f88:	666665b7          	lui	a1,0x66666
    1f8c:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    1f90:	00b56633          	or	a2,a0,a1
    1f94:	28c32c23          	sw	a2,664(t1)

00001f98 <inst_186>:

inst_186:
// rs1_val==5 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff4afd, 0x5, -0xb503, x6, 668, x8)
    1f98:	00500513          	li	a0,5
    1f9c:	ffff55b7          	lui	a1,0xffff5
    1fa0:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0xfffeeaf9>
    1fa4:	00b56633          	or	a2,a0,a1
    1fa8:	28c32e23          	sw	a2,668(t1)

00001fac <inst_187>:

inst_187:
// rs1_val==5 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xb505, 0x5, 0xb505, x6, 672, x8)
    1fac:	00500513          	li	a0,5
    1fb0:	0000b5b7          	lui	a1,0xb
    1fb4:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    1fb8:	00b56633          	or	a2,a0,a1
    1fbc:	2ac32023          	sw	a2,672(t1)

00001fc0 <inst_188>:

inst_188:
// rs1_val==858993459 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x33333333, 0x33333333, 0x3, x6, 676, x8)
    1fc0:	33333537          	lui	a0,0x33333
    1fc4:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    1fc8:	00300593          	li	a1,3
    1fcc:	00b56633          	or	a2,a0,a1
    1fd0:	2ac32223          	sw	a2,676(t1)

00001fd4 <inst_189>:

inst_189:
// rs1_val==858993459 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x33333333, 0x55555555, x6, 680, x8)
    1fd4:	33333537          	lui	a0,0x33333
    1fd8:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    1fdc:	555555b7          	lui	a1,0x55555
    1fe0:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    1fe4:	00b56633          	or	a2,a0,a1
    1fe8:	2ac32423          	sw	a2,680(t1)

00001fec <inst_190>:

inst_190:
// rs1_val==858993459 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xbbbbbbbb, 0x33333333, -0x55555556, x6, 684, x8)
    1fec:	33333537          	lui	a0,0x33333
    1ff0:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    1ff4:	aaaab5b7          	lui	a1,0xaaaab
    1ff8:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1ffc:	00b56633          	or	a2,a0,a1
    2000:	2ac32623          	sw	a2,684(t1)

00002004 <inst_191>:

inst_191:
// rs1_val==858993459 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x33333337, 0x33333333, 0x5, x6, 688, x8)
    2004:	33333537          	lui	a0,0x33333
    2008:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    200c:	00500593          	li	a1,5
    2010:	00b56633          	or	a2,a0,a1
    2014:	2ac32823          	sw	a2,688(t1)

00002018 <inst_192>:

inst_192:
// rs1_val==858993459 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x33333333, 0x33333333, 0x33333333, x6, 692, x8)
    2018:	33333537          	lui	a0,0x33333
    201c:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    2020:	333335b7          	lui	a1,0x33333
    2024:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    2028:	00b56633          	or	a2,a0,a1
    202c:	2ac32a23          	sw	a2,692(t1)

00002030 <inst_193>:

inst_193:
// rs1_val==858993459 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x33333333, 0x66666666, x6, 696, x8)
    2030:	33333537          	lui	a0,0x33333
    2034:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    2038:	666665b7          	lui	a1,0x66666
    203c:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    2040:	00b56633          	or	a2,a0,a1
    2044:	2ac32c23          	sw	a2,696(t1)

00002048 <inst_194>:

inst_194:
// rs1_val==858993459 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff7bff, 0x33333333, -0xb504, x6, 700, x8)
    2048:	33333537          	lui	a0,0x33333
    204c:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    2050:	ffff55b7          	lui	a1,0xffff5
    2054:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0xfffeeaf8>
    2058:	00b56633          	or	a2,a0,a1
    205c:	2ac32e23          	sw	a2,700(t1)

00002060 <inst_195>:

inst_195:
// rs1_val==858993459 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0x3333b737, 0x33333333, 0xb504, x6, 704, x8)
    2060:	33333537          	lui	a0,0x33333
    2064:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    2068:	0000b5b7          	lui	a1,0xb
    206c:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    2070:	00b56633          	or	a2,a0,a1
    2074:	2cc32023          	sw	a2,704(t1)

00002078 <inst_196>:

inst_196:
// rs1_val==858993459 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x33333333, 0x33333333, 0x2, x6, 708, x8)
    2078:	33333537          	lui	a0,0x33333
    207c:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    2080:	00200593          	li	a1,2
    2084:	00b56633          	or	a2,a0,a1
    2088:	2cc32223          	sw	a2,708(t1)

0000208c <inst_197>:

inst_197:
// rs1_val==858993459 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x33333333, 0x55555554, x6, 712, x8)
    208c:	33333537          	lui	a0,0x33333
    2090:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    2094:	555555b7          	lui	a1,0x55555
    2098:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    209c:	00b56633          	or	a2,a0,a1
    20a0:	2cc32423          	sw	a2,712(t1)

000020a4 <inst_198>:

inst_198:
// rs1_val==858993459 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x33333333, 0x33333333, 0x0, x6, 716, x8)
    20a4:	33333537          	lui	a0,0x33333
    20a8:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    20ac:	00000593          	li	a1,0
    20b0:	00b56633          	or	a2,a0,a1
    20b4:	2cc32623          	sw	a2,716(t1)

000020b8 <inst_199>:

inst_199:
// rs1_val==858993459 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x33333337, 0x33333333, 0x4, x6, 720, x8)
    20b8:	33333537          	lui	a0,0x33333
    20bc:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    20c0:	00400593          	li	a1,4
    20c4:	00b56633          	or	a2,a0,a1
    20c8:	2cc32823          	sw	a2,720(t1)

000020cc <inst_200>:

inst_200:
// rs1_val==858993459 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x33333333, 0x33333333, 0x33333332, x6, 724, x8)
    20cc:	33333537          	lui	a0,0x33333
    20d0:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    20d4:	333335b7          	lui	a1,0x33333
    20d8:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    20dc:	00b56633          	or	a2,a0,a1
    20e0:	2cc32a23          	sw	a2,724(t1)

000020e4 <inst_201>:

inst_201:
// rs1_val==858993459 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x33333333, 0x66666665, x6, 728, x8)
    20e4:	33333537          	lui	a0,0x33333
    20e8:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    20ec:	666665b7          	lui	a1,0x66666
    20f0:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    20f4:	00b56633          	or	a2,a0,a1
    20f8:	2cc32c23          	sw	a2,728(t1)

000020fc <inst_202>:

inst_202:
// rs1_val==858993459 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0x3333b733, 0x33333333, 0xb503, x6, 732, x8)
    20fc:	33333537          	lui	a0,0x33333
    2100:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    2104:	0000b5b7          	lui	a1,0xb
    2108:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    210c:	00b56633          	or	a2,a0,a1
    2110:	2cc32e23          	sw	a2,732(t1)

00002114 <inst_203>:

inst_203:
// rs1_val==858993459 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x33333333, 0x55555556, x6, 736, x8)
    2114:	33333537          	lui	a0,0x33333
    2118:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    211c:	555555b7          	lui	a1,0x55555
    2120:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    2124:	00b56633          	or	a2,a0,a1
    2128:	2ec32023          	sw	a2,736(t1)

0000212c <inst_204>:

inst_204:
// rs1_val==858993459 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xbbbbbbbb, 0x33333333, -0x55555555, x6, 740, x8)
    212c:	33333537          	lui	a0,0x33333
    2130:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    2134:	aaaab5b7          	lui	a1,0xaaaab
    2138:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    213c:	00b56633          	or	a2,a0,a1
    2140:	2ec32223          	sw	a2,740(t1)

00002144 <inst_205>:

inst_205:
// rs1_val==858993459 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x33333337, 0x33333333, 0x6, x6, 744, x8)
    2144:	33333537          	lui	a0,0x33333
    2148:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    214c:	00600593          	li	a1,6
    2150:	00b56633          	or	a2,a0,a1
    2154:	2ec32423          	sw	a2,744(t1)

00002158 <inst_206>:

inst_206:
// rs1_val==858993459 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x33333337, 0x33333333, 0x33333334, x6, 748, x8)
    2158:	33333537          	lui	a0,0x33333
    215c:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    2160:	333335b7          	lui	a1,0x33333
    2164:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    2168:	00b56633          	or	a2,a0,a1
    216c:	2ec32623          	sw	a2,748(t1)

00002170 <inst_207>:

inst_207:
// rs1_val==858993459 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x33333333, 0x66666667, x6, 752, x8)
    2170:	33333537          	lui	a0,0x33333
    2174:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    2178:	666665b7          	lui	a1,0x66666
    217c:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    2180:	00b56633          	or	a2,a0,a1
    2184:	2ec32823          	sw	a2,752(t1)

00002188 <inst_208>:

inst_208:
// rs1_val==858993459 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff7bff, 0x33333333, -0xb503, x6, 756, x8)
    2188:	33333537          	lui	a0,0x33333
    218c:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    2190:	ffff55b7          	lui	a1,0xffff5
    2194:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0xfffeeaf9>
    2198:	00b56633          	or	a2,a0,a1
    219c:	2ec32a23          	sw	a2,756(t1)

000021a0 <inst_209>:

inst_209:
// rs1_val==858993459 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0x3333b737, 0x33333333, 0xb505, x6, 760, x8)
    21a0:	33333537          	lui	a0,0x33333
    21a4:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    21a8:	0000b5b7          	lui	a1,0xb
    21ac:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    21b0:	00b56633          	or	a2,a0,a1
    21b4:	2ec32c23          	sw	a2,760(t1)

000021b8 <inst_210>:

inst_210:
// rs1_val==1717986918 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666666, 0x3, x6, 764, x8)
    21b8:	66666537          	lui	a0,0x66666
    21bc:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    21c0:	00300593          	li	a1,3
    21c4:	00b56633          	or	a2,a0,a1
    21c8:	2ec32e23          	sw	a2,764(t1)

000021cc <inst_211>:

inst_211:
// rs1_val==1717986918 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x66666666, 0x55555555, x6, 768, x8)
    21cc:	66666537          	lui	a0,0x66666
    21d0:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    21d4:	555555b7          	lui	a1,0x55555
    21d8:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    21dc:	00b56633          	or	a2,a0,a1
    21e0:	30c32023          	sw	a2,768(t1)

000021e4 <inst_212>:

inst_212:
// rs1_val==1717986918 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xeeeeeeee, 0x66666666, -0x55555556, x6, 772, x8)
    21e4:	66666537          	lui	a0,0x66666
    21e8:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    21ec:	aaaab5b7          	lui	a1,0xaaaab
    21f0:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    21f4:	00b56633          	or	a2,a0,a1
    21f8:	30c32223          	sw	a2,772(t1)

000021fc <inst_213>:

inst_213:
// rs1_val==1717986918 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666666, 0x5, x6, 776, x8)
    21fc:	66666537          	lui	a0,0x66666
    2200:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    2204:	00500593          	li	a1,5
    2208:	00b56633          	or	a2,a0,a1
    220c:	30c32423          	sw	a2,776(t1)

00002210 <inst_214>:

inst_214:
// rs1_val==1717986918 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x66666666, 0x33333333, x6, 780, x8)
    2210:	66666537          	lui	a0,0x66666
    2214:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    2218:	333335b7          	lui	a1,0x33333
    221c:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    2220:	00b56633          	or	a2,a0,a1
    2224:	30c32623          	sw	a2,780(t1)

00002228 <inst_215>:

inst_215:
// rs1_val==1717986918 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x66666666, 0x66666666, 0x66666666, x6, 784, x8)
    2228:	66666537          	lui	a0,0x66666
    222c:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    2230:	666665b7          	lui	a1,0x66666
    2234:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    2238:	00b56633          	or	a2,a0,a1
    223c:	30c32823          	sw	a2,784(t1)

00002240 <inst_216>:

inst_216:
// rs1_val==1717986918 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff6efe, 0x66666666, -0xb504, x6, 788, x8)
    2240:	66666537          	lui	a0,0x66666
    2244:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    2248:	ffff55b7          	lui	a1,0xffff5
    224c:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0xfffeeaf8>
    2250:	00b56633          	or	a2,a0,a1
    2254:	30c32a23          	sw	a2,788(t1)

00002258 <inst_217>:

inst_217:
// rs1_val==1717986918 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0x6666f766, 0x66666666, 0xb504, x6, 792, x8)
    2258:	66666537          	lui	a0,0x66666
    225c:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    2260:	0000b5b7          	lui	a1,0xb
    2264:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    2268:	00b56633          	or	a2,a0,a1
    226c:	30c32c23          	sw	a2,792(t1)

00002270 <inst_218>:

inst_218:
// rs1_val==1717986918 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x66666666, 0x66666666, 0x2, x6, 796, x8)
    2270:	66666537          	lui	a0,0x66666
    2274:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    2278:	00200593          	li	a1,2
    227c:	00b56633          	or	a2,a0,a1
    2280:	30c32e23          	sw	a2,796(t1)

00002284 <inst_219>:

inst_219:
// rs1_val==1717986918 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x66666666, 0x55555554, x6, 800, x8)
    2284:	66666537          	lui	a0,0x66666
    2288:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    228c:	555555b7          	lui	a1,0x55555
    2290:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    2294:	00b56633          	or	a2,a0,a1
    2298:	32c32023          	sw	a2,800(t1)

0000229c <inst_220>:

inst_220:
// rs1_val==1717986918 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x66666666, 0x66666666, 0x0, x6, 804, x8)
    229c:	66666537          	lui	a0,0x66666
    22a0:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    22a4:	00000593          	li	a1,0
    22a8:	00b56633          	or	a2,a0,a1
    22ac:	32c32223          	sw	a2,804(t1)

000022b0 <inst_221>:

inst_221:
// rs1_val==1717986918 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x66666666, 0x66666666, 0x4, x6, 808, x8)
    22b0:	66666537          	lui	a0,0x66666
    22b4:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    22b8:	00400593          	li	a1,4
    22bc:	00b56633          	or	a2,a0,a1
    22c0:	32c32423          	sw	a2,808(t1)

000022c4 <inst_222>:

inst_222:
// rs1_val==1717986918 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x66666666, 0x33333332, x6, 812, x8)
    22c4:	66666537          	lui	a0,0x66666
    22c8:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    22cc:	333335b7          	lui	a1,0x33333
    22d0:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    22d4:	00b56633          	or	a2,a0,a1
    22d8:	32c32623          	sw	a2,812(t1)

000022dc <inst_223>:

inst_223:
// rs1_val==1717986918 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666666, 0x66666665, x6, 816, x8)
    22dc:	66666537          	lui	a0,0x66666
    22e0:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    22e4:	666665b7          	lui	a1,0x66666
    22e8:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    22ec:	00b56633          	or	a2,a0,a1
    22f0:	32c32823          	sw	a2,816(t1)

000022f4 <inst_224>:

inst_224:
// rs1_val==1717986918 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0x6666f767, 0x66666666, 0xb503, x6, 820, x8)
    22f4:	66666537          	lui	a0,0x66666
    22f8:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    22fc:	0000b5b7          	lui	a1,0xb
    2300:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    2304:	00b56633          	or	a2,a0,a1
    2308:	32c32a23          	sw	a2,820(t1)

0000230c <inst_225>:

inst_225:
// rs1_val==1717986918 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x66666666, 0x55555556, x6, 824, x8)
    230c:	66666537          	lui	a0,0x66666
    2310:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    2314:	555555b7          	lui	a1,0x55555
    2318:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    231c:	00b56633          	or	a2,a0,a1
    2320:	32c32c23          	sw	a2,824(t1)

00002324 <inst_226>:

inst_226:
// rs1_val==1717986918 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xeeeeeeef, 0x66666666, -0x55555555, x6, 828, x8)
    2324:	66666537          	lui	a0,0x66666
    2328:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    232c:	aaaab5b7          	lui	a1,0xaaaab
    2330:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    2334:	00b56633          	or	a2,a0,a1
    2338:	32c32e23          	sw	a2,828(t1)

0000233c <inst_227>:

inst_227:
// rs1_val==1717986918 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x66666666, 0x66666666, 0x6, x6, 832, x8)
    233c:	66666537          	lui	a0,0x66666
    2340:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    2344:	00600593          	li	a1,6
    2348:	00b56633          	or	a2,a0,a1
    234c:	34c32023          	sw	a2,832(t1)

00002350 <inst_228>:

inst_228:
// rs1_val==1717986918 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x66666666, 0x33333334, x6, 836, x8)
    2350:	66666537          	lui	a0,0x66666
    2354:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    2358:	333335b7          	lui	a1,0x33333
    235c:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    2360:	00b56633          	or	a2,a0,a1
    2364:	34c32223          	sw	a2,836(t1)

00002368 <inst_229>:

inst_229:
// rs1_val==1717986918 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666666, 0x66666667, x6, 840, x8)
    2368:	66666537          	lui	a0,0x66666
    236c:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    2370:	666665b7          	lui	a1,0x66666
    2374:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    2378:	00b56633          	or	a2,a0,a1
    237c:	34c32423          	sw	a2,840(t1)

00002380 <inst_230>:

inst_230:
// rs1_val==1717986918 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff6eff, 0x66666666, -0xb503, x6, 844, x8)
    2380:	66666537          	lui	a0,0x66666
    2384:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    2388:	ffff55b7          	lui	a1,0xffff5
    238c:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0xfffeeaf9>
    2390:	00b56633          	or	a2,a0,a1
    2394:	34c32623          	sw	a2,844(t1)

00002398 <inst_231>:

inst_231:
// rs1_val==1717986918 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0x6666f767, 0x66666666, 0xb505, x6, 848, x8)
    2398:	66666537          	lui	a0,0x66666
    239c:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    23a0:	0000b5b7          	lui	a1,0xb
    23a4:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    23a8:	00b56633          	or	a2,a0,a1
    23ac:	34c32823          	sw	a2,848(t1)

000023b0 <inst_232>:

inst_232:
// rs1_val==-46340 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0xffff4aff, -0xb504, 0x3, x6, 852, x8)
    23b0:	ffff5537          	lui	a0,0xffff5
    23b4:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffeeaf8>
    23b8:	00300593          	li	a1,3
    23bc:	00b56633          	or	a2,a0,a1
    23c0:	34c32a23          	sw	a2,852(t1)

000023c4 <inst_233>:

inst_233:
// rs1_val==-46340 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xffff5ffd, -0xb504, 0x55555555, x6, 856, x8)
    23c4:	ffff5537          	lui	a0,0xffff5
    23c8:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffeeaf8>
    23cc:	555555b7          	lui	a1,0x55555
    23d0:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    23d4:	00b56633          	or	a2,a0,a1
    23d8:	34c32c23          	sw	a2,856(t1)

000023dc <inst_234>:

inst_234:
// rs1_val==-46340 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xffffeafe, -0xb504, -0x55555556, x6, 860, x8)
    23dc:	ffff5537          	lui	a0,0xffff5
    23e0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffeeaf8>
    23e4:	aaaab5b7          	lui	a1,0xaaaab
    23e8:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    23ec:	00b56633          	or	a2,a0,a1
    23f0:	34c32e23          	sw	a2,860(t1)

000023f4 <inst_235>:

inst_235:
// rs1_val==-46340 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0xffff4afd, -0xb504, 0x5, x6, 864, x8)
    23f4:	ffff5537          	lui	a0,0xffff5
    23f8:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffeeaf8>
    23fc:	00500593          	li	a1,5
    2400:	00b56633          	or	a2,a0,a1
    2404:	36c32023          	sw	a2,864(t1)

00002408 <inst_236>:

inst_236:
// rs1_val==-46340 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0xffff7bff, -0xb504, 0x33333333, x6, 868, x8)
    2408:	ffff5537          	lui	a0,0xffff5
    240c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffeeaf8>
    2410:	333335b7          	lui	a1,0x33333
    2414:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    2418:	00b56633          	or	a2,a0,a1
    241c:	36c32223          	sw	a2,868(t1)

00002420 <inst_237>:

inst_237:
// rs1_val==-46340 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0xffff6efe, -0xb504, 0x66666666, x6, 872, x8)
    2420:	ffff5537          	lui	a0,0xffff5
    2424:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffeeaf8>
    2428:	666665b7          	lui	a1,0x66666
    242c:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    2430:	00b56633          	or	a2,a0,a1
    2434:	36c32423          	sw	a2,872(t1)

00002438 <inst_238>:

inst_238:
// rs1_val==-46340 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff4afc, -0xb504, -0xb504, x6, 876, x8)
    2438:	ffff5537          	lui	a0,0xffff5
    243c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffeeaf8>
    2440:	ffff55b7          	lui	a1,0xffff5
    2444:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0xfffeeaf8>
    2448:	00b56633          	or	a2,a0,a1
    244c:	36c32623          	sw	a2,876(t1)

00002450 <inst_239>:

inst_239:
// rs1_val==-46340 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xfffffffc, -0xb504, 0xb504, x6, 880, x8)
    2450:	ffff5537          	lui	a0,0xffff5
    2454:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffeeaf8>
    2458:	0000b5b7          	lui	a1,0xb
    245c:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    2460:	00b56633          	or	a2,a0,a1
    2464:	36c32823          	sw	a2,880(t1)

00002468 <inst_240>:

inst_240:
// rs1_val==-46340 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0xffff4afe, -0xb504, 0x2, x6, 884, x8)
    2468:	ffff5537          	lui	a0,0xffff5
    246c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffeeaf8>
    2470:	00200593          	li	a1,2
    2474:	00b56633          	or	a2,a0,a1
    2478:	36c32a23          	sw	a2,884(t1)

0000247c <inst_241>:

inst_241:
// rs1_val==-46340 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0xffff5ffc, -0xb504, 0x55555554, x6, 888, x8)
    247c:	ffff5537          	lui	a0,0xffff5
    2480:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffeeaf8>
    2484:	555555b7          	lui	a1,0x55555
    2488:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    248c:	00b56633          	or	a2,a0,a1
    2490:	36c32c23          	sw	a2,888(t1)

00002494 <inst_242>:

inst_242:
// rs1_val==-46340 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0xffff4afc, -0xb504, 0x0, x6, 892, x8)
    2494:	ffff5537          	lui	a0,0xffff5
    2498:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffeeaf8>
    249c:	00000593          	li	a1,0
    24a0:	00b56633          	or	a2,a0,a1
    24a4:	36c32e23          	sw	a2,892(t1)

000024a8 <inst_243>:

inst_243:
// rs1_val==-46340 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0xffff4afc, -0xb504, 0x4, x6, 896, x8)
    24a8:	ffff5537          	lui	a0,0xffff5
    24ac:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffeeaf8>
    24b0:	00400593          	li	a1,4
    24b4:	00b56633          	or	a2,a0,a1
    24b8:	38c32023          	sw	a2,896(t1)

000024bc <inst_244>:

inst_244:
// rs1_val==-46340 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0xffff7bfe, -0xb504, 0x33333332, x6, 900, x8)
    24bc:	ffff5537          	lui	a0,0xffff5
    24c0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffeeaf8>
    24c4:	333335b7          	lui	a1,0x33333
    24c8:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    24cc:	00b56633          	or	a2,a0,a1
    24d0:	38c32223          	sw	a2,900(t1)

000024d4 <inst_245>:

inst_245:
// rs1_val==-46340 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0xffff6efd, -0xb504, 0x66666665, x6, 904, x8)
    24d4:	ffff5537          	lui	a0,0xffff5
    24d8:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffeeaf8>
    24dc:	666665b7          	lui	a1,0x66666
    24e0:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    24e4:	00b56633          	or	a2,a0,a1
    24e8:	38c32423          	sw	a2,904(t1)

000024ec <inst_246>:

inst_246:
// rs1_val==-46340 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0xb504, 0xb503, x6, 908, x8)
    24ec:	ffff5537          	lui	a0,0xffff5
    24f0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffeeaf8>
    24f4:	0000b5b7          	lui	a1,0xb
    24f8:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    24fc:	00b56633          	or	a2,a0,a1
    2500:	38c32623          	sw	a2,908(t1)

00002504 <inst_247>:

inst_247:
// rs1_val==-46340 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xffff5ffe, -0xb504, 0x55555556, x6, 912, x8)
    2504:	ffff5537          	lui	a0,0xffff5
    2508:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffeeaf8>
    250c:	555555b7          	lui	a1,0x55555
    2510:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    2514:	00b56633          	or	a2,a0,a1
    2518:	38c32823          	sw	a2,912(t1)

0000251c <inst_248>:

inst_248:
// rs1_val==-46340 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xffffeaff, -0xb504, -0x55555555, x6, 916, x8)
    251c:	ffff5537          	lui	a0,0xffff5
    2520:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffeeaf8>
    2524:	aaaab5b7          	lui	a1,0xaaaab
    2528:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    252c:	00b56633          	or	a2,a0,a1
    2530:	38c32a23          	sw	a2,916(t1)

00002534 <inst_249>:

inst_249:
// rs1_val==-46340 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0xffff4afe, -0xb504, 0x6, x6, 920, x8)
    2534:	ffff5537          	lui	a0,0xffff5
    2538:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffeeaf8>
    253c:	00600593          	li	a1,6
    2540:	00b56633          	or	a2,a0,a1
    2544:	38c32c23          	sw	a2,920(t1)

00002548 <inst_250>:

inst_250:
// rs1_val==-46340 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0xffff7bfc, -0xb504, 0x33333334, x6, 924, x8)
    2548:	ffff5537          	lui	a0,0xffff5
    254c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffeeaf8>
    2550:	333335b7          	lui	a1,0x33333
    2554:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    2558:	00b56633          	or	a2,a0,a1
    255c:	38c32e23          	sw	a2,924(t1)

00002560 <inst_251>:

inst_251:
// rs1_val==-46340 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0xffff6eff, -0xb504, 0x66666667, x6, 928, x8)
    2560:	ffff5537          	lui	a0,0xffff5
    2564:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffeeaf8>
    2568:	666665b7          	lui	a1,0x66666
    256c:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    2570:	00b56633          	or	a2,a0,a1
    2574:	3ac32023          	sw	a2,928(t1)

00002578 <inst_252>:

inst_252:
// rs1_val==-46340 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff4afd, -0xb504, -0xb503, x6, 932, x8)
    2578:	ffff5537          	lui	a0,0xffff5
    257c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffeeaf8>
    2580:	ffff55b7          	lui	a1,0xffff5
    2584:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0xfffeeaf9>
    2588:	00b56633          	or	a2,a0,a1
    258c:	3ac32223          	sw	a2,932(t1)

00002590 <inst_253>:

inst_253:
// rs1_val==-46340 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xfffffffd, -0xb504, 0xb505, x6, 936, x8)
    2590:	ffff5537          	lui	a0,0xffff5
    2594:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffeeaf8>
    2598:	0000b5b7          	lui	a1,0xb
    259c:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    25a0:	00b56633          	or	a2,a0,a1
    25a4:	3ac32423          	sw	a2,936(t1)

000025a8 <inst_254>:

inst_254:
// rs1_val==46340 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0xb504, 0x3, x6, 940, x8)
    25a8:	0000b537          	lui	a0,0xb
    25ac:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    25b0:	00300593          	li	a1,3
    25b4:	00b56633          	or	a2,a0,a1
    25b8:	3ac32623          	sw	a2,940(t1)

000025bc <inst_255>:

inst_255:
// rs1_val==46340 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x5555f555, 0xb504, 0x55555555, x6, 944, x8)
    25bc:	0000b537          	lui	a0,0xb
    25c0:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    25c4:	555555b7          	lui	a1,0x55555
    25c8:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    25cc:	00b56633          	or	a2,a0,a1
    25d0:	3ac32823          	sw	a2,944(t1)

000025d4 <inst_256>:

inst_256:
// rs1_val==46340 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xaaaabfae, 0xb504, -0x55555556, x6, 948, x8)
    25d4:	0000b537          	lui	a0,0xb
    25d8:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    25dc:	aaaab5b7          	lui	a1,0xaaaab
    25e0:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    25e4:	00b56633          	or	a2,a0,a1
    25e8:	3ac32a23          	sw	a2,948(t1)

000025ec <inst_257>:

inst_257:
// rs1_val==46340 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0xb505, 0xb504, 0x5, x6, 952, x8)
    25ec:	0000b537          	lui	a0,0xb
    25f0:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    25f4:	00500593          	li	a1,5
    25f8:	00b56633          	or	a2,a0,a1
    25fc:	3ac32c23          	sw	a2,952(t1)

00002600 <inst_258>:

inst_258:
// rs1_val==46340 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x3333b737, 0xb504, 0x33333333, x6, 956, x8)
    2600:	0000b537          	lui	a0,0xb
    2604:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    2608:	333335b7          	lui	a1,0x33333
    260c:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    2610:	00b56633          	or	a2,a0,a1
    2614:	3ac32e23          	sw	a2,956(t1)

00002618 <inst_259>:

inst_259:
// rs1_val==46340 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x6666f766, 0xb504, 0x66666666, x6, 960, x8)
    2618:	0000b537          	lui	a0,0xb
    261c:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    2620:	666665b7          	lui	a1,0x66666
    2624:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    2628:	00b56633          	or	a2,a0,a1
    262c:	3cc32023          	sw	a2,960(t1)

00002630 <inst_260>:

inst_260:
// rs1_val==46340 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xfffffffc, 0xb504, -0xb504, x6, 964, x8)
    2630:	0000b537          	lui	a0,0xb
    2634:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    2638:	ffff55b7          	lui	a1,0xffff5
    263c:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0xfffeeaf8>
    2640:	00b56633          	or	a2,a0,a1
    2644:	3cc32223          	sw	a2,964(t1)

00002648 <inst_261>:

inst_261:
// rs1_val==46340 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xb504, 0xb504, 0xb504, x6, 968, x8)
    2648:	0000b537          	lui	a0,0xb
    264c:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    2650:	0000b5b7          	lui	a1,0xb
    2654:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    2658:	00b56633          	or	a2,a0,a1
    265c:	3cc32423          	sw	a2,968(t1)

00002660 <inst_262>:

inst_262:
// rs1_val==46340 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0xb506, 0xb504, 0x2, x6, 972, x8)
    2660:	0000b537          	lui	a0,0xb
    2664:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    2668:	00200593          	li	a1,2
    266c:	00b56633          	or	a2,a0,a1
    2670:	3cc32623          	sw	a2,972(t1)

00002674 <inst_263>:

inst_263:
// rs1_val==46340 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x5555f554, 0xb504, 0x55555554, x6, 976, x8)
    2674:	0000b537          	lui	a0,0xb
    2678:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    267c:	555555b7          	lui	a1,0x55555
    2680:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    2684:	00b56633          	or	a2,a0,a1
    2688:	3cc32823          	sw	a2,976(t1)

0000268c <inst_264>:

inst_264:
// rs1_val==46340 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0xb504, 0xb504, 0x0, x6, 980, x8)
    268c:	0000b537          	lui	a0,0xb
    2690:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    2694:	00000593          	li	a1,0
    2698:	00b56633          	or	a2,a0,a1
    269c:	3cc32a23          	sw	a2,980(t1)

000026a0 <inst_265>:

inst_265:
// rs1_val==46340 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0xb504, 0xb504, 0x4, x6, 984, x8)
    26a0:	0000b537          	lui	a0,0xb
    26a4:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    26a8:	00400593          	li	a1,4
    26ac:	00b56633          	or	a2,a0,a1
    26b0:	3cc32c23          	sw	a2,984(t1)

000026b4 <inst_266>:

inst_266:
// rs1_val==46340 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x3333b736, 0xb504, 0x33333332, x6, 988, x8)
    26b4:	0000b537          	lui	a0,0xb
    26b8:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    26bc:	333335b7          	lui	a1,0x33333
    26c0:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    26c4:	00b56633          	or	a2,a0,a1
    26c8:	3cc32e23          	sw	a2,988(t1)

000026cc <inst_267>:

inst_267:
// rs1_val==46340 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x6666f765, 0xb504, 0x66666665, x6, 992, x8)
    26cc:	0000b537          	lui	a0,0xb
    26d0:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    26d4:	666665b7          	lui	a1,0x66666
    26d8:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    26dc:	00b56633          	or	a2,a0,a1
    26e0:	3ec32023          	sw	a2,992(t1)

000026e4 <inst_268>:

inst_268:
// rs1_val==46340 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0xb504, 0xb503, x6, 996, x8)
    26e4:	0000b537          	lui	a0,0xb
    26e8:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    26ec:	0000b5b7          	lui	a1,0xb
    26f0:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    26f4:	00b56633          	or	a2,a0,a1
    26f8:	3ec32223          	sw	a2,996(t1)

000026fc <inst_269>:

inst_269:
// rs1_val==46340 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x5555f556, 0xb504, 0x55555556, x6, 1000, x8)
    26fc:	0000b537          	lui	a0,0xb
    2700:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    2704:	555555b7          	lui	a1,0x55555
    2708:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    270c:	00b56633          	or	a2,a0,a1
    2710:	3ec32423          	sw	a2,1000(t1)

00002714 <inst_270>:

inst_270:
// rs1_val==46340 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xaaaabfaf, 0xb504, -0x55555555, x6, 1004, x8)
    2714:	0000b537          	lui	a0,0xb
    2718:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    271c:	aaaab5b7          	lui	a1,0xaaaab
    2720:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    2724:	00b56633          	or	a2,a0,a1
    2728:	3ec32623          	sw	a2,1004(t1)

0000272c <inst_271>:

inst_271:
// rs1_val==46340 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0xb506, 0xb504, 0x6, x6, 1008, x8)
    272c:	0000b537          	lui	a0,0xb
    2730:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    2734:	00600593          	li	a1,6
    2738:	00b56633          	or	a2,a0,a1
    273c:	3ec32823          	sw	a2,1008(t1)

00002740 <inst_272>:

inst_272:
// rs1_val==46340 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x3333b734, 0xb504, 0x33333334, x6, 1012, x8)
    2740:	0000b537          	lui	a0,0xb
    2744:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    2748:	333335b7          	lui	a1,0x33333
    274c:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    2750:	00b56633          	or	a2,a0,a1
    2754:	3ec32a23          	sw	a2,1012(t1)

00002758 <inst_273>:

inst_273:
// rs1_val==46340 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x6666f767, 0xb504, 0x66666667, x6, 1016, x8)
    2758:	0000b537          	lui	a0,0xb
    275c:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    2760:	666665b7          	lui	a1,0x66666
    2764:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    2768:	00b56633          	or	a2,a0,a1
    276c:	3ec32c23          	sw	a2,1016(t1)

00002770 <inst_274>:

inst_274:
// rs1_val==46340 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xfffffffd, 0xb504, -0xb503, x6, 1020, x8)
    2770:	0000b537          	lui	a0,0xb
    2774:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    2778:	ffff55b7          	lui	a1,0xffff5
    277c:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0xfffeeaf9>
    2780:	00b56633          	or	a2,a0,a1
    2784:	3ec32e23          	sw	a2,1020(t1)

00002788 <inst_275>:

inst_275:
// rs1_val==46340 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xb505, 0xb504, 0xb505, x6, 1024, x8)
    2788:	0000b537          	lui	a0,0xb
    278c:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    2790:	0000b5b7          	lui	a1,0xb
    2794:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    2798:	00b56633          	or	a2,a0,a1
    279c:	40c32023          	sw	a2,1024(t1)

000027a0 <inst_276>:

inst_276:
// rs1_val==2 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x3, 0x2, 0x3, x6, 1028, x8)
    27a0:	00200513          	li	a0,2
    27a4:	00300593          	li	a1,3
    27a8:	00b56633          	or	a2,a0,a1
    27ac:	40c32223          	sw	a2,1028(t1)

000027b0 <inst_277>:

inst_277:
// rs1_val==2 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x2, 0x55555555, x6, 1032, x8)
    27b0:	00200513          	li	a0,2
    27b4:	555555b7          	lui	a1,0x55555
    27b8:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    27bc:	00b56633          	or	a2,a0,a1
    27c0:	40c32423          	sw	a2,1032(t1)

000027c4 <inst_278>:

inst_278:
// rs1_val==2 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaa, 0x2, -0x55555556, x6, 1036, x8)
    27c4:	00200513          	li	a0,2
    27c8:	aaaab5b7          	lui	a1,0xaaaab
    27cc:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    27d0:	00b56633          	or	a2,a0,a1
    27d4:	40c32623          	sw	a2,1036(t1)

000027d8 <inst_279>:

inst_279:
// rs1_val==2 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x7, 0x2, 0x5, x6, 1040, x8)
    27d8:	00200513          	li	a0,2
    27dc:	00500593          	li	a1,5
    27e0:	00b56633          	or	a2,a0,a1
    27e4:	40c32823          	sw	a2,1040(t1)

000027e8 <inst_280>:

inst_280:
// rs1_val==2 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x33333333, 0x2, 0x33333333, x6, 1044, x8)
    27e8:	00200513          	li	a0,2
    27ec:	333335b7          	lui	a1,0x33333
    27f0:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    27f4:	00b56633          	or	a2,a0,a1
    27f8:	40c32a23          	sw	a2,1044(t1)

000027fc <inst_281>:

inst_281:
// rs1_val==2 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x66666666, 0x2, 0x66666666, x6, 1048, x8)
    27fc:	00200513          	li	a0,2
    2800:	666665b7          	lui	a1,0x66666
    2804:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    2808:	00b56633          	or	a2,a0,a1
    280c:	40c32c23          	sw	a2,1048(t1)

00002810 <inst_282>:

inst_282:
// rs1_val==2 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff4afe, 0x2, -0xb504, x6, 1052, x8)
    2810:	00200513          	li	a0,2
    2814:	ffff55b7          	lui	a1,0xffff5
    2818:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0xfffeeaf8>
    281c:	00b56633          	or	a2,a0,a1
    2820:	40c32e23          	sw	a2,1052(t1)

00002824 <inst_283>:

inst_283:
// rs1_val==2 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xb506, 0x2, 0xb504, x6, 1056, x8)
    2824:	00200513          	li	a0,2
    2828:	0000b5b7          	lui	a1,0xb
    282c:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    2830:	00b56633          	or	a2,a0,a1
    2834:	42c32023          	sw	a2,1056(t1)

00002838 <inst_284>:

inst_284:
// rs1_val==2 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x2, 0x2, 0x2, x6, 1060, x8)
    2838:	00200513          	li	a0,2
    283c:	00200593          	li	a1,2
    2840:	00b56633          	or	a2,a0,a1
    2844:	42c32223          	sw	a2,1060(t1)

00002848 <inst_285>:

inst_285:
// rs1_val==2 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x2, 0x55555554, x6, 1064, x8)
    2848:	00200513          	li	a0,2
    284c:	555555b7          	lui	a1,0x55555
    2850:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    2854:	00b56633          	or	a2,a0,a1
    2858:	42c32423          	sw	a2,1064(t1)

0000285c <inst_286>:

inst_286:
// rs1_val==2 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x2, 0x2, 0x0, x6, 1068, x8)
    285c:	00200513          	li	a0,2
    2860:	00000593          	li	a1,0
    2864:	00b56633          	or	a2,a0,a1
    2868:	42c32623          	sw	a2,1068(t1)

0000286c <inst_287>:

inst_287:
// rs1_val==2 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x6, 0x2, 0x4, x6, 1072, x8)
    286c:	00200513          	li	a0,2
    2870:	00400593          	li	a1,4
    2874:	00b56633          	or	a2,a0,a1
    2878:	42c32823          	sw	a2,1072(t1)

0000287c <inst_288>:

inst_288:
// rs1_val==2 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x33333332, 0x2, 0x33333332, x6, 1076, x8)
    287c:	00200513          	li	a0,2
    2880:	333335b7          	lui	a1,0x33333
    2884:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    2888:	00b56633          	or	a2,a0,a1
    288c:	42c32a23          	sw	a2,1076(t1)

00002890 <inst_289>:

inst_289:
// rs1_val==2 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x2, 0x66666665, x6, 1080, x8)
    2890:	00200513          	li	a0,2
    2894:	666665b7          	lui	a1,0x66666
    2898:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    289c:	00b56633          	or	a2,a0,a1
    28a0:	42c32c23          	sw	a2,1080(t1)

000028a4 <inst_290>:

inst_290:
// rs1_val==2 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xb503, 0x2, 0xb503, x6, 1084, x8)
    28a4:	00200513          	li	a0,2
    28a8:	0000b5b7          	lui	a1,0xb
    28ac:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    28b0:	00b56633          	or	a2,a0,a1
    28b4:	42c32e23          	sw	a2,1084(t1)

000028b8 <inst_291>:

inst_291:
// rs1_val==2 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x2, 0x55555556, x6, 1088, x8)
    28b8:	00200513          	li	a0,2
    28bc:	555555b7          	lui	a1,0x55555
    28c0:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    28c4:	00b56633          	or	a2,a0,a1
    28c8:	44c32023          	sw	a2,1088(t1)

000028cc <inst_292>:

inst_292:
// rs1_val==2 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaab, 0x2, -0x55555555, x6, 1092, x8)
    28cc:	00200513          	li	a0,2
    28d0:	aaaab5b7          	lui	a1,0xaaaab
    28d4:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    28d8:	00b56633          	or	a2,a0,a1
    28dc:	44c32223          	sw	a2,1092(t1)

000028e0 <inst_293>:

inst_293:
// rs1_val==2 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x6, 0x2, 0x6, x6, 1096, x8)
    28e0:	00200513          	li	a0,2
    28e4:	00600593          	li	a1,6
    28e8:	00b56633          	or	a2,a0,a1
    28ec:	44c32423          	sw	a2,1096(t1)

000028f0 <inst_294>:

inst_294:
// rs1_val==2 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x33333336, 0x2, 0x33333334, x6, 1100, x8)
    28f0:	00200513          	li	a0,2
    28f4:	333335b7          	lui	a1,0x33333
    28f8:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    28fc:	00b56633          	or	a2,a0,a1
    2900:	44c32623          	sw	a2,1100(t1)

00002904 <inst_295>:

inst_295:
// rs1_val==2 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x2, 0x66666667, x6, 1104, x8)
    2904:	00200513          	li	a0,2
    2908:	666665b7          	lui	a1,0x66666
    290c:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    2910:	00b56633          	or	a2,a0,a1
    2914:	44c32823          	sw	a2,1104(t1)

00002918 <inst_296>:

inst_296:
// rs1_val==2 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff4aff, 0x2, -0xb503, x6, 1108, x8)
    2918:	00200513          	li	a0,2
    291c:	ffff55b7          	lui	a1,0xffff5
    2920:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0xfffeeaf9>
    2924:	00b56633          	or	a2,a0,a1
    2928:	44c32a23          	sw	a2,1108(t1)

0000292c <inst_297>:

inst_297:
// rs1_val==2 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0x2, 0xb505, x6, 1112, x8)
    292c:	00200513          	li	a0,2
    2930:	0000b5b7          	lui	a1,0xb
    2934:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    2938:	00b56633          	or	a2,a0,a1
    293c:	44c32c23          	sw	a2,1112(t1)

00002940 <inst_298>:

inst_298:
// rs1_val==1431655764 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x55555554, 0x3, x6, 1116, x8)
    2940:	55555537          	lui	a0,0x55555
    2944:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2948:	00300593          	li	a1,3
    294c:	00b56633          	or	a2,a0,a1
    2950:	44c32e23          	sw	a2,1116(t1)

00002954 <inst_299>:

inst_299:
// rs1_val==1431655764 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x55555555, 0x55555554, 0x55555555, x6, 1120, x8)
    2954:	55555537          	lui	a0,0x55555
    2958:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    295c:	555555b7          	lui	a1,0x55555
    2960:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    2964:	00b56633          	or	a2,a0,a1
    2968:	46c32023          	sw	a2,1120(t1)

0000296c <inst_300>:

inst_300:
// rs1_val==1431655764 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xfffffffe, 0x55555554, -0x55555556, x6, 1124, x8)
    296c:	55555537          	lui	a0,0x55555
    2970:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2974:	aaaab5b7          	lui	a1,0xaaaab
    2978:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    297c:	00b56633          	or	a2,a0,a1
    2980:	46c32223          	sw	a2,1124(t1)

00002984 <inst_301>:

inst_301:
// rs1_val==1431655764 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x55555555, 0x55555554, 0x5, x6, 1128, x8)
    2984:	55555537          	lui	a0,0x55555
    2988:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    298c:	00500593          	li	a1,5
    2990:	00b56633          	or	a2,a0,a1
    2994:	46c32423          	sw	a2,1128(t1)

00002998 <inst_302>:

inst_302:
// rs1_val==1431655764 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x55555554, 0x33333333, x6, 1132, x8)
    2998:	55555537          	lui	a0,0x55555
    299c:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    29a0:	333335b7          	lui	a1,0x33333
    29a4:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    29a8:	00b56633          	or	a2,a0,a1
    29ac:	46c32623          	sw	a2,1132(t1)

000029b0 <inst_303>:

inst_303:
// rs1_val==1431655764 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x55555554, 0x66666666, x6, 1136, x8)
    29b0:	55555537          	lui	a0,0x55555
    29b4:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    29b8:	666665b7          	lui	a1,0x66666
    29bc:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    29c0:	00b56633          	or	a2,a0,a1
    29c4:	46c32823          	sw	a2,1136(t1)

000029c8 <inst_304>:

inst_304:
// rs1_val==1431655764 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff5ffc, 0x55555554, -0xb504, x6, 1140, x8)
    29c8:	55555537          	lui	a0,0x55555
    29cc:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    29d0:	ffff55b7          	lui	a1,0xffff5
    29d4:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0xfffeeaf8>
    29d8:	00b56633          	or	a2,a0,a1
    29dc:	46c32a23          	sw	a2,1140(t1)

000029e0 <inst_305>:

inst_305:
// rs1_val==1431655764 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0x5555f554, 0x55555554, 0xb504, x6, 1144, x8)
    29e0:	55555537          	lui	a0,0x55555
    29e4:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    29e8:	0000b5b7          	lui	a1,0xb
    29ec:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    29f0:	00b56633          	or	a2,a0,a1
    29f4:	46c32c23          	sw	a2,1144(t1)

000029f8 <inst_306>:

inst_306:
// rs1_val==1431655764 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x55555554, 0x2, x6, 1148, x8)
    29f8:	55555537          	lui	a0,0x55555
    29fc:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2a00:	00200593          	li	a1,2
    2a04:	00b56633          	or	a2,a0,a1
    2a08:	46c32e23          	sw	a2,1148(t1)

00002a0c <inst_307>:

inst_307:
// rs1_val==1431655764 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x55555554, 0x55555554, 0x55555554, x6, 1152, x8)
    2a0c:	55555537          	lui	a0,0x55555
    2a10:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2a14:	555555b7          	lui	a1,0x55555
    2a18:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    2a1c:	00b56633          	or	a2,a0,a1
    2a20:	48c32023          	sw	a2,1152(t1)

00002a24 <inst_308>:

inst_308:
// rs1_val==1431655764 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x55555554, 0x55555554, 0x0, x6, 1156, x8)
    2a24:	55555537          	lui	a0,0x55555
    2a28:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2a2c:	00000593          	li	a1,0
    2a30:	00b56633          	or	a2,a0,a1
    2a34:	48c32223          	sw	a2,1156(t1)

00002a38 <inst_309>:

inst_309:
// rs1_val==1431655764 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x55555554, 0x55555554, 0x4, x6, 1160, x8)
    2a38:	55555537          	lui	a0,0x55555
    2a3c:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2a40:	00400593          	li	a1,4
    2a44:	00b56633          	or	a2,a0,a1
    2a48:	48c32423          	sw	a2,1160(t1)

00002a4c <inst_310>:

inst_310:
// rs1_val==1431655764 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x55555554, 0x33333332, x6, 1164, x8)
    2a4c:	55555537          	lui	a0,0x55555
    2a50:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2a54:	333335b7          	lui	a1,0x33333
    2a58:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    2a5c:	00b56633          	or	a2,a0,a1
    2a60:	48c32623          	sw	a2,1164(t1)

00002a64 <inst_311>:

inst_311:
// rs1_val==1431655764 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x77777775, 0x55555554, 0x66666665, x6, 1168, x8)
    2a64:	55555537          	lui	a0,0x55555
    2a68:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2a6c:	666665b7          	lui	a1,0x66666
    2a70:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    2a74:	00b56633          	or	a2,a0,a1
    2a78:	48c32823          	sw	a2,1168(t1)

00002a7c <inst_312>:

inst_312:
// rs1_val==1431655764 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0x5555f557, 0x55555554, 0xb503, x6, 1172, x8)
    2a7c:	55555537          	lui	a0,0x55555
    2a80:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2a84:	0000b5b7          	lui	a1,0xb
    2a88:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    2a8c:	00b56633          	or	a2,a0,a1
    2a90:	48c32a23          	sw	a2,1172(t1)

00002a94 <inst_313>:

inst_313:
// rs1_val==1431655764 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x55555554, 0x55555556, x6, 1176, x8)
    2a94:	55555537          	lui	a0,0x55555
    2a98:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2a9c:	555555b7          	lui	a1,0x55555
    2aa0:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    2aa4:	00b56633          	or	a2,a0,a1
    2aa8:	48c32c23          	sw	a2,1176(t1)

00002aac <inst_314>:

inst_314:
// rs1_val==1431655764 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, 0x55555554, -0x55555555, x6, 1180, x8)
    2aac:	55555537          	lui	a0,0x55555
    2ab0:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2ab4:	aaaab5b7          	lui	a1,0xaaaab
    2ab8:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    2abc:	00b56633          	or	a2,a0,a1
    2ac0:	48c32e23          	sw	a2,1180(t1)

00002ac4 <inst_315>:

inst_315:
// rs1_val==1431655764 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x55555554, 0x6, x6, 1184, x8)
    2ac4:	55555537          	lui	a0,0x55555
    2ac8:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2acc:	00600593          	li	a1,6
    2ad0:	00b56633          	or	a2,a0,a1
    2ad4:	4ac32023          	sw	a2,1184(t1)

00002ad8 <inst_316>:

inst_316:
// rs1_val==1431655764 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x77777774, 0x55555554, 0x33333334, x6, 1188, x8)
    2ad8:	55555537          	lui	a0,0x55555
    2adc:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2ae0:	333335b7          	lui	a1,0x33333
    2ae4:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    2ae8:	00b56633          	or	a2,a0,a1
    2aec:	4ac32223          	sw	a2,1188(t1)

00002af0 <inst_317>:

inst_317:
// rs1_val==1431655764 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x55555554, 0x66666667, x6, 1192, x8)
    2af0:	55555537          	lui	a0,0x55555
    2af4:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2af8:	666665b7          	lui	a1,0x66666
    2afc:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    2b00:	00b56633          	or	a2,a0,a1
    2b04:	4ac32423          	sw	a2,1192(t1)

00002b08 <inst_318>:

inst_318:
// rs1_val==1431655764 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff5ffd, 0x55555554, -0xb503, x6, 1196, x8)
    2b08:	55555537          	lui	a0,0x55555
    2b0c:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2b10:	ffff55b7          	lui	a1,0xffff5
    2b14:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0xfffeeaf9>
    2b18:	00b56633          	or	a2,a0,a1
    2b1c:	4ac32623          	sw	a2,1196(t1)

00002b20 <inst_319>:

inst_319:
// rs1_val==1431655764 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0x5555f555, 0x55555554, 0xb505, x6, 1200, x8)
    2b20:	55555537          	lui	a0,0x55555
    2b24:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2b28:	0000b5b7          	lui	a1,0xb
    2b2c:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    2b30:	00b56633          	or	a2,a0,a1
    2b34:	4ac32823          	sw	a2,1200(t1)

00002b38 <inst_320>:

inst_320:
// rs1_val==0 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x3, 0x0, 0x3, x6, 1204, x8)
    2b38:	00000513          	li	a0,0
    2b3c:	00300593          	li	a1,3
    2b40:	00b56633          	or	a2,a0,a1
    2b44:	4ac32a23          	sw	a2,1204(t1)

00002b48 <inst_321>:

inst_321:
// rs1_val==0 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x55555555, 0x0, 0x55555555, x6, 1208, x8)
    2b48:	00000513          	li	a0,0
    2b4c:	555555b7          	lui	a1,0x55555
    2b50:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    2b54:	00b56633          	or	a2,a0,a1
    2b58:	4ac32c23          	sw	a2,1208(t1)

00002b5c <inst_322>:

inst_322:
// rs1_val==0 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaa, 0x0, -0x55555556, x6, 1212, x8)
    2b5c:	00000513          	li	a0,0
    2b60:	aaaab5b7          	lui	a1,0xaaaab
    2b64:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    2b68:	00b56633          	or	a2,a0,a1
    2b6c:	4ac32e23          	sw	a2,1212(t1)

00002b70 <inst_323>:

inst_323:
// rs1_val==0 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x5, 0x0, 0x5, x6, 1216, x8)
    2b70:	00000513          	li	a0,0
    2b74:	00500593          	li	a1,5
    2b78:	00b56633          	or	a2,a0,a1
    2b7c:	4cc32023          	sw	a2,1216(t1)

00002b80 <inst_324>:

inst_324:
// rs1_val==0 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x33333333, 0x0, 0x33333333, x6, 1220, x8)
    2b80:	00000513          	li	a0,0
    2b84:	333335b7          	lui	a1,0x33333
    2b88:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    2b8c:	00b56633          	or	a2,a0,a1
    2b90:	4cc32223          	sw	a2,1220(t1)

00002b94 <inst_325>:

inst_325:
// rs1_val==0 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x66666666, 0x0, 0x66666666, x6, 1224, x8)
    2b94:	00000513          	li	a0,0
    2b98:	666665b7          	lui	a1,0x66666
    2b9c:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    2ba0:	00b56633          	or	a2,a0,a1
    2ba4:	4cc32423          	sw	a2,1224(t1)

00002ba8 <inst_326>:

inst_326:
// rs1_val==0 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff4afc, 0x0, -0xb504, x6, 1228, x8)
    2ba8:	00000513          	li	a0,0
    2bac:	ffff55b7          	lui	a1,0xffff5
    2bb0:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0xfffeeaf8>
    2bb4:	00b56633          	or	a2,a0,a1
    2bb8:	4cc32623          	sw	a2,1228(t1)

00002bbc <inst_327>:

inst_327:
// rs1_val==0 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xb504, 0x0, 0xb504, x6, 1232, x8)
    2bbc:	00000513          	li	a0,0
    2bc0:	0000b5b7          	lui	a1,0xb
    2bc4:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    2bc8:	00b56633          	or	a2,a0,a1
    2bcc:	4cc32823          	sw	a2,1232(t1)

00002bd0 <inst_328>:

inst_328:
// rs1_val==0 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x2, 0x0, 0x2, x6, 1236, x8)
    2bd0:	00000513          	li	a0,0
    2bd4:	00200593          	li	a1,2
    2bd8:	00b56633          	or	a2,a0,a1
    2bdc:	4cc32a23          	sw	a2,1236(t1)

00002be0 <inst_329>:

inst_329:
// rs1_val==-1431655765 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaab, -0x55555555, -0x55555555, x6, 1240, x8)
    2be0:	aaaab537          	lui	a0,0xaaaab
    2be4:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    2be8:	aaaab5b7          	lui	a1,0xaaaab
    2bec:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    2bf0:	00b56633          	or	a2,a0,a1
    2bf4:	4cc32c23          	sw	a2,1240(t1)

00002bf8 <inst_330>:

inst_330:
// rs1_val==-1431655765 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaf, -0x55555555, 0x6, x6, 1244, x8)
    2bf8:	aaaab537          	lui	a0,0xaaaab
    2bfc:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    2c00:	00600593          	li	a1,6
    2c04:	00b56633          	or	a2,a0,a1
    2c08:	4cc32e23          	sw	a2,1244(t1)

00002c0c <inst_331>:

inst_331:
// rs1_val==-1431655765 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0xbbbbbbbf, -0x55555555, 0x33333334, x6, 1248, x8)
    2c0c:	aaaab537          	lui	a0,0xaaaab
    2c10:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    2c14:	333335b7          	lui	a1,0x33333
    2c18:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    2c1c:	00b56633          	or	a2,a0,a1
    2c20:	4ec32023          	sw	a2,1248(t1)

00002c24 <inst_332>:

inst_332:
// rs1_val==-1431655765 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0xeeeeeeef, -0x55555555, 0x66666667, x6, 1252, x8)
    2c24:	aaaab537          	lui	a0,0xaaaab
    2c28:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    2c2c:	666665b7          	lui	a1,0x66666
    2c30:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    2c34:	00b56633          	or	a2,a0,a1
    2c38:	4ec32223          	sw	a2,1252(t1)

00002c3c <inst_333>:

inst_333:
// rs1_val==-1431655765 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffffeaff, -0x55555555, -0xb503, x6, 1256, x8)
    2c3c:	aaaab537          	lui	a0,0xaaaab
    2c40:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    2c44:	ffff55b7          	lui	a1,0xffff5
    2c48:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0xfffeeaf9>
    2c4c:	00b56633          	or	a2,a0,a1
    2c50:	4ec32423          	sw	a2,1256(t1)

00002c54 <inst_334>:

inst_334:
// rs1_val==-1431655765 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xaaaabfaf, -0x55555555, 0xb505, x6, 1260, x8)
    2c54:	aaaab537          	lui	a0,0xaaaab
    2c58:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    2c5c:	0000b5b7          	lui	a1,0xb
    2c60:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    2c64:	00b56633          	or	a2,a0,a1
    2c68:	4ec32623          	sw	a2,1260(t1)

00002c6c <inst_335>:

inst_335:
// rs1_val==6 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x7, 0x6, 0x3, x6, 1264, x8)
    2c6c:	00600513          	li	a0,6
    2c70:	00300593          	li	a1,3
    2c74:	00b56633          	or	a2,a0,a1
    2c78:	4ec32823          	sw	a2,1264(t1)

00002c7c <inst_336>:

inst_336:
// rs1_val==6 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x6, 0x55555555, x6, 1268, x8)
    2c7c:	00600513          	li	a0,6
    2c80:	555555b7          	lui	a1,0x55555
    2c84:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    2c88:	00b56633          	or	a2,a0,a1
    2c8c:	4ec32a23          	sw	a2,1268(t1)

00002c90 <inst_337>:

inst_337:
// rs1_val==6 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaae, 0x6, -0x55555556, x6, 1272, x8)
    2c90:	00600513          	li	a0,6
    2c94:	aaaab5b7          	lui	a1,0xaaaab
    2c98:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    2c9c:	00b56633          	or	a2,a0,a1
    2ca0:	4ec32c23          	sw	a2,1272(t1)

00002ca4 <inst_338>:

inst_338:
// rs1_val==6 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x7, 0x6, 0x5, x6, 1276, x8)
    2ca4:	00600513          	li	a0,6
    2ca8:	00500593          	li	a1,5
    2cac:	00b56633          	or	a2,a0,a1
    2cb0:	4ec32e23          	sw	a2,1276(t1)

00002cb4 <inst_339>:

inst_339:
// rs1_val==6 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x33333337, 0x6, 0x33333333, x6, 1280, x8)
    2cb4:	00600513          	li	a0,6
    2cb8:	333335b7          	lui	a1,0x33333
    2cbc:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    2cc0:	00b56633          	or	a2,a0,a1
    2cc4:	50c32023          	sw	a2,1280(t1)

00002cc8 <inst_340>:

inst_340:
// rs1_val==6 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x66666666, 0x6, 0x66666666, x6, 1284, x8)
    2cc8:	00600513          	li	a0,6
    2ccc:	666665b7          	lui	a1,0x66666
    2cd0:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    2cd4:	00b56633          	or	a2,a0,a1
    2cd8:	50c32223          	sw	a2,1284(t1)

00002cdc <inst_341>:

inst_341:
// rs1_val==6 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff4afe, 0x6, -0xb504, x6, 1288, x8)
    2cdc:	00600513          	li	a0,6
    2ce0:	ffff55b7          	lui	a1,0xffff5
    2ce4:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0xfffeeaf8>
    2ce8:	00b56633          	or	a2,a0,a1
    2cec:	50c32423          	sw	a2,1288(t1)

00002cf0 <inst_342>:

inst_342:
// rs1_val==6 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xb506, 0x6, 0xb504, x6, 1292, x8)
    2cf0:	00600513          	li	a0,6
    2cf4:	0000b5b7          	lui	a1,0xb
    2cf8:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    2cfc:	00b56633          	or	a2,a0,a1
    2d00:	50c32623          	sw	a2,1292(t1)

00002d04 <inst_343>:

inst_343:
// rs1_val==6 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x6, 0x6, 0x2, x6, 1296, x8)
    2d04:	00600513          	li	a0,6
    2d08:	00200593          	li	a1,2
    2d0c:	00b56633          	or	a2,a0,a1
    2d10:	50c32823          	sw	a2,1296(t1)

00002d14 <inst_344>:

inst_344:
// rs1_val==6 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x6, 0x55555554, x6, 1300, x8)
    2d14:	00600513          	li	a0,6
    2d18:	555555b7          	lui	a1,0x55555
    2d1c:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    2d20:	00b56633          	or	a2,a0,a1
    2d24:	50c32a23          	sw	a2,1300(t1)

00002d28 <inst_345>:

inst_345:
// rs1_val==6 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x6, 0x6, 0x0, x6, 1304, x8)
    2d28:	00600513          	li	a0,6
    2d2c:	00000593          	li	a1,0
    2d30:	00b56633          	or	a2,a0,a1
    2d34:	50c32c23          	sw	a2,1304(t1)

00002d38 <inst_346>:

inst_346:
// rs1_val==6 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x6, 0x6, 0x4, x6, 1308, x8)
    2d38:	00600513          	li	a0,6
    2d3c:	00400593          	li	a1,4
    2d40:	00b56633          	or	a2,a0,a1
    2d44:	50c32e23          	sw	a2,1308(t1)

00002d48 <inst_347>:

inst_347:
// rs1_val==6 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x33333336, 0x6, 0x33333332, x6, 1312, x8)
    2d48:	00600513          	li	a0,6
    2d4c:	333335b7          	lui	a1,0x33333
    2d50:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    2d54:	00b56633          	or	a2,a0,a1
    2d58:	52c32023          	sw	a2,1312(t1)

00002d5c <inst_348>:

inst_348:
// rs1_val==6 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x6, 0x66666665, x6, 1316, x8)
    2d5c:	00600513          	li	a0,6
    2d60:	666665b7          	lui	a1,0x66666
    2d64:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    2d68:	00b56633          	or	a2,a0,a1
    2d6c:	52c32223          	sw	a2,1316(t1)

00002d70 <inst_349>:

inst_349:
// rs1_val==6 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0x6, 0xb503, x6, 1320, x8)
    2d70:	00600513          	li	a0,6
    2d74:	0000b5b7          	lui	a1,0xb
    2d78:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    2d7c:	00b56633          	or	a2,a0,a1
    2d80:	52c32423          	sw	a2,1320(t1)

00002d84 <inst_350>:

inst_350:
// rs1_val==6 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x6, 0x55555556, x6, 1324, x8)
    2d84:	00600513          	li	a0,6
    2d88:	555555b7          	lui	a1,0x55555
    2d8c:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    2d90:	00b56633          	or	a2,a0,a1
    2d94:	52c32623          	sw	a2,1324(t1)

00002d98 <inst_351>:

inst_351:
// rs1_val==6 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaf, 0x6, -0x55555555, x6, 1328, x8)
    2d98:	00600513          	li	a0,6
    2d9c:	aaaab5b7          	lui	a1,0xaaaab
    2da0:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    2da4:	00b56633          	or	a2,a0,a1
    2da8:	52c32823          	sw	a2,1328(t1)

00002dac <inst_352>:

inst_352:
// rs1_val==6 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x6, 0x6, 0x6, x6, 1332, x8)
    2dac:	00600513          	li	a0,6
    2db0:	00600593          	li	a1,6
    2db4:	00b56633          	or	a2,a0,a1
    2db8:	52c32a23          	sw	a2,1332(t1)

00002dbc <inst_353>:

inst_353:
// rs1_val==6 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x33333336, 0x6, 0x33333334, x6, 1336, x8)
    2dbc:	00600513          	li	a0,6
    2dc0:	333335b7          	lui	a1,0x33333
    2dc4:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    2dc8:	00b56633          	or	a2,a0,a1
    2dcc:	52c32c23          	sw	a2,1336(t1)

00002dd0 <inst_354>:

inst_354:
// rs1_val==6 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x6, 0x66666667, x6, 1340, x8)
    2dd0:	00600513          	li	a0,6
    2dd4:	666665b7          	lui	a1,0x66666
    2dd8:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    2ddc:	00b56633          	or	a2,a0,a1
    2de0:	52c32e23          	sw	a2,1340(t1)

00002de4 <inst_355>:

inst_355:
// rs1_val==6 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff4aff, 0x6, -0xb503, x6, 1344, x8)
    2de4:	00600513          	li	a0,6
    2de8:	ffff55b7          	lui	a1,0xffff5
    2dec:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0xfffeeaf9>
    2df0:	00b56633          	or	a2,a0,a1
    2df4:	54c32023          	sw	a2,1344(t1)

00002df8 <inst_356>:

inst_356:
// rs1_val==6 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0x6, 0xb505, x6, 1348, x8)
    2df8:	00600513          	li	a0,6
    2dfc:	0000b5b7          	lui	a1,0xb
    2e00:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    2e04:	00b56633          	or	a2,a0,a1
    2e08:	54c32223          	sw	a2,1348(t1)

00002e0c <inst_357>:

inst_357:
// rs1_val==858993460 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x33333337, 0x33333334, 0x3, x6, 1352, x8)
    2e0c:	33333537          	lui	a0,0x33333
    2e10:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    2e14:	00300593          	li	a1,3
    2e18:	00b56633          	or	a2,a0,a1
    2e1c:	54c32423          	sw	a2,1352(t1)

00002e20 <inst_358>:

inst_358:
// rs1_val==858993460 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x77777775, 0x33333334, 0x55555555, x6, 1356, x8)
    2e20:	33333537          	lui	a0,0x33333
    2e24:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    2e28:	555555b7          	lui	a1,0x55555
    2e2c:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    2e30:	00b56633          	or	a2,a0,a1
    2e34:	54c32623          	sw	a2,1356(t1)

00002e38 <inst_359>:

inst_359:
// rs1_val==858993460 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xbbbbbbbe, 0x33333334, -0x55555556, x6, 1360, x8)
    2e38:	33333537          	lui	a0,0x33333
    2e3c:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    2e40:	aaaab5b7          	lui	a1,0xaaaab
    2e44:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    2e48:	00b56633          	or	a2,a0,a1
    2e4c:	54c32823          	sw	a2,1360(t1)

00002e50 <inst_360>:

inst_360:
// rs1_val==858993460 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x33333335, 0x33333334, 0x5, x6, 1364, x8)
    2e50:	33333537          	lui	a0,0x33333
    2e54:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    2e58:	00500593          	li	a1,5
    2e5c:	00b56633          	or	a2,a0,a1
    2e60:	54c32a23          	sw	a2,1364(t1)

00002e64 <inst_361>:

inst_361:
// rs1_val==858993460 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x33333337, 0x33333334, 0x33333333, x6, 1368, x8)
    2e64:	33333537          	lui	a0,0x33333
    2e68:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    2e6c:	333335b7          	lui	a1,0x33333
    2e70:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    2e74:	00b56633          	or	a2,a0,a1
    2e78:	54c32c23          	sw	a2,1368(t1)

00002e7c <inst_362>:

inst_362:
// rs1_val==858993460 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x33333334, 0x66666666, x6, 1372, x8)
    2e7c:	33333537          	lui	a0,0x33333
    2e80:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    2e84:	666665b7          	lui	a1,0x66666
    2e88:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    2e8c:	00b56633          	or	a2,a0,a1
    2e90:	54c32e23          	sw	a2,1372(t1)

00002e94 <inst_363>:

inst_363:
// rs1_val==858993460 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff7bfc, 0x33333334, -0xb504, x6, 1376, x8)
    2e94:	33333537          	lui	a0,0x33333
    2e98:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    2e9c:	ffff55b7          	lui	a1,0xffff5
    2ea0:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0xfffeeaf8>
    2ea4:	00b56633          	or	a2,a0,a1
    2ea8:	56c32023          	sw	a2,1376(t1)

00002eac <inst_364>:

inst_364:
// rs1_val==858993460 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0x3333b734, 0x33333334, 0xb504, x6, 1380, x8)
    2eac:	33333537          	lui	a0,0x33333
    2eb0:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    2eb4:	0000b5b7          	lui	a1,0xb
    2eb8:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    2ebc:	00b56633          	or	a2,a0,a1
    2ec0:	56c32223          	sw	a2,1380(t1)

00002ec4 <inst_365>:

inst_365:
// rs1_val==858993460 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x33333336, 0x33333334, 0x2, x6, 1384, x8)
    2ec4:	33333537          	lui	a0,0x33333
    2ec8:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    2ecc:	00200593          	li	a1,2
    2ed0:	00b56633          	or	a2,a0,a1
    2ed4:	56c32423          	sw	a2,1384(t1)

00002ed8 <inst_366>:

inst_366:
// rs1_val==858993460 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x77777774, 0x33333334, 0x55555554, x6, 1388, x8)
    2ed8:	33333537          	lui	a0,0x33333
    2edc:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    2ee0:	555555b7          	lui	a1,0x55555
    2ee4:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    2ee8:	00b56633          	or	a2,a0,a1
    2eec:	56c32623          	sw	a2,1388(t1)

00002ef0 <inst_367>:

inst_367:
// rs1_val==858993460 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x33333334, 0x33333334, 0x0, x6, 1392, x8)
    2ef0:	33333537          	lui	a0,0x33333
    2ef4:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    2ef8:	00000593          	li	a1,0
    2efc:	00b56633          	or	a2,a0,a1
    2f00:	56c32823          	sw	a2,1392(t1)

00002f04 <inst_368>:

inst_368:
// rs1_val==858993460 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x33333334, 0x33333334, 0x4, x6, 1396, x8)
    2f04:	33333537          	lui	a0,0x33333
    2f08:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    2f0c:	00400593          	li	a1,4
    2f10:	00b56633          	or	a2,a0,a1
    2f14:	56c32a23          	sw	a2,1396(t1)

00002f18 <inst_369>:

inst_369:
// rs1_val==858993460 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x33333336, 0x33333334, 0x33333332, x6, 1400, x8)
    2f18:	33333537          	lui	a0,0x33333
    2f1c:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    2f20:	333335b7          	lui	a1,0x33333
    2f24:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    2f28:	00b56633          	or	a2,a0,a1
    2f2c:	56c32c23          	sw	a2,1400(t1)

00002f30 <inst_370>:

inst_370:
// rs1_val==858993460 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x77777775, 0x33333334, 0x66666665, x6, 1404, x8)
    2f30:	33333537          	lui	a0,0x33333
    2f34:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    2f38:	666665b7          	lui	a1,0x66666
    2f3c:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    2f40:	00b56633          	or	a2,a0,a1
    2f44:	56c32e23          	sw	a2,1404(t1)

00002f48 <inst_371>:

inst_371:
// rs1_val==858993460 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0x3333b737, 0x33333334, 0xb503, x6, 1408, x8)
    2f48:	33333537          	lui	a0,0x33333
    2f4c:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    2f50:	0000b5b7          	lui	a1,0xb
    2f54:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    2f58:	00b56633          	or	a2,a0,a1
    2f5c:	58c32023          	sw	a2,1408(t1)

00002f60 <inst_372>:

inst_372:
// rs1_val==858993460 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x33333334, 0x55555556, x6, 1412, x8)
    2f60:	33333537          	lui	a0,0x33333
    2f64:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    2f68:	555555b7          	lui	a1,0x55555
    2f6c:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    2f70:	00b56633          	or	a2,a0,a1
    2f74:	58c32223          	sw	a2,1412(t1)

00002f78 <inst_373>:

inst_373:
// rs1_val==858993460 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xbbbbbbbf, 0x33333334, -0x55555555, x6, 1416, x8)
    2f78:	33333537          	lui	a0,0x33333
    2f7c:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    2f80:	aaaab5b7          	lui	a1,0xaaaab
    2f84:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    2f88:	00b56633          	or	a2,a0,a1
    2f8c:	58c32423          	sw	a2,1416(t1)

00002f90 <inst_374>:

inst_374:
// rs1_val==858993460 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x33333336, 0x33333334, 0x6, x6, 1420, x8)
    2f90:	33333537          	lui	a0,0x33333
    2f94:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    2f98:	00600593          	li	a1,6
    2f9c:	00b56633          	or	a2,a0,a1
    2fa0:	58c32623          	sw	a2,1420(t1)

00002fa4 <inst_375>:

inst_375:
// rs1_val==858993460 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x33333334, 0x33333334, 0x33333334, x6, 1424, x8)
    2fa4:	33333537          	lui	a0,0x33333
    2fa8:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    2fac:	333335b7          	lui	a1,0x33333
    2fb0:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    2fb4:	00b56633          	or	a2,a0,a1
    2fb8:	58c32823          	sw	a2,1424(t1)

00002fbc <inst_376>:

inst_376:
// rs1_val==858993460 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x33333334, 0x66666667, x6, 1428, x8)
    2fbc:	33333537          	lui	a0,0x33333
    2fc0:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    2fc4:	666665b7          	lui	a1,0x66666
    2fc8:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    2fcc:	00b56633          	or	a2,a0,a1
    2fd0:	58c32a23          	sw	a2,1428(t1)

00002fd4 <inst_377>:

inst_377:
// rs1_val==858993460 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff7bfd, 0x33333334, -0xb503, x6, 1432, x8)
    2fd4:	33333537          	lui	a0,0x33333
    2fd8:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    2fdc:	ffff55b7          	lui	a1,0xffff5
    2fe0:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0xfffeeaf9>
    2fe4:	00b56633          	or	a2,a0,a1
    2fe8:	58c32c23          	sw	a2,1432(t1)

00002fec <inst_378>:

inst_378:
// rs1_val==858993460 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0x3333b735, 0x33333334, 0xb505, x6, 1436, x8)
    2fec:	33333537          	lui	a0,0x33333
    2ff0:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    2ff4:	0000b5b7          	lui	a1,0xb
    2ff8:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    2ffc:	00b56633          	or	a2,a0,a1
    3000:	58c32e23          	sw	a2,1436(t1)

00003004 <inst_379>:

inst_379:
// rs1_val==1717986919 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666667, 0x3, x6, 1440, x8)
    3004:	66666537          	lui	a0,0x66666
    3008:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    300c:	00300593          	li	a1,3
    3010:	00b56633          	or	a2,a0,a1
    3014:	5ac32023          	sw	a2,1440(t1)

00003018 <inst_380>:

inst_380:
// rs1_val==1717986919 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x66666667, 0x55555555, x6, 1444, x8)
    3018:	66666537          	lui	a0,0x66666
    301c:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    3020:	555555b7          	lui	a1,0x55555
    3024:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    3028:	00b56633          	or	a2,a0,a1
    302c:	5ac32223          	sw	a2,1444(t1)

00003030 <inst_381>:

inst_381:
// rs1_val==1717986919 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xeeeeeeef, 0x66666667, -0x55555556, x6, 1448, x8)
    3030:	66666537          	lui	a0,0x66666
    3034:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    3038:	aaaab5b7          	lui	a1,0xaaaab
    303c:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    3040:	00b56633          	or	a2,a0,a1
    3044:	5ac32423          	sw	a2,1448(t1)

00003048 <inst_382>:

inst_382:
// rs1_val==1717986919 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666667, 0x5, x6, 1452, x8)
    3048:	66666537          	lui	a0,0x66666
    304c:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    3050:	00500593          	li	a1,5
    3054:	00b56633          	or	a2,a0,a1
    3058:	5ac32623          	sw	a2,1452(t1)

0000305c <inst_383>:

inst_383:
// rs1_val==1717986919 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x66666667, 0x33333333, x6, 1456, x8)
    305c:	66666537          	lui	a0,0x66666
    3060:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    3064:	333335b7          	lui	a1,0x33333
    3068:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    306c:	00b56633          	or	a2,a0,a1
    3070:	5ac32823          	sw	a2,1456(t1)

00003074 <inst_384>:

inst_384:
// rs1_val==1717986919 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666667, 0x66666666, x6, 1460, x8)
    3074:	66666537          	lui	a0,0x66666
    3078:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    307c:	666665b7          	lui	a1,0x66666
    3080:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    3084:	00b56633          	or	a2,a0,a1
    3088:	5ac32a23          	sw	a2,1460(t1)

0000308c <inst_385>:

inst_385:
// rs1_val==1717986919 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff6eff, 0x66666667, -0xb504, x6, 1464, x8)
    308c:	66666537          	lui	a0,0x66666
    3090:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    3094:	ffff55b7          	lui	a1,0xffff5
    3098:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0xfffeeaf8>
    309c:	00b56633          	or	a2,a0,a1
    30a0:	5ac32c23          	sw	a2,1464(t1)

000030a4 <inst_386>:

inst_386:
// rs1_val==1717986919 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0x6666f767, 0x66666667, 0xb504, x6, 1468, x8)
    30a4:	66666537          	lui	a0,0x66666
    30a8:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    30ac:	0000b5b7          	lui	a1,0xb
    30b0:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    30b4:	00b56633          	or	a2,a0,a1
    30b8:	5ac32e23          	sw	a2,1468(t1)

000030bc <inst_387>:

inst_387:
// rs1_val==1717986919 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666667, 0x2, x6, 1472, x8)
    30bc:	66666537          	lui	a0,0x66666
    30c0:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    30c4:	00200593          	li	a1,2
    30c8:	00b56633          	or	a2,a0,a1
    30cc:	5cc32023          	sw	a2,1472(t1)

000030d0 <inst_388>:

inst_388:
// rs1_val==1717986919 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x66666667, 0x55555554, x6, 1476, x8)
    30d0:	66666537          	lui	a0,0x66666
    30d4:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    30d8:	555555b7          	lui	a1,0x55555
    30dc:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    30e0:	00b56633          	or	a2,a0,a1
    30e4:	5cc32223          	sw	a2,1476(t1)

000030e8 <inst_389>:

inst_389:
// rs1_val==1717986919 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666667, 0x0, x6, 1480, x8)
    30e8:	66666537          	lui	a0,0x66666
    30ec:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    30f0:	00000593          	li	a1,0
    30f4:	00b56633          	or	a2,a0,a1
    30f8:	5cc32423          	sw	a2,1480(t1)

000030fc <inst_390>:

inst_390:
// rs1_val==1717986919 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666667, 0x4, x6, 1484, x8)
    30fc:	66666537          	lui	a0,0x66666
    3100:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    3104:	00400593          	li	a1,4
    3108:	00b56633          	or	a2,a0,a1
    310c:	5cc32623          	sw	a2,1484(t1)

00003110 <inst_391>:

inst_391:
// rs1_val==1717986919 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x66666667, 0x33333332, x6, 1488, x8)
    3110:	66666537          	lui	a0,0x66666
    3114:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    3118:	333335b7          	lui	a1,0x33333
    311c:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    3120:	00b56633          	or	a2,a0,a1
    3124:	5cc32823          	sw	a2,1488(t1)

00003128 <inst_392>:

inst_392:
// rs1_val==1717986919 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666667, 0x66666665, x6, 1492, x8)
    3128:	66666537          	lui	a0,0x66666
    312c:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    3130:	666665b7          	lui	a1,0x66666
    3134:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    3138:	00b56633          	or	a2,a0,a1
    313c:	5cc32a23          	sw	a2,1492(t1)

00003140 <inst_393>:

inst_393:
// rs1_val==1717986919 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0x6666f767, 0x66666667, 0xb503, x6, 1496, x8)
    3140:	66666537          	lui	a0,0x66666
    3144:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    3148:	0000b5b7          	lui	a1,0xb
    314c:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    3150:	00b56633          	or	a2,a0,a1
    3154:	5cc32c23          	sw	a2,1496(t1)

00003158 <inst_394>:

inst_394:
// rs1_val==1717986919 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x66666667, 0x55555556, x6, 1500, x8)
    3158:	66666537          	lui	a0,0x66666
    315c:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    3160:	555555b7          	lui	a1,0x55555
    3164:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    3168:	00b56633          	or	a2,a0,a1
    316c:	5cc32e23          	sw	a2,1500(t1)

00003170 <inst_395>:

inst_395:
// rs1_val==1717986919 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xeeeeeeef, 0x66666667, -0x55555555, x6, 1504, x8)
    3170:	66666537          	lui	a0,0x66666
    3174:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    3178:	aaaab5b7          	lui	a1,0xaaaab
    317c:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3180:	00b56633          	or	a2,a0,a1
    3184:	5ec32023          	sw	a2,1504(t1)

00003188 <inst_396>:

inst_396:
// rs1_val==1717986919 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666667, 0x6, x6, 1508, x8)
    3188:	66666537          	lui	a0,0x66666
    318c:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    3190:	00600593          	li	a1,6
    3194:	00b56633          	or	a2,a0,a1
    3198:	5ec32223          	sw	a2,1508(t1)

0000319c <inst_397>:

inst_397:
// rs1_val==1717986919 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x66666667, 0x33333334, x6, 1512, x8)
    319c:	66666537          	lui	a0,0x66666
    31a0:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    31a4:	333335b7          	lui	a1,0x33333
    31a8:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    31ac:	00b56633          	or	a2,a0,a1
    31b0:	5ec32423          	sw	a2,1512(t1)

000031b4 <inst_398>:

inst_398:
// rs1_val==1717986919 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666667, 0x66666667, x6, 1516, x8)
    31b4:	66666537          	lui	a0,0x66666
    31b8:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    31bc:	666665b7          	lui	a1,0x66666
    31c0:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    31c4:	00b56633          	or	a2,a0,a1
    31c8:	5ec32623          	sw	a2,1516(t1)

000031cc <inst_399>:

inst_399:
// rs1_val==1717986919 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff6eff, 0x66666667, -0xb503, x6, 1520, x8)
    31cc:	66666537          	lui	a0,0x66666
    31d0:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    31d4:	ffff55b7          	lui	a1,0xffff5
    31d8:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0xfffeeaf9>
    31dc:	00b56633          	or	a2,a0,a1
    31e0:	5ec32823          	sw	a2,1520(t1)

000031e4 <inst_400>:

inst_400:
// rs1_val==1717986919 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0x6666f767, 0x66666667, 0xb505, x6, 1524, x8)
    31e4:	66666537          	lui	a0,0x66666
    31e8:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    31ec:	0000b5b7          	lui	a1,0xb
    31f0:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    31f4:	00b56633          	or	a2,a0,a1
    31f8:	5ec32a23          	sw	a2,1524(t1)

000031fc <inst_401>:

inst_401:
// rs1_val==-46339 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0xffff4aff, -0xb503, 0x3, x6, 1528, x8)
    31fc:	ffff5537          	lui	a0,0xffff5
    3200:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffeeaf9>
    3204:	00300593          	li	a1,3
    3208:	00b56633          	or	a2,a0,a1
    320c:	5ec32c23          	sw	a2,1528(t1)

00003210 <inst_402>:

inst_402:
// rs1_val==-46339 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xffff5ffd, -0xb503, 0x55555555, x6, 1532, x8)
    3210:	ffff5537          	lui	a0,0xffff5
    3214:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffeeaf9>
    3218:	555555b7          	lui	a1,0x55555
    321c:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    3220:	00b56633          	or	a2,a0,a1
    3224:	5ec32e23          	sw	a2,1532(t1)

00003228 <inst_403>:

inst_403:
// rs1_val==-46339 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xffffeaff, -0xb503, -0x55555556, x6, 1536, x8)
    3228:	ffff5537          	lui	a0,0xffff5
    322c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffeeaf9>
    3230:	aaaab5b7          	lui	a1,0xaaaab
    3234:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    3238:	00b56633          	or	a2,a0,a1
    323c:	60c32023          	sw	a2,1536(t1)

00003240 <inst_404>:

inst_404:
// rs1_val==-46339 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0xffff4afd, -0xb503, 0x5, x6, 1540, x8)
    3240:	ffff5537          	lui	a0,0xffff5
    3244:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffeeaf9>
    3248:	00500593          	li	a1,5
    324c:	00b56633          	or	a2,a0,a1
    3250:	60c32223          	sw	a2,1540(t1)

00003254 <inst_405>:

inst_405:
// rs1_val==-46339 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0xffff7bff, -0xb503, 0x33333333, x6, 1544, x8)
    3254:	ffff5537          	lui	a0,0xffff5
    3258:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffeeaf9>
    325c:	333335b7          	lui	a1,0x33333
    3260:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    3264:	00b56633          	or	a2,a0,a1
    3268:	60c32423          	sw	a2,1544(t1)

0000326c <inst_406>:

inst_406:
// rs1_val==-46339 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0xffff6eff, -0xb503, 0x66666666, x6, 1548, x8)
    326c:	ffff5537          	lui	a0,0xffff5
    3270:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffeeaf9>
    3274:	666665b7          	lui	a1,0x66666
    3278:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    327c:	00b56633          	or	a2,a0,a1
    3280:	60c32623          	sw	a2,1548(t1)

00003284 <inst_407>:

inst_407:
// rs1_val==-46339 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff4afd, -0xb503, -0xb504, x6, 1552, x8)
    3284:	ffff5537          	lui	a0,0xffff5
    3288:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffeeaf9>
    328c:	ffff55b7          	lui	a1,0xffff5
    3290:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0xfffeeaf8>
    3294:	00b56633          	or	a2,a0,a1
    3298:	60c32823          	sw	a2,1552(t1)

0000329c <inst_408>:

inst_408:
// rs1_val==-46339 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xfffffffd, -0xb503, 0xb504, x6, 1556, x8)
    329c:	ffff5537          	lui	a0,0xffff5
    32a0:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffeeaf9>
    32a4:	0000b5b7          	lui	a1,0xb
    32a8:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    32ac:	00b56633          	or	a2,a0,a1
    32b0:	60c32a23          	sw	a2,1556(t1)

000032b4 <inst_409>:

inst_409:
// rs1_val==-46339 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0xffff4aff, -0xb503, 0x2, x6, 1560, x8)
    32b4:	ffff5537          	lui	a0,0xffff5
    32b8:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffeeaf9>
    32bc:	00200593          	li	a1,2
    32c0:	00b56633          	or	a2,a0,a1
    32c4:	60c32c23          	sw	a2,1560(t1)

000032c8 <inst_410>:

inst_410:
// rs1_val==-46339 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0xffff5ffd, -0xb503, 0x55555554, x6, 1564, x8)
    32c8:	ffff5537          	lui	a0,0xffff5
    32cc:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffeeaf9>
    32d0:	555555b7          	lui	a1,0x55555
    32d4:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    32d8:	00b56633          	or	a2,a0,a1
    32dc:	60c32e23          	sw	a2,1564(t1)

000032e0 <inst_411>:

inst_411:
// rs1_val==-46339 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0xffff4afd, -0xb503, 0x0, x6, 1568, x8)
    32e0:	ffff5537          	lui	a0,0xffff5
    32e4:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffeeaf9>
    32e8:	00000593          	li	a1,0
    32ec:	00b56633          	or	a2,a0,a1
    32f0:	62c32023          	sw	a2,1568(t1)

000032f4 <inst_412>:

inst_412:
// rs1_val==-46339 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0xffff4afd, -0xb503, 0x4, x6, 1572, x8)
    32f4:	ffff5537          	lui	a0,0xffff5
    32f8:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffeeaf9>
    32fc:	00400593          	li	a1,4
    3300:	00b56633          	or	a2,a0,a1
    3304:	62c32223          	sw	a2,1572(t1)

00003308 <inst_413>:

inst_413:
// rs1_val==-46339 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0xffff7bff, -0xb503, 0x33333332, x6, 1576, x8)
    3308:	ffff5537          	lui	a0,0xffff5
    330c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffeeaf9>
    3310:	333335b7          	lui	a1,0x33333
    3314:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    3318:	00b56633          	or	a2,a0,a1
    331c:	62c32423          	sw	a2,1576(t1)

00003320 <inst_414>:

inst_414:
// rs1_val==-46339 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0xffff6efd, -0xb503, 0x66666665, x6, 1580, x8)
    3320:	ffff5537          	lui	a0,0xffff5
    3324:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffeeaf9>
    3328:	666665b7          	lui	a1,0x66666
    332c:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    3330:	00b56633          	or	a2,a0,a1
    3334:	62c32623          	sw	a2,1580(t1)

00003338 <inst_415>:

inst_415:
// rs1_val==-46339 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0xb503, 0xb503, x6, 1584, x8)
    3338:	ffff5537          	lui	a0,0xffff5
    333c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffeeaf9>
    3340:	0000b5b7          	lui	a1,0xb
    3344:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    3348:	00b56633          	or	a2,a0,a1
    334c:	62c32823          	sw	a2,1584(t1)

00003350 <inst_416>:

inst_416:
// rs1_val==-46339 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xffff5fff, -0xb503, 0x55555556, x6, 1588, x8)
    3350:	ffff5537          	lui	a0,0xffff5
    3354:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffeeaf9>
    3358:	555555b7          	lui	a1,0x55555
    335c:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    3360:	00b56633          	or	a2,a0,a1
    3364:	62c32a23          	sw	a2,1588(t1)

00003368 <inst_417>:

inst_417:
// rs1_val==-46339 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xffffeaff, -0xb503, -0x55555555, x6, 1592, x8)
    3368:	ffff5537          	lui	a0,0xffff5
    336c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffeeaf9>
    3370:	aaaab5b7          	lui	a1,0xaaaab
    3374:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3378:	00b56633          	or	a2,a0,a1
    337c:	62c32c23          	sw	a2,1592(t1)

00003380 <inst_418>:

inst_418:
// rs1_val==-46339 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0xffff4aff, -0xb503, 0x6, x6, 1596, x8)
    3380:	ffff5537          	lui	a0,0xffff5
    3384:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffeeaf9>
    3388:	00600593          	li	a1,6
    338c:	00b56633          	or	a2,a0,a1
    3390:	62c32e23          	sw	a2,1596(t1)

00003394 <inst_419>:

inst_419:
// rs1_val==-46339 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0xffff7bfd, -0xb503, 0x33333334, x6, 1600, x8)
    3394:	ffff5537          	lui	a0,0xffff5
    3398:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffeeaf9>
    339c:	333335b7          	lui	a1,0x33333
    33a0:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    33a4:	00b56633          	or	a2,a0,a1
    33a8:	64c32023          	sw	a2,1600(t1)

000033ac <inst_420>:

inst_420:
// rs1_val==-46339 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0xffff6eff, -0xb503, 0x66666667, x6, 1604, x8)
    33ac:	ffff5537          	lui	a0,0xffff5
    33b0:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffeeaf9>
    33b4:	666665b7          	lui	a1,0x66666
    33b8:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    33bc:	00b56633          	or	a2,a0,a1
    33c0:	64c32223          	sw	a2,1604(t1)

000033c4 <inst_421>:

inst_421:
// rs1_val==-46339 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff4afd, -0xb503, -0xb503, x6, 1608, x8)
    33c4:	ffff5537          	lui	a0,0xffff5
    33c8:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffeeaf9>
    33cc:	ffff55b7          	lui	a1,0xffff5
    33d0:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0xfffeeaf9>
    33d4:	00b56633          	or	a2,a0,a1
    33d8:	64c32423          	sw	a2,1608(t1)

000033dc <inst_422>:

inst_422:
// rs1_val==-46339 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xfffffffd, -0xb503, 0xb505, x6, 1612, x8)
    33dc:	ffff5537          	lui	a0,0xffff5
    33e0:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffeeaf9>
    33e4:	0000b5b7          	lui	a1,0xb
    33e8:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    33ec:	00b56633          	or	a2,a0,a1
    33f0:	64c32623          	sw	a2,1612(t1)

000033f4 <inst_423>:

inst_423:
// rs1_val==46341 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0xb505, 0x3, x6, 1616, x8)
    33f4:	0000b537          	lui	a0,0xb
    33f8:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    33fc:	00300593          	li	a1,3
    3400:	00b56633          	or	a2,a0,a1
    3404:	64c32823          	sw	a2,1616(t1)

00003408 <inst_424>:

inst_424:
// rs1_val==46341 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x5555f555, 0xb505, 0x55555555, x6, 1620, x8)
    3408:	0000b537          	lui	a0,0xb
    340c:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    3410:	555555b7          	lui	a1,0x55555
    3414:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    3418:	00b56633          	or	a2,a0,a1
    341c:	64c32a23          	sw	a2,1620(t1)

00003420 <inst_425>:

inst_425:
// rs1_val==46341 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xaaaabfaf, 0xb505, -0x55555556, x6, 1624, x8)
    3420:	0000b537          	lui	a0,0xb
    3424:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    3428:	aaaab5b7          	lui	a1,0xaaaab
    342c:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    3430:	00b56633          	or	a2,a0,a1
    3434:	64c32c23          	sw	a2,1624(t1)

00003438 <inst_426>:

inst_426:
// rs1_val==46341 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0xb505, 0xb505, 0x5, x6, 1628, x8)
    3438:	0000b537          	lui	a0,0xb
    343c:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    3440:	00500593          	li	a1,5
    3444:	00b56633          	or	a2,a0,a1
    3448:	64c32e23          	sw	a2,1628(t1)

0000344c <inst_427>:

inst_427:
// rs1_val==46341 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x3333b737, 0xb505, 0x33333333, x6, 1632, x8)
    344c:	0000b537          	lui	a0,0xb
    3450:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    3454:	333335b7          	lui	a1,0x33333
    3458:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    345c:	00b56633          	or	a2,a0,a1
    3460:	66c32023          	sw	a2,1632(t1)

00003464 <inst_428>:

inst_428:
// rs1_val==46341 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x6666f767, 0xb505, 0x66666666, x6, 1636, x8)
    3464:	0000b537          	lui	a0,0xb
    3468:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    346c:	666665b7          	lui	a1,0x66666
    3470:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    3474:	00b56633          	or	a2,a0,a1
    3478:	66c32223          	sw	a2,1636(t1)

0000347c <inst_429>:

inst_429:
// rs1_val==46341 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xfffffffd, 0xb505, -0xb504, x6, 1640, x8)
    347c:	0000b537          	lui	a0,0xb
    3480:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    3484:	ffff55b7          	lui	a1,0xffff5
    3488:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0xfffeeaf8>
    348c:	00b56633          	or	a2,a0,a1
    3490:	66c32423          	sw	a2,1640(t1)

00003494 <inst_430>:

inst_430:
// rs1_val==46341 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xb505, 0xb505, 0xb504, x6, 1644, x8)
    3494:	0000b537          	lui	a0,0xb
    3498:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    349c:	0000b5b7          	lui	a1,0xb
    34a0:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    34a4:	00b56633          	or	a2,a0,a1
    34a8:	66c32623          	sw	a2,1644(t1)

000034ac <inst_431>:

inst_431:
// rs1_val==46341 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0xb505, 0x2, x6, 1648, x8)
    34ac:	0000b537          	lui	a0,0xb
    34b0:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    34b4:	00200593          	li	a1,2
    34b8:	00b56633          	or	a2,a0,a1
    34bc:	66c32823          	sw	a2,1648(t1)

000034c0 <inst_432>:

inst_432:
// rs1_val==46341 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x5555f555, 0xb505, 0x55555554, x6, 1652, x8)
    34c0:	0000b537          	lui	a0,0xb
    34c4:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    34c8:	555555b7          	lui	a1,0x55555
    34cc:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    34d0:	00b56633          	or	a2,a0,a1
    34d4:	66c32a23          	sw	a2,1652(t1)

000034d8 <inst_433>:

inst_433:
// rs1_val==46341 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0xb505, 0xb505, 0x0, x6, 1656, x8)
    34d8:	0000b537          	lui	a0,0xb
    34dc:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    34e0:	00000593          	li	a1,0
    34e4:	00b56633          	or	a2,a0,a1
    34e8:	66c32c23          	sw	a2,1656(t1)

000034ec <inst_434>:

inst_434:
// rs1_val==46341 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0xb505, 0xb505, 0x4, x6, 1660, x8)
    34ec:	0000b537          	lui	a0,0xb
    34f0:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    34f4:	00400593          	li	a1,4
    34f8:	00b56633          	or	a2,a0,a1
    34fc:	66c32e23          	sw	a2,1660(t1)

00003500 <inst_435>:

inst_435:
// rs1_val==46341 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x3333b737, 0xb505, 0x33333332, x6, 1664, x8)
    3500:	0000b537          	lui	a0,0xb
    3504:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    3508:	333335b7          	lui	a1,0x33333
    350c:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    3510:	00b56633          	or	a2,a0,a1
    3514:	68c32023          	sw	a2,1664(t1)

00003518 <inst_436>:

inst_436:
// rs1_val==46341 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x6666f765, 0xb505, 0x66666665, x6, 1668, x8)
    3518:	0000b537          	lui	a0,0xb
    351c:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    3520:	666665b7          	lui	a1,0x66666
    3524:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    3528:	00b56633          	or	a2,a0,a1
    352c:	68c32223          	sw	a2,1668(t1)

00003530 <inst_437>:

inst_437:
// rs1_val==46341 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0xb505, 0xb503, x6, 1672, x8)
    3530:	0000b537          	lui	a0,0xb
    3534:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    3538:	0000b5b7          	lui	a1,0xb
    353c:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    3540:	00b56633          	or	a2,a0,a1
    3544:	68c32423          	sw	a2,1672(t1)

00003548 <inst_438>:

inst_438:
// rs1_val==46341 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x5555f557, 0xb505, 0x55555556, x6, 1676, x8)
    3548:	0000b537          	lui	a0,0xb
    354c:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    3550:	555555b7          	lui	a1,0x55555
    3554:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    3558:	00b56633          	or	a2,a0,a1
    355c:	68c32623          	sw	a2,1676(t1)

00003560 <inst_439>:

inst_439:
// rs1_val==46341 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xaaaabfaf, 0xb505, -0x55555555, x6, 1680, x8)
    3560:	0000b537          	lui	a0,0xb
    3564:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    3568:	aaaab5b7          	lui	a1,0xaaaab
    356c:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3570:	00b56633          	or	a2,a0,a1
    3574:	68c32823          	sw	a2,1680(t1)

00003578 <inst_440>:

inst_440:
// rs1_val==46341 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0xb505, 0x6, x6, 1684, x8)
    3578:	0000b537          	lui	a0,0xb
    357c:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    3580:	00600593          	li	a1,6
    3584:	00b56633          	or	a2,a0,a1
    3588:	68c32a23          	sw	a2,1684(t1)

0000358c <inst_441>:

inst_441:
// rs1_val==46341 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x3333b735, 0xb505, 0x33333334, x6, 1688, x8)
    358c:	0000b537          	lui	a0,0xb
    3590:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    3594:	333335b7          	lui	a1,0x33333
    3598:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    359c:	00b56633          	or	a2,a0,a1
    35a0:	68c32c23          	sw	a2,1688(t1)

000035a4 <inst_442>:

inst_442:
// rs1_val==46341 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x6666f767, 0xb505, 0x66666667, x6, 1692, x8)
    35a4:	0000b537          	lui	a0,0xb
    35a8:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    35ac:	666665b7          	lui	a1,0x66666
    35b0:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    35b4:	00b56633          	or	a2,a0,a1
    35b8:	68c32e23          	sw	a2,1692(t1)

000035bc <inst_443>:

inst_443:
// rs1_val==46341 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xfffffffd, 0xb505, -0xb503, x6, 1696, x8)
    35bc:	0000b537          	lui	a0,0xb
    35c0:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    35c4:	ffff55b7          	lui	a1,0xffff5
    35c8:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0xfffeeaf9>
    35cc:	00b56633          	or	a2,a0,a1
    35d0:	6ac32023          	sw	a2,1696(t1)

000035d4 <inst_444>:

inst_444:
// rs1_val==46341 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xb505, 0xb505, 0xb505, x6, 1700, x8)
    35d4:	0000b537          	lui	a0,0xb
    35d8:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    35dc:	0000b5b7          	lui	a1,0xb
    35e0:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    35e4:	00b56633          	or	a2,a0,a1
    35e8:	6ac32223          	sw	a2,1700(t1)

000035ec <inst_445>:

inst_445:
// rs1_val==0 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x55555554, 0x0, 0x55555554, x6, 1704, x8)
    35ec:	00000513          	li	a0,0
    35f0:	555555b7          	lui	a1,0x55555
    35f4:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    35f8:	00b56633          	or	a2,a0,a1
    35fc:	6ac32423          	sw	a2,1704(t1)

00003600 <inst_446>:

inst_446:
// rs1_val==0 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x0, 0x0, 0x0, x6, 1708, x8)
    3600:	00000513          	li	a0,0
    3604:	00000593          	li	a1,0
    3608:	00b56633          	or	a2,a0,a1
    360c:	6ac32623          	sw	a2,1708(t1)

00003610 <inst_447>:

inst_447:
// rs1_val==0 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x4, 0x0, 0x4, x6, 1712, x8)
    3610:	00000513          	li	a0,0
    3614:	00400593          	li	a1,4
    3618:	00b56633          	or	a2,a0,a1
    361c:	6ac32823          	sw	a2,1712(t1)

00003620 <inst_448>:

inst_448:
// rs1_val==0 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x33333332, 0x0, 0x33333332, x6, 1716, x8)
    3620:	00000513          	li	a0,0
    3624:	333335b7          	lui	a1,0x33333
    3628:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    362c:	00b56633          	or	a2,a0,a1
    3630:	6ac32a23          	sw	a2,1716(t1)

00003634 <inst_449>:

inst_449:
// rs1_val==0 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x66666665, 0x0, 0x66666665, x6, 1720, x8)
    3634:	00000513          	li	a0,0
    3638:	666665b7          	lui	a1,0x66666
    363c:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    3640:	00b56633          	or	a2,a0,a1
    3644:	6ac32c23          	sw	a2,1720(t1)

00003648 <inst_450>:

inst_450:
// rs1_val==0 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xb503, 0x0, 0xb503, x6, 1724, x8)
    3648:	00000513          	li	a0,0
    364c:	0000b5b7          	lui	a1,0xb
    3650:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    3654:	00b56633          	or	a2,a0,a1
    3658:	6ac32e23          	sw	a2,1724(t1)

0000365c <inst_451>:

inst_451:
// rs1_val==0 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x0, 0x55555556, x6, 1728, x8)
    365c:	00000513          	li	a0,0
    3660:	555555b7          	lui	a1,0x55555
    3664:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    3668:	00b56633          	or	a2,a0,a1
    366c:	6cc32023          	sw	a2,1728(t1)

00003670 <inst_452>:

inst_452:
// rs1_val==0 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaab, 0x0, -0x55555555, x6, 1732, x8)
    3670:	00000513          	li	a0,0
    3674:	aaaab5b7          	lui	a1,0xaaaab
    3678:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    367c:	00b56633          	or	a2,a0,a1
    3680:	6cc32223          	sw	a2,1732(t1)

00003684 <inst_453>:

inst_453:
// rs1_val==0 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x6, 0x0, 0x6, x6, 1736, x8)
    3684:	00000513          	li	a0,0
    3688:	00600593          	li	a1,6
    368c:	00b56633          	or	a2,a0,a1
    3690:	6cc32423          	sw	a2,1736(t1)

00003694 <inst_454>:

inst_454:
// rs1_val==0 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x33333334, 0x0, 0x33333334, x6, 1740, x8)
    3694:	00000513          	li	a0,0
    3698:	333335b7          	lui	a1,0x33333
    369c:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    36a0:	00b56633          	or	a2,a0,a1
    36a4:	6cc32623          	sw	a2,1740(t1)

000036a8 <inst_455>:

inst_455:
// rs1_val==0 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x0, 0x66666667, x6, 1744, x8)
    36a8:	00000513          	li	a0,0
    36ac:	666665b7          	lui	a1,0x66666
    36b0:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    36b4:	00b56633          	or	a2,a0,a1
    36b8:	6cc32823          	sw	a2,1744(t1)

000036bc <inst_456>:

inst_456:
// rs1_val==0 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff4afd, 0x0, -0xb503, x6, 1748, x8)
    36bc:	00000513          	li	a0,0
    36c0:	ffff55b7          	lui	a1,0xffff5
    36c4:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0xfffeeaf9>
    36c8:	00b56633          	or	a2,a0,a1
    36cc:	6cc32a23          	sw	a2,1748(t1)

000036d0 <inst_457>:

inst_457:
// rs1_val==0 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xb505, 0x0, 0xb505, x6, 1752, x8)
    36d0:	00000513          	li	a0,0
    36d4:	0000b5b7          	lui	a1,0xb
    36d8:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    36dc:	00b56633          	or	a2,a0,a1
    36e0:	6cc32c23          	sw	a2,1752(t1)

000036e4 <inst_458>:

inst_458:
// rs1_val==4 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x7, 0x4, 0x3, x6, 1756, x8)
    36e4:	00400513          	li	a0,4
    36e8:	00300593          	li	a1,3
    36ec:	00b56633          	or	a2,a0,a1
    36f0:	6cc32e23          	sw	a2,1756(t1)

000036f4 <inst_459>:

inst_459:
// rs1_val==4 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x55555555, 0x4, 0x55555555, x6, 1760, x8)
    36f4:	00400513          	li	a0,4
    36f8:	555555b7          	lui	a1,0x55555
    36fc:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    3700:	00b56633          	or	a2,a0,a1
    3704:	6ec32023          	sw	a2,1760(t1)

00003708 <inst_460>:

inst_460:
// rs1_val==4 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaae, 0x4, -0x55555556, x6, 1764, x8)
    3708:	00400513          	li	a0,4
    370c:	aaaab5b7          	lui	a1,0xaaaab
    3710:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    3714:	00b56633          	or	a2,a0,a1
    3718:	6ec32223          	sw	a2,1764(t1)

0000371c <inst_461>:

inst_461:
// rs1_val==4 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x5, 0x4, 0x5, x6, 1768, x8)
    371c:	00400513          	li	a0,4
    3720:	00500593          	li	a1,5
    3724:	00b56633          	or	a2,a0,a1
    3728:	6ec32423          	sw	a2,1768(t1)

0000372c <inst_462>:

inst_462:
// rs1_val==4 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x33333337, 0x4, 0x33333333, x6, 1772, x8)
    372c:	00400513          	li	a0,4
    3730:	333335b7          	lui	a1,0x33333
    3734:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    3738:	00b56633          	or	a2,a0,a1
    373c:	6ec32623          	sw	a2,1772(t1)

00003740 <inst_463>:

inst_463:
// rs1_val==4 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x66666666, 0x4, 0x66666666, x6, 1776, x8)
    3740:	00400513          	li	a0,4
    3744:	666665b7          	lui	a1,0x66666
    3748:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    374c:	00b56633          	or	a2,a0,a1
    3750:	6ec32823          	sw	a2,1776(t1)

00003754 <inst_464>:

inst_464:
// rs1_val==4 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff4afc, 0x4, -0xb504, x6, 1780, x8)
    3754:	00400513          	li	a0,4
    3758:	ffff55b7          	lui	a1,0xffff5
    375c:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0xfffeeaf8>
    3760:	00b56633          	or	a2,a0,a1
    3764:	6ec32a23          	sw	a2,1780(t1)

00003768 <inst_465>:

inst_465:
// rs1_val==4 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xb504, 0x4, 0xb504, x6, 1784, x8)
    3768:	00400513          	li	a0,4
    376c:	0000b5b7          	lui	a1,0xb
    3770:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    3774:	00b56633          	or	a2,a0,a1
    3778:	6ec32c23          	sw	a2,1784(t1)

0000377c <inst_466>:

inst_466:
// rs1_val==4 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x6, 0x4, 0x2, x6, 1788, x8)
    377c:	00400513          	li	a0,4
    3780:	00200593          	li	a1,2
    3784:	00b56633          	or	a2,a0,a1
    3788:	6ec32e23          	sw	a2,1788(t1)

0000378c <inst_467>:

inst_467:
// rs1_val==4 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x55555554, 0x4, 0x55555554, x6, 1792, x8)
    378c:	00400513          	li	a0,4
    3790:	555555b7          	lui	a1,0x55555
    3794:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    3798:	00b56633          	or	a2,a0,a1
    379c:	70c32023          	sw	a2,1792(t1)

000037a0 <inst_468>:

inst_468:
// rs1_val==4 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x4, 0x4, 0x0, x6, 1796, x8)
    37a0:	00400513          	li	a0,4
    37a4:	00000593          	li	a1,0
    37a8:	00b56633          	or	a2,a0,a1
    37ac:	70c32223          	sw	a2,1796(t1)

000037b0 <inst_469>:

inst_469:
// rs1_val==4 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x4, 0x4, 0x4, x6, 1800, x8)
    37b0:	00400513          	li	a0,4
    37b4:	00400593          	li	a1,4
    37b8:	00b56633          	or	a2,a0,a1
    37bc:	70c32423          	sw	a2,1800(t1)

000037c0 <inst_470>:

inst_470:
// rs1_val==4 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x33333336, 0x4, 0x33333332, x6, 1804, x8)
    37c0:	00400513          	li	a0,4
    37c4:	333335b7          	lui	a1,0x33333
    37c8:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    37cc:	00b56633          	or	a2,a0,a1
    37d0:	70c32623          	sw	a2,1804(t1)

000037d4 <inst_471>:

inst_471:
// rs1_val==4 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x66666665, 0x4, 0x66666665, x6, 1808, x8)
    37d4:	00400513          	li	a0,4
    37d8:	666665b7          	lui	a1,0x66666
    37dc:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    37e0:	00b56633          	or	a2,a0,a1
    37e4:	70c32823          	sw	a2,1808(t1)

000037e8 <inst_472>:

inst_472:
// rs1_val==4 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0x4, 0xb503, x6, 1812, x8)
    37e8:	00400513          	li	a0,4
    37ec:	0000b5b7          	lui	a1,0xb
    37f0:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    37f4:	00b56633          	or	a2,a0,a1
    37f8:	70c32a23          	sw	a2,1812(t1)

000037fc <inst_473>:

inst_473:
// rs1_val==4 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x4, 0x55555556, x6, 1816, x8)
    37fc:	00400513          	li	a0,4
    3800:	555555b7          	lui	a1,0x55555
    3804:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    3808:	00b56633          	or	a2,a0,a1
    380c:	70c32c23          	sw	a2,1816(t1)

00003810 <inst_474>:

inst_474:
// rs1_val==4 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaf, 0x4, -0x55555555, x6, 1820, x8)
    3810:	00400513          	li	a0,4
    3814:	aaaab5b7          	lui	a1,0xaaaab
    3818:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    381c:	00b56633          	or	a2,a0,a1
    3820:	70c32e23          	sw	a2,1820(t1)

00003824 <inst_475>:

inst_475:
// rs1_val==4 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x6, 0x4, 0x6, x6, 1824, x8)
    3824:	00400513          	li	a0,4
    3828:	00600593          	li	a1,6
    382c:	00b56633          	or	a2,a0,a1
    3830:	72c32023          	sw	a2,1824(t1)

00003834 <inst_476>:

inst_476:
// rs1_val==4 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x33333334, 0x4, 0x33333334, x6, 1828, x8)
    3834:	00400513          	li	a0,4
    3838:	333335b7          	lui	a1,0x33333
    383c:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    3840:	00b56633          	or	a2,a0,a1
    3844:	72c32223          	sw	a2,1828(t1)

00003848 <inst_477>:

inst_477:
// rs1_val==4 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x4, 0x66666667, x6, 1832, x8)
    3848:	00400513          	li	a0,4
    384c:	666665b7          	lui	a1,0x66666
    3850:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    3854:	00b56633          	or	a2,a0,a1
    3858:	72c32423          	sw	a2,1832(t1)

0000385c <inst_478>:

inst_478:
// rs1_val==4 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff4afd, 0x4, -0xb503, x6, 1836, x8)
    385c:	00400513          	li	a0,4
    3860:	ffff55b7          	lui	a1,0xffff5
    3864:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0xfffeeaf9>
    3868:	00b56633          	or	a2,a0,a1
    386c:	72c32623          	sw	a2,1836(t1)

00003870 <inst_479>:

inst_479:
// rs1_val==4 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xb505, 0x4, 0xb505, x6, 1840, x8)
    3870:	00400513          	li	a0,4
    3874:	0000b5b7          	lui	a1,0xb
    3878:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    387c:	00b56633          	or	a2,a0,a1
    3880:	72c32823          	sw	a2,1840(t1)

00003884 <inst_480>:

inst_480:
// rs1_val==858993458 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x33333333, 0x33333332, 0x3, x6, 1844, x8)
    3884:	33333537          	lui	a0,0x33333
    3888:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    388c:	00300593          	li	a1,3
    3890:	00b56633          	or	a2,a0,a1
    3894:	72c32a23          	sw	a2,1844(t1)

00003898 <inst_481>:

inst_481:
// rs1_val==858993458 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x33333332, 0x55555555, x6, 1848, x8)
    3898:	33333537          	lui	a0,0x33333
    389c:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    38a0:	555555b7          	lui	a1,0x55555
    38a4:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    38a8:	00b56633          	or	a2,a0,a1
    38ac:	72c32c23          	sw	a2,1848(t1)

000038b0 <inst_482>:

inst_482:
// rs1_val==858993458 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xbbbbbbba, 0x33333332, -0x55555556, x6, 1852, x8)
    38b0:	33333537          	lui	a0,0x33333
    38b4:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    38b8:	aaaab5b7          	lui	a1,0xaaaab
    38bc:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    38c0:	00b56633          	or	a2,a0,a1
    38c4:	72c32e23          	sw	a2,1852(t1)

000038c8 <inst_483>:

inst_483:
// rs1_val==858993458 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x33333337, 0x33333332, 0x5, x6, 1856, x8)
    38c8:	33333537          	lui	a0,0x33333
    38cc:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    38d0:	00500593          	li	a1,5
    38d4:	00b56633          	or	a2,a0,a1
    38d8:	74c32023          	sw	a2,1856(t1)

000038dc <inst_484>:

inst_484:
// rs1_val==858993458 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x33333333, 0x33333332, 0x33333333, x6, 1860, x8)
    38dc:	33333537          	lui	a0,0x33333
    38e0:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    38e4:	333335b7          	lui	a1,0x33333
    38e8:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    38ec:	00b56633          	or	a2,a0,a1
    38f0:	74c32223          	sw	a2,1860(t1)

000038f4 <inst_485>:

inst_485:
// rs1_val==858993458 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x33333332, 0x66666666, x6, 1864, x8)
    38f4:	33333537          	lui	a0,0x33333
    38f8:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    38fc:	666665b7          	lui	a1,0x66666
    3900:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    3904:	00b56633          	or	a2,a0,a1
    3908:	74c32423          	sw	a2,1864(t1)

0000390c <inst_486>:

inst_486:
// rs1_val==858993458 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff7bfe, 0x33333332, -0xb504, x6, 1868, x8)
    390c:	33333537          	lui	a0,0x33333
    3910:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    3914:	ffff55b7          	lui	a1,0xffff5
    3918:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0xfffeeaf8>
    391c:	00b56633          	or	a2,a0,a1
    3920:	74c32623          	sw	a2,1868(t1)

00003924 <inst_487>:

inst_487:
// rs1_val==858993458 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0x3333b736, 0x33333332, 0xb504, x6, 1872, x8)
    3924:	33333537          	lui	a0,0x33333
    3928:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    392c:	0000b5b7          	lui	a1,0xb
    3930:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    3934:	00b56633          	or	a2,a0,a1
    3938:	74c32823          	sw	a2,1872(t1)

0000393c <inst_488>:

inst_488:
// rs1_val==858993458 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x33333332, 0x33333332, 0x2, x6, 1876, x8)
    393c:	33333537          	lui	a0,0x33333
    3940:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    3944:	00200593          	li	a1,2
    3948:	00b56633          	or	a2,a0,a1
    394c:	74c32a23          	sw	a2,1876(t1)

00003950 <inst_489>:

inst_489:
// rs1_val==858993458 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x33333332, 0x55555554, x6, 1880, x8)
    3950:	33333537          	lui	a0,0x33333
    3954:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    3958:	555555b7          	lui	a1,0x55555
    395c:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    3960:	00b56633          	or	a2,a0,a1
    3964:	74c32c23          	sw	a2,1880(t1)

00003968 <inst_490>:

inst_490:
// rs1_val==858993458 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x33333332, 0x33333332, 0x0, x6, 1884, x8)
    3968:	33333537          	lui	a0,0x33333
    396c:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    3970:	00000593          	li	a1,0
    3974:	00b56633          	or	a2,a0,a1
    3978:	74c32e23          	sw	a2,1884(t1)

0000397c <inst_491>:

inst_491:
// rs1_val==858993458 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x33333336, 0x33333332, 0x4, x6, 1888, x8)
    397c:	33333537          	lui	a0,0x33333
    3980:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    3984:	00400593          	li	a1,4
    3988:	00b56633          	or	a2,a0,a1
    398c:	76c32023          	sw	a2,1888(t1)

00003990 <inst_492>:

inst_492:
// rs1_val==858993458 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x33333332, 0x33333332, 0x33333332, x6, 1892, x8)
    3990:	33333537          	lui	a0,0x33333
    3994:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    3998:	333335b7          	lui	a1,0x33333
    399c:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    39a0:	00b56633          	or	a2,a0,a1
    39a4:	76c32223          	sw	a2,1892(t1)

000039a8 <inst_493>:

inst_493:
// rs1_val==858993458 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x33333332, 0x66666665, x6, 1896, x8)
    39a8:	33333537          	lui	a0,0x33333
    39ac:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    39b0:	666665b7          	lui	a1,0x66666
    39b4:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    39b8:	00b56633          	or	a2,a0,a1
    39bc:	76c32423          	sw	a2,1896(t1)

000039c0 <inst_494>:

inst_494:
// rs1_val==858993458 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0x3333b733, 0x33333332, 0xb503, x6, 1900, x8)
    39c0:	33333537          	lui	a0,0x33333
    39c4:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    39c8:	0000b5b7          	lui	a1,0xb
    39cc:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    39d0:	00b56633          	or	a2,a0,a1
    39d4:	76c32623          	sw	a2,1900(t1)

000039d8 <inst_495>:

inst_495:
// rs1_val==858993458 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x33333332, 0x55555556, x6, 1904, x8)
    39d8:	33333537          	lui	a0,0x33333
    39dc:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    39e0:	555555b7          	lui	a1,0x55555
    39e4:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    39e8:	00b56633          	or	a2,a0,a1
    39ec:	76c32823          	sw	a2,1904(t1)

000039f0 <inst_496>:

inst_496:
// rs1_val==858993458 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xbbbbbbbb, 0x33333332, -0x55555555, x6, 1908, x8)
    39f0:	33333537          	lui	a0,0x33333
    39f4:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    39f8:	aaaab5b7          	lui	a1,0xaaaab
    39fc:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3a00:	00b56633          	or	a2,a0,a1
    3a04:	76c32a23          	sw	a2,1908(t1)

00003a08 <inst_497>:

inst_497:
// rs1_val==858993458 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x33333336, 0x33333332, 0x6, x6, 1912, x8)
    3a08:	33333537          	lui	a0,0x33333
    3a0c:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    3a10:	00600593          	li	a1,6
    3a14:	00b56633          	or	a2,a0,a1
    3a18:	76c32c23          	sw	a2,1912(t1)

00003a1c <inst_498>:

inst_498:
// rs1_val==858993458 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x33333336, 0x33333332, 0x33333334, x6, 1916, x8)
    3a1c:	33333537          	lui	a0,0x33333
    3a20:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    3a24:	333335b7          	lui	a1,0x33333
    3a28:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    3a2c:	00b56633          	or	a2,a0,a1
    3a30:	76c32e23          	sw	a2,1916(t1)

00003a34 <inst_499>:

inst_499:
// rs1_val==858993458 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x33333332, 0x66666667, x6, 1920, x8)
    3a34:	33333537          	lui	a0,0x33333
    3a38:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    3a3c:	666665b7          	lui	a1,0x66666
    3a40:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    3a44:	00b56633          	or	a2,a0,a1
    3a48:	78c32023          	sw	a2,1920(t1)

00003a4c <inst_500>:

inst_500:
// rs1_val==858993458 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff7bff, 0x33333332, -0xb503, x6, 1924, x8)
    3a4c:	33333537          	lui	a0,0x33333
    3a50:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    3a54:	ffff55b7          	lui	a1,0xffff5
    3a58:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0xfffeeaf9>
    3a5c:	00b56633          	or	a2,a0,a1
    3a60:	78c32223          	sw	a2,1924(t1)

00003a64 <inst_501>:

inst_501:
// rs1_val==858993458 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0x3333b737, 0x33333332, 0xb505, x6, 1928, x8)
    3a64:	33333537          	lui	a0,0x33333
    3a68:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    3a6c:	0000b5b7          	lui	a1,0xb
    3a70:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    3a74:	00b56633          	or	a2,a0,a1
    3a78:	78c32423          	sw	a2,1928(t1)

00003a7c <inst_502>:

inst_502:
// rs1_val==1717986917 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666665, 0x3, x6, 1932, x8)
    3a7c:	66666537          	lui	a0,0x66666
    3a80:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3a84:	00300593          	li	a1,3
    3a88:	00b56633          	or	a2,a0,a1
    3a8c:	78c32623          	sw	a2,1932(t1)

00003a90 <inst_503>:

inst_503:
// rs1_val==1717986917 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x77777775, 0x66666665, 0x55555555, x6, 1936, x8)
    3a90:	66666537          	lui	a0,0x66666
    3a94:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3a98:	555555b7          	lui	a1,0x55555
    3a9c:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    3aa0:	00b56633          	or	a2,a0,a1
    3aa4:	78c32823          	sw	a2,1936(t1)

00003aa8 <inst_504>:

inst_504:
// rs1_val==1717986917 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xeeeeeeef, 0x66666665, -0x55555556, x6, 1940, x8)
    3aa8:	66666537          	lui	a0,0x66666
    3aac:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3ab0:	aaaab5b7          	lui	a1,0xaaaab
    3ab4:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    3ab8:	00b56633          	or	a2,a0,a1
    3abc:	78c32a23          	sw	a2,1940(t1)

00003ac0 <inst_505>:

inst_505:
// rs1_val==1717986917 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x66666665, 0x66666665, 0x5, x6, 1944, x8)
    3ac0:	66666537          	lui	a0,0x66666
    3ac4:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3ac8:	00500593          	li	a1,5
    3acc:	00b56633          	or	a2,a0,a1
    3ad0:	78c32c23          	sw	a2,1944(t1)

00003ad4 <inst_506>:

inst_506:
// rs1_val==1717986917 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x66666665, 0x33333333, x6, 1948, x8)
    3ad4:	66666537          	lui	a0,0x66666
    3ad8:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3adc:	333335b7          	lui	a1,0x33333
    3ae0:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    3ae4:	00b56633          	or	a2,a0,a1
    3ae8:	78c32e23          	sw	a2,1948(t1)

00003aec <inst_507>:

inst_507:
// rs1_val==1717986917 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666665, 0x66666666, x6, 1952, x8)
    3aec:	66666537          	lui	a0,0x66666
    3af0:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3af4:	666665b7          	lui	a1,0x66666
    3af8:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    3afc:	00b56633          	or	a2,a0,a1
    3b00:	7ac32023          	sw	a2,1952(t1)

00003b04 <inst_508>:

inst_508:
// rs1_val==1717986917 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff6efd, 0x66666665, -0xb504, x6, 1956, x8)
    3b04:	66666537          	lui	a0,0x66666
    3b08:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3b0c:	ffff55b7          	lui	a1,0xffff5
    3b10:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0xfffeeaf8>
    3b14:	00b56633          	or	a2,a0,a1
    3b18:	7ac32223          	sw	a2,1956(t1)

00003b1c <inst_509>:

inst_509:
// rs1_val==1717986917 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0x6666f765, 0x66666665, 0xb504, x6, 1960, x8)
    3b1c:	66666537          	lui	a0,0x66666
    3b20:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3b24:	0000b5b7          	lui	a1,0xb
    3b28:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    3b2c:	00b56633          	or	a2,a0,a1
    3b30:	7ac32423          	sw	a2,1960(t1)

00003b34 <inst_510>:

inst_510:
// rs1_val==1717986917 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666665, 0x2, x6, 1964, x8)
    3b34:	66666537          	lui	a0,0x66666
    3b38:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3b3c:	00200593          	li	a1,2
    3b40:	00b56633          	or	a2,a0,a1
    3b44:	7ac32623          	sw	a2,1964(t1)

00003b48 <inst_511>:

inst_511:
// rs1_val==1717986917 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x77777775, 0x66666665, 0x55555554, x6, 1968, x8)
    3b48:	66666537          	lui	a0,0x66666
    3b4c:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3b50:	555555b7          	lui	a1,0x55555
    3b54:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    3b58:	00b56633          	or	a2,a0,a1
    3b5c:	7ac32823          	sw	a2,1968(t1)

00003b60 <inst_512>:

inst_512:
// rs1_val==1717986917 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x66666665, 0x66666665, 0x0, x6, 1972, x8)
    3b60:	66666537          	lui	a0,0x66666
    3b64:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3b68:	00000593          	li	a1,0
    3b6c:	00b56633          	or	a2,a0,a1
    3b70:	7ac32a23          	sw	a2,1972(t1)

00003b74 <inst_513>:

inst_513:
// rs1_val==1717986917 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x66666665, 0x66666665, 0x4, x6, 1976, x8)
    3b74:	66666537          	lui	a0,0x66666
    3b78:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3b7c:	00400593          	li	a1,4
    3b80:	00b56633          	or	a2,a0,a1
    3b84:	7ac32c23          	sw	a2,1976(t1)

00003b88 <inst_514>:

inst_514:
// rs1_val==1717986917 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x66666665, 0x33333332, x6, 1980, x8)
    3b88:	66666537          	lui	a0,0x66666
    3b8c:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3b90:	333335b7          	lui	a1,0x33333
    3b94:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    3b98:	00b56633          	or	a2,a0,a1
    3b9c:	7ac32e23          	sw	a2,1980(t1)

00003ba0 <inst_515>:

inst_515:
// rs1_val==1717986917 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x66666665, 0x66666665, 0x66666665, x6, 1984, x8)
    3ba0:	66666537          	lui	a0,0x66666
    3ba4:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3ba8:	666665b7          	lui	a1,0x66666
    3bac:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    3bb0:	00b56633          	or	a2,a0,a1
    3bb4:	7cc32023          	sw	a2,1984(t1)

00003bb8 <inst_516>:

inst_516:
// rs1_val==1717986917 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0x6666f767, 0x66666665, 0xb503, x6, 1988, x8)
    3bb8:	66666537          	lui	a0,0x66666
    3bbc:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3bc0:	0000b5b7          	lui	a1,0xb
    3bc4:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    3bc8:	00b56633          	or	a2,a0,a1
    3bcc:	7cc32223          	sw	a2,1988(t1)

00003bd0 <inst_517>:

inst_517:
// rs1_val==1717986917 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x66666665, 0x55555556, x6, 1992, x8)
    3bd0:	66666537          	lui	a0,0x66666
    3bd4:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3bd8:	555555b7          	lui	a1,0x55555
    3bdc:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    3be0:	00b56633          	or	a2,a0,a1
    3be4:	7cc32423          	sw	a2,1992(t1)

00003be8 <inst_518>:

inst_518:
// rs1_val==1717986917 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xeeeeeeef, 0x66666665, -0x55555555, x6, 1996, x8)
    3be8:	66666537          	lui	a0,0x66666
    3bec:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3bf0:	aaaab5b7          	lui	a1,0xaaaab
    3bf4:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3bf8:	00b56633          	or	a2,a0,a1
    3bfc:	7cc32623          	sw	a2,1996(t1)

00003c00 <inst_519>:

inst_519:
// rs1_val==1717986917 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666665, 0x6, x6, 2000, x8)
    3c00:	66666537          	lui	a0,0x66666
    3c04:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3c08:	00600593          	li	a1,6
    3c0c:	00b56633          	or	a2,a0,a1
    3c10:	7cc32823          	sw	a2,2000(t1)

00003c14 <inst_520>:

inst_520:
// rs1_val==1717986917 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x77777775, 0x66666665, 0x33333334, x6, 2004, x8)
    3c14:	66666537          	lui	a0,0x66666
    3c18:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3c1c:	333335b7          	lui	a1,0x33333
    3c20:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    3c24:	00b56633          	or	a2,a0,a1
    3c28:	7cc32a23          	sw	a2,2004(t1)

00003c2c <inst_521>:

inst_521:
// rs1_val==1717986917 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666665, 0x66666667, x6, 2008, x8)
    3c2c:	66666537          	lui	a0,0x66666
    3c30:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3c34:	666665b7          	lui	a1,0x66666
    3c38:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    3c3c:	00b56633          	or	a2,a0,a1
    3c40:	7cc32c23          	sw	a2,2008(t1)

00003c44 <inst_522>:

inst_522:
// rs1_val==1717986917 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff6efd, 0x66666665, -0xb503, x6, 2012, x8)
    3c44:	66666537          	lui	a0,0x66666
    3c48:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3c4c:	ffff55b7          	lui	a1,0xffff5
    3c50:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0xfffeeaf9>
    3c54:	00b56633          	or	a2,a0,a1
    3c58:	7cc32e23          	sw	a2,2012(t1)

00003c5c <inst_523>:

inst_523:
// rs1_val==1717986917 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0x6666f765, 0x66666665, 0xb505, x6, 2016, x8)
    3c5c:	66666537          	lui	a0,0x66666
    3c60:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3c64:	0000b5b7          	lui	a1,0xb
    3c68:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    3c6c:	00b56633          	or	a2,a0,a1
    3c70:	7ec32023          	sw	a2,2016(t1)

00003c74 <inst_524>:

inst_524:
// rs1_val==46339 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0xb503, 0xb503, 0x3, x6, 2020, x8)
    3c74:	0000b537          	lui	a0,0xb
    3c78:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3c7c:	00300593          	li	a1,3
    3c80:	00b56633          	or	a2,a0,a1
    3c84:	7ec32223          	sw	a2,2020(t1)

00003c88 <inst_525>:

inst_525:
// rs1_val==46339 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x5555f557, 0xb503, 0x55555555, x6, 2024, x8)
    3c88:	0000b537          	lui	a0,0xb
    3c8c:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3c90:	555555b7          	lui	a1,0x55555
    3c94:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    3c98:	00b56633          	or	a2,a0,a1
    3c9c:	7ec32423          	sw	a2,2024(t1)

00003ca0 <inst_526>:

inst_526:
// rs1_val==46339 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xaaaabfab, 0xb503, -0x55555556, x6, 2028, x8)
    3ca0:	0000b537          	lui	a0,0xb
    3ca4:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3ca8:	aaaab5b7          	lui	a1,0xaaaab
    3cac:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    3cb0:	00b56633          	or	a2,a0,a1
    3cb4:	7ec32623          	sw	a2,2028(t1)

00003cb8 <inst_527>:

inst_527:
// rs1_val==46339 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0xb503, 0x5, x6, 2032, x8)
    3cb8:	0000b537          	lui	a0,0xb
    3cbc:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3cc0:	00500593          	li	a1,5
    3cc4:	00b56633          	or	a2,a0,a1
    3cc8:	7ec32823          	sw	a2,2032(t1)

00003ccc <inst_528>:

inst_528:
// rs1_val==46339 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x3333b733, 0xb503, 0x33333333, x6, 2036, x8)
    3ccc:	0000b537          	lui	a0,0xb
    3cd0:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3cd4:	333335b7          	lui	a1,0x33333
    3cd8:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    3cdc:	00b56633          	or	a2,a0,a1
    3ce0:	7ec32a23          	sw	a2,2036(t1)

00003ce4 <inst_529>:

inst_529:
// rs1_val==46339 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x6666f767, 0xb503, 0x66666666, x6, 2040, x8)
    3ce4:	0000b537          	lui	a0,0xb
    3ce8:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3cec:	666665b7          	lui	a1,0x66666
    3cf0:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    3cf4:	00b56633          	or	a2,a0,a1
    3cf8:	7ec32c23          	sw	a2,2040(t1)

00003cfc <inst_530>:

inst_530:
// rs1_val==46339 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, 0xb503, -0xb504, x6, 2044, x8)
    3cfc:	0000b537          	lui	a0,0xb
    3d00:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3d04:	ffff55b7          	lui	a1,0xffff5
    3d08:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0xfffeeaf8>
    3d0c:	00b56633          	or	a2,a0,a1
    3d10:	7ec32e23          	sw	a2,2044(t1)
RVTEST_SIGBASE( x6,signature_x6_1)
    3d14:	00002317          	auipc	t1,0x2
    3d18:	b4830313          	addi	t1,t1,-1208 # 585c <signature_x6_1>

00003d1c <inst_531>:

inst_531:
// rs1_val==46339 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0xb503, 0xb504, x6, 0, x8)
    3d1c:	0000b537          	lui	a0,0xb
    3d20:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3d24:	0000b5b7          	lui	a1,0xb
    3d28:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    3d2c:	00b56633          	or	a2,a0,a1
    3d30:	00c32023          	sw	a2,0(t1)

00003d34 <inst_532>:

inst_532:
// rs1_val==46339 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0xb503, 0xb503, 0x2, x6, 4, x8)
    3d34:	0000b537          	lui	a0,0xb
    3d38:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3d3c:	00200593          	li	a1,2
    3d40:	00b56633          	or	a2,a0,a1
    3d44:	00c32223          	sw	a2,4(t1)

00003d48 <inst_533>:

inst_533:
// rs1_val==46339 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x5555f557, 0xb503, 0x55555554, x6, 8, x8)
    3d48:	0000b537          	lui	a0,0xb
    3d4c:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3d50:	555555b7          	lui	a1,0x55555
    3d54:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    3d58:	00b56633          	or	a2,a0,a1
    3d5c:	00c32423          	sw	a2,8(t1)

00003d60 <inst_534>:

inst_534:
// rs1_val==46339 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0xb503, 0xb503, 0x0, x6, 12, x8)
    3d60:	0000b537          	lui	a0,0xb
    3d64:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3d68:	00000593          	li	a1,0
    3d6c:	00b56633          	or	a2,a0,a1
    3d70:	00c32623          	sw	a2,12(t1)

00003d74 <inst_535>:

inst_535:
// rs1_val==46339 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0xb503, 0x4, x6, 16, x8)
    3d74:	0000b537          	lui	a0,0xb
    3d78:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3d7c:	00400593          	li	a1,4
    3d80:	00b56633          	or	a2,a0,a1
    3d84:	00c32823          	sw	a2,16(t1)

00003d88 <inst_536>:

inst_536:
// rs1_val==46339 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x3333b733, 0xb503, 0x33333332, x6, 20, x8)
    3d88:	0000b537          	lui	a0,0xb
    3d8c:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3d90:	333335b7          	lui	a1,0x33333
    3d94:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    3d98:	00b56633          	or	a2,a0,a1
    3d9c:	00c32a23          	sw	a2,20(t1)

00003da0 <inst_537>:

inst_537:
// rs1_val==46339 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x6666f767, 0xb503, 0x66666665, x6, 24, x8)
    3da0:	0000b537          	lui	a0,0xb
    3da4:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3da8:	666665b7          	lui	a1,0x66666
    3dac:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    3db0:	00b56633          	or	a2,a0,a1
    3db4:	00c32c23          	sw	a2,24(t1)

00003db8 <inst_538>:

inst_538:
// rs1_val==46339 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xb503, 0xb503, 0xb503, x6, 28, x8)
    3db8:	0000b537          	lui	a0,0xb
    3dbc:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3dc0:	0000b5b7          	lui	a1,0xb
    3dc4:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    3dc8:	00b56633          	or	a2,a0,a1
    3dcc:	00c32e23          	sw	a2,28(t1)

00003dd0 <inst_539>:

inst_539:
// rs1_val==46339 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x5555f557, 0xb503, 0x55555556, x6, 32, x8)
    3dd0:	0000b537          	lui	a0,0xb
    3dd4:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3dd8:	555555b7          	lui	a1,0x55555
    3ddc:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    3de0:	00b56633          	or	a2,a0,a1
    3de4:	02c32023          	sw	a2,32(t1)

00003de8 <inst_540>:

inst_540:
// rs1_val==46339 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xaaaabfab, 0xb503, -0x55555555, x6, 36, x8)
    3de8:	0000b537          	lui	a0,0xb
    3dec:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3df0:	aaaab5b7          	lui	a1,0xaaaab
    3df4:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3df8:	00b56633          	or	a2,a0,a1
    3dfc:	02c32223          	sw	a2,36(t1)

00003e00 <inst_541>:

inst_541:
// rs1_val==46339 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0xb503, 0x6, x6, 40, x8)
    3e00:	0000b537          	lui	a0,0xb
    3e04:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3e08:	00600593          	li	a1,6
    3e0c:	00b56633          	or	a2,a0,a1
    3e10:	02c32423          	sw	a2,40(t1)

00003e14 <inst_542>:

inst_542:
// rs1_val==46339 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x3333b737, 0xb503, 0x33333334, x6, 44, x8)
    3e14:	0000b537          	lui	a0,0xb
    3e18:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3e1c:	333335b7          	lui	a1,0x33333
    3e20:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    3e24:	00b56633          	or	a2,a0,a1
    3e28:	02c32623          	sw	a2,44(t1)

00003e2c <inst_543>:

inst_543:
// rs1_val==46339 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x6666f767, 0xb503, 0x66666667, x6, 48, x8)
    3e2c:	0000b537          	lui	a0,0xb
    3e30:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3e34:	666665b7          	lui	a1,0x66666
    3e38:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    3e3c:	00b56633          	or	a2,a0,a1
    3e40:	02c32823          	sw	a2,48(t1)

00003e44 <inst_544>:

inst_544:
// rs1_val==46339 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, 0xb503, -0xb503, x6, 52, x8)
    3e44:	0000b537          	lui	a0,0xb
    3e48:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3e4c:	ffff55b7          	lui	a1,0xffff5
    3e50:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0xfffeeaf9>
    3e54:	00b56633          	or	a2,a0,a1
    3e58:	02c32a23          	sw	a2,52(t1)

00003e5c <inst_545>:

inst_545:
// rs1_val==46339 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0xb503, 0xb505, x6, 56, x8)
    3e5c:	0000b537          	lui	a0,0xb
    3e60:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3e64:	0000b5b7          	lui	a1,0xb
    3e68:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    3e6c:	00b56633          	or	a2,a0,a1
    3e70:	02c32c23          	sw	a2,56(t1)

00003e74 <inst_546>:

inst_546:
// rs1_val==1431655766 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x55555556, 0x3, x6, 60, x8)
    3e74:	55555537          	lui	a0,0x55555
    3e78:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3e7c:	00300593          	li	a1,3
    3e80:	00b56633          	or	a2,a0,a1
    3e84:	02c32e23          	sw	a2,60(t1)

00003e88 <inst_547>:

inst_547:
// rs1_val==1431655766 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x55555556, 0x55555555, x6, 64, x8)
    3e88:	55555537          	lui	a0,0x55555
    3e8c:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3e90:	555555b7          	lui	a1,0x55555
    3e94:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    3e98:	00b56633          	or	a2,a0,a1
    3e9c:	04c32023          	sw	a2,64(t1)

00003ea0 <inst_548>:

inst_548:
// rs1_val==1431655766 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xfffffffe, 0x55555556, -0x55555556, x6, 68, x8)
    3ea0:	55555537          	lui	a0,0x55555
    3ea4:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3ea8:	aaaab5b7          	lui	a1,0xaaaab
    3eac:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    3eb0:	00b56633          	or	a2,a0,a1
    3eb4:	04c32223          	sw	a2,68(t1)

00003eb8 <inst_549>:

inst_549:
// rs1_val==1431655766 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x55555556, 0x5, x6, 72, x8)
    3eb8:	55555537          	lui	a0,0x55555
    3ebc:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3ec0:	00500593          	li	a1,5
    3ec4:	00b56633          	or	a2,a0,a1
    3ec8:	04c32423          	sw	a2,72(t1)

00003ecc <inst_550>:

inst_550:
// rs1_val==1431655766 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x55555556, 0x33333333, x6, 76, x8)
    3ecc:	55555537          	lui	a0,0x55555
    3ed0:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3ed4:	333335b7          	lui	a1,0x33333
    3ed8:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    3edc:	00b56633          	or	a2,a0,a1
    3ee0:	04c32623          	sw	a2,76(t1)

00003ee4 <inst_551>:

inst_551:
// rs1_val==1431655766 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x55555556, 0x66666666, x6, 80, x8)
    3ee4:	55555537          	lui	a0,0x55555
    3ee8:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3eec:	666665b7          	lui	a1,0x66666
    3ef0:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    3ef4:	00b56633          	or	a2,a0,a1
    3ef8:	04c32823          	sw	a2,80(t1)

00003efc <inst_552>:

inst_552:
// rs1_val==1431655766 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff5ffe, 0x55555556, -0xb504, x6, 84, x8)
    3efc:	55555537          	lui	a0,0x55555
    3f00:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3f04:	ffff55b7          	lui	a1,0xffff5
    3f08:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0xfffeeaf8>
    3f0c:	00b56633          	or	a2,a0,a1
    3f10:	04c32a23          	sw	a2,84(t1)

00003f14 <inst_553>:

inst_553:
// rs1_val==1431655766 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0x5555f556, 0x55555556, 0xb504, x6, 88, x8)
    3f14:	55555537          	lui	a0,0x55555
    3f18:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3f1c:	0000b5b7          	lui	a1,0xb
    3f20:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    3f24:	00b56633          	or	a2,a0,a1
    3f28:	04c32c23          	sw	a2,88(t1)

00003f2c <inst_554>:

inst_554:
// rs1_val==1431655766 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x55555556, 0x2, x6, 92, x8)
    3f2c:	55555537          	lui	a0,0x55555
    3f30:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3f34:	00200593          	li	a1,2
    3f38:	00b56633          	or	a2,a0,a1
    3f3c:	04c32e23          	sw	a2,92(t1)

00003f40 <inst_555>:

inst_555:
// rs1_val==1431655766 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x55555556, 0x55555554, x6, 96, x8)
    3f40:	55555537          	lui	a0,0x55555
    3f44:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3f48:	555555b7          	lui	a1,0x55555
    3f4c:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    3f50:	00b56633          	or	a2,a0,a1
    3f54:	06c32023          	sw	a2,96(t1)

00003f58 <inst_556>:

inst_556:
// rs1_val==1431655766 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x55555556, 0x0, x6, 100, x8)
    3f58:	55555537          	lui	a0,0x55555
    3f5c:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3f60:	00000593          	li	a1,0
    3f64:	00b56633          	or	a2,a0,a1
    3f68:	06c32223          	sw	a2,100(t1)

00003f6c <inst_557>:

inst_557:
// rs1_val==1431655766 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x55555556, 0x4, x6, 104, x8)
    3f6c:	55555537          	lui	a0,0x55555
    3f70:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3f74:	00400593          	li	a1,4
    3f78:	00b56633          	or	a2,a0,a1
    3f7c:	06c32423          	sw	a2,104(t1)

00003f80 <inst_558>:

inst_558:
// rs1_val==1431655766 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x55555556, 0x33333332, x6, 108, x8)
    3f80:	55555537          	lui	a0,0x55555
    3f84:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3f88:	333335b7          	lui	a1,0x33333
    3f8c:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    3f90:	00b56633          	or	a2,a0,a1
    3f94:	06c32623          	sw	a2,108(t1)

00003f98 <inst_559>:

inst_559:
// rs1_val==1431655766 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x55555556, 0x66666665, x6, 112, x8)
    3f98:	55555537          	lui	a0,0x55555
    3f9c:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3fa0:	666665b7          	lui	a1,0x66666
    3fa4:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    3fa8:	00b56633          	or	a2,a0,a1
    3fac:	06c32823          	sw	a2,112(t1)

00003fb0 <inst_560>:

inst_560:
// rs1_val==1431655766 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0x5555f557, 0x55555556, 0xb503, x6, 116, x8)
    3fb0:	55555537          	lui	a0,0x55555
    3fb4:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3fb8:	0000b5b7          	lui	a1,0xb
    3fbc:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    3fc0:	00b56633          	or	a2,a0,a1
    3fc4:	06c32a23          	sw	a2,116(t1)

00003fc8 <inst_561>:

inst_561:
// rs1_val==1431655766 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x55555556, 0x55555556, x6, 120, x8)
    3fc8:	55555537          	lui	a0,0x55555
    3fcc:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3fd0:	555555b7          	lui	a1,0x55555
    3fd4:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    3fd8:	00b56633          	or	a2,a0,a1
    3fdc:	06c32c23          	sw	a2,120(t1)

00003fe0 <inst_562>:

inst_562:
// rs1_val==1431655766 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, 0x55555556, -0x55555555, x6, 124, x8)
    3fe0:	55555537          	lui	a0,0x55555
    3fe4:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3fe8:	aaaab5b7          	lui	a1,0xaaaab
    3fec:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3ff0:	00b56633          	or	a2,a0,a1
    3ff4:	06c32e23          	sw	a2,124(t1)

00003ff8 <inst_563>:

inst_563:
// rs1_val==1431655766 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x55555556, 0x6, x6, 128, x8)
    3ff8:	55555537          	lui	a0,0x55555
    3ffc:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    4000:	00600593          	li	a1,6
    4004:	00b56633          	or	a2,a0,a1
    4008:	08c32023          	sw	a2,128(t1)

0000400c <inst_564>:

inst_564:
// rs1_val==1431655766 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x55555556, 0x33333334, x6, 132, x8)
    400c:	55555537          	lui	a0,0x55555
    4010:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    4014:	333335b7          	lui	a1,0x33333
    4018:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    401c:	00b56633          	or	a2,a0,a1
    4020:	08c32223          	sw	a2,132(t1)

00004024 <inst_565>:

inst_565:
// rs1_val==1431655766 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x55555556, 0x66666667, x6, 136, x8)
    4024:	55555537          	lui	a0,0x55555
    4028:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    402c:	666665b7          	lui	a1,0x66666
    4030:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    4034:	00b56633          	or	a2,a0,a1
    4038:	08c32423          	sw	a2,136(t1)

0000403c <inst_566>:

inst_566:
// rs1_val==1431655766 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff5fff, 0x55555556, -0xb503, x6, 140, x8)
    403c:	55555537          	lui	a0,0x55555
    4040:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    4044:	ffff55b7          	lui	a1,0xffff5
    4048:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0xfffeeaf9>
    404c:	00b56633          	or	a2,a0,a1
    4050:	08c32623          	sw	a2,140(t1)

00004054 <inst_567>:

inst_567:
// rs1_val==1431655766 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0x5555f557, 0x55555556, 0xb505, x6, 144, x8)
    4054:	55555537          	lui	a0,0x55555
    4058:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    405c:	0000b5b7          	lui	a1,0xb
    4060:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    4064:	00b56633          	or	a2,a0,a1
    4068:	08c32823          	sw	a2,144(t1)

0000406c <inst_568>:

inst_568:
// rs1_val==-1431655765 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaab, -0x55555555, 0x3, x6, 148, x8)
    406c:	aaaab537          	lui	a0,0xaaaab
    4070:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    4074:	00300593          	li	a1,3
    4078:	00b56633          	or	a2,a0,a1
    407c:	08c32a23          	sw	a2,148(t1)

00004080 <inst_569>:

inst_569:
// rs1_val==-1431655765 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x55555555, 0x55555555, x6, 152, x8)
    4080:	aaaab537          	lui	a0,0xaaaab
    4084:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    4088:	555555b7          	lui	a1,0x55555
    408c:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    4090:	00b56633          	or	a2,a0,a1
    4094:	08c32c23          	sw	a2,152(t1)

00004098 <inst_570>:

inst_570:
// rs1_val==-1431655765 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaab, -0x55555555, -0x55555556, x6, 156, x8)
    4098:	aaaab537          	lui	a0,0xaaaab
    409c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    40a0:	aaaab5b7          	lui	a1,0xaaaab
    40a4:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    40a8:	00b56633          	or	a2,a0,a1
    40ac:	08c32e23          	sw	a2,156(t1)

000040b0 <inst_571>:

inst_571:
// rs1_val==-1431655765 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaf, -0x55555555, 0x5, x6, 160, x8)
    40b0:	aaaab537          	lui	a0,0xaaaab
    40b4:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    40b8:	00500593          	li	a1,5
    40bc:	00b56633          	or	a2,a0,a1
    40c0:	0ac32023          	sw	a2,160(t1)

000040c4 <inst_572>:

inst_572:
// rs1_val==-1431655765 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0xbbbbbbbb, -0x55555555, 0x33333333, x6, 164, x8)
    40c4:	aaaab537          	lui	a0,0xaaaab
    40c8:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    40cc:	333335b7          	lui	a1,0x33333
    40d0:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    40d4:	00b56633          	or	a2,a0,a1
    40d8:	0ac32223          	sw	a2,164(t1)

000040dc <inst_573>:

inst_573:
// rs1_val==-1431655765 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0xeeeeeeef, -0x55555555, 0x66666666, x6, 168, x8)
    40dc:	aaaab537          	lui	a0,0xaaaab
    40e0:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    40e4:	666665b7          	lui	a1,0x66666
    40e8:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    40ec:	00b56633          	or	a2,a0,a1
    40f0:	0ac32423          	sw	a2,168(t1)

000040f4 <inst_574>:

inst_574:
// rs1_val==-1431655765 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffffeaff, -0x55555555, -0xb504, x6, 172, x8)
    40f4:	aaaab537          	lui	a0,0xaaaab
    40f8:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    40fc:	ffff55b7          	lui	a1,0xffff5
    4100:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0xfffeeaf8>
    4104:	00b56633          	or	a2,a0,a1
    4108:	0ac32623          	sw	a2,172(t1)

0000410c <inst_575>:

inst_575:
// rs1_val==-1431655765 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xaaaabfaf, -0x55555555, 0xb504, x6, 176, x8)
    410c:	aaaab537          	lui	a0,0xaaaab
    4110:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    4114:	0000b5b7          	lui	a1,0xb
    4118:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    411c:	00b56633          	or	a2,a0,a1
    4120:	0ac32823          	sw	a2,176(t1)

00004124 <inst_576>:

inst_576:
// rs1_val==-1431655765 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaab, -0x55555555, 0x2, x6, 180, x8)
    4124:	aaaab537          	lui	a0,0xaaaab
    4128:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    412c:	00200593          	li	a1,2
    4130:	00b56633          	or	a2,a0,a1
    4134:	0ac32a23          	sw	a2,180(t1)

00004138 <inst_577>:

inst_577:
// rs1_val==-1431655765 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x55555555, 0x55555554, x6, 184, x8)
    4138:	aaaab537          	lui	a0,0xaaaab
    413c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    4140:	555555b7          	lui	a1,0x55555
    4144:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    4148:	00b56633          	or	a2,a0,a1
    414c:	0ac32c23          	sw	a2,184(t1)

00004150 <inst_578>:

inst_578:
// rs1_val==-1431655765 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaab, -0x55555555, 0x0, x6, 188, x8)
    4150:	aaaab537          	lui	a0,0xaaaab
    4154:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    4158:	00000593          	li	a1,0
    415c:	00b56633          	or	a2,a0,a1
    4160:	0ac32e23          	sw	a2,188(t1)

00004164 <inst_579>:

inst_579:
// rs1_val==-1431655765 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaf, -0x55555555, 0x4, x6, 192, x8)
    4164:	aaaab537          	lui	a0,0xaaaab
    4168:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    416c:	00400593          	li	a1,4
    4170:	00b56633          	or	a2,a0,a1
    4174:	0cc32023          	sw	a2,192(t1)

00004178 <inst_580>:

inst_580:
// rs1_val==-1431655765 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0xbbbbbbbb, -0x55555555, 0x33333332, x6, 196, x8)
    4178:	aaaab537          	lui	a0,0xaaaab
    417c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    4180:	333335b7          	lui	a1,0x33333
    4184:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    4188:	00b56633          	or	a2,a0,a1
    418c:	0cc32223          	sw	a2,196(t1)

00004190 <inst_581>:

inst_581:
// rs1_val==-1431655765 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0xeeeeeeef, -0x55555555, 0x66666665, x6, 200, x8)
    4190:	aaaab537          	lui	a0,0xaaaab
    4194:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    4198:	666665b7          	lui	a1,0x66666
    419c:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    41a0:	00b56633          	or	a2,a0,a1
    41a4:	0cc32423          	sw	a2,200(t1)

000041a8 <inst_582>:

inst_582:
// rs1_val==-1431655765 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xaaaabfab, -0x55555555, 0xb503, x6, 204, x8)
    41a8:	aaaab537          	lui	a0,0xaaaab
    41ac:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    41b0:	0000b5b7          	lui	a1,0xb
    41b4:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    41b8:	00b56633          	or	a2,a0,a1
    41bc:	0cc32623          	sw	a2,204(t1)

000041c0 <inst_583>:

inst_583:
// rs1_val==-1431655765 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x55555555, 0x55555556, x6, 208, x8)
    41c0:	aaaab537          	lui	a0,0xaaaab
    41c4:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    41c8:	555555b7          	lui	a1,0x55555
    41cc:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    41d0:	00b56633          	or	a2,a0,a1
    41d4:	0cc32823          	sw	a2,208(t1)

000041d8 <inst_584>:

inst_584:
// rs1_val > 0 and rs2_val < 0, rs2_val == -2049, rs1_val == 2
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:-0x801
TEST_RR_OP(or, x12, x10, x11, 0xfffff7ff, 0x2, -0x801, x6, 212, x8)
    41d8:	00200513          	li	a0,2
    41dc:	fffff5b7          	lui	a1,0xfffff
    41e0:	7ff58593          	addi	a1,a1,2047 # fffff7ff <_end+0xffff97fb>
    41e4:	00b56633          	or	a2,a0,a1
    41e8:	0cc32a23          	sw	a2,212(t1)

000041ec <inst_585>:

inst_585:
// rs1_val < 0 and rs2_val < 0, rs1_val == -268435457, rs2_val == -1025
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x10000001;  op2val:-0x401
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x10000001, -0x401, x6, 216, x8)
    41ec:	f0000537          	lui	a0,0xf0000
    41f0:	fff50513          	addi	a0,a0,-1 # efffffff <_end+0xefff9ffb>
    41f4:	bff00593          	li	a1,-1025
    41f8:	00b56633          	or	a2,a0,a1
    41fc:	0cc32c23          	sw	a2,216(t1)

00004200 <inst_586>:

inst_586:
// rs2_val == 2097152, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x200000
TEST_RR_OP(or, x12, x10, x11, 0x33333332, 0x33333332, 0x200000, x6, 220, x8)
    4200:	33333537          	lui	a0,0x33333
    4204:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    4208:	002005b7          	lui	a1,0x200
    420c:	00b56633          	or	a2,a0,a1
    4210:	0cc32e23          	sw	a2,220(t1)
    4214:	00000013          	nop
    4218:	00000013          	nop
    421c:	00000013          	nop

00004220 <rvtest_code_end>:
#endif


RVTEST_CODE_END
RVMODEL_HALT
    4220:	babed0b7          	lui	ra,0xbabed
    4224:	afe08093          	addi	ra,ra,-1282 # babecafe <_end+0xbabe6afa>

00004228 <write_tohost>:
    4228:	00002017          	auipc	zero,0x2
    422c:	dc102c23          	sw	ra,-552(zero) # fffffdd8 <_end+0xffff9dd4>

00004230 <loop>:
    4230:	0000006f          	j	4230 <loop>
	...
