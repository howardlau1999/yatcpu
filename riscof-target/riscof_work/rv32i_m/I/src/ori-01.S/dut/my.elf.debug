
my.elf:     file format elf32-littleriscv


Disassembly of section .text:

00001000 <rvtest_entry_point>:

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN
    1000:	feedc0b7          	lui	ra,0xfeedc
    1004:	ead08093          	addi	ra,ra,-339 # feedbead <_end+0xfeed6ea9>
    1008:	ff76e137          	lui	sp,0xff76e
    100c:	f5610113          	addi	sp,sp,-170 # ff76df56 <_end+0xff768f52>
    1010:	7fbb71b7          	lui	gp,0x7fbb7
    1014:	fab18193          	addi	gp,gp,-85 # 7fbb6fab <_end+0x7fbb1fa7>
    1018:	bfddb237          	lui	tp,0xbfddb
    101c:	7d520213          	addi	tp,tp,2005 # bfddb7d5 <_end+0xbfdd67d1>
    1020:	00000297          	auipc	t0,0x0
    1024:	0d828293          	addi	t0,t0,216 # 10f8 <rvtest_code_begin>
    1028:	00003317          	auipc	t1,0x3
    102c:	fd830313          	addi	t1,t1,-40 # 4000 <rvtest_data_begin>
    1030:	b7fbb3b7          	lui	t2,0xb7fbb
    1034:	6fa38393          	addi	t2,t2,1786 # b7fbb6fa <_end+0xb7fb66f6>
    1038:	5bfde437          	lui	s0,0x5bfde
    103c:	b7d40413          	addi	s0,s0,-1155 # 5bfddb7d <_end+0x5bfd8b79>
    1040:	adfef4b7          	lui	s1,0xadfef
    1044:	dbe48493          	addi	s1,s1,-578 # adfeedbe <_end+0xadfe9dba>
    1048:	56ff7537          	lui	a0,0x56ff7
    104c:	6df50513          	addi	a0,a0,1759 # 56ff76df <_end+0x56ff26db>
    1050:	ab7fc5b7          	lui	a1,0xab7fc
    1054:	b6f58593          	addi	a1,a1,-1169 # ab7fbb6f <_end+0xab7f6b6b>
    1058:	d5bfe637          	lui	a2,0xd5bfe
    105c:	db760613          	addi	a2,a2,-585 # d5bfddb7 <_end+0xd5bf8db3>
    1060:	eadff6b7          	lui	a3,0xeadff
    1064:	edb68693          	addi	a3,a3,-293 # eadfeedb <_end+0xeadf9ed7>
    1068:	f56ff737          	lui	a4,0xf56ff
    106c:	76d70713          	addi	a4,a4,1901 # f56ff76d <_end+0xf56fa769>
    1070:	fab807b7          	lui	a5,0xfab80
    1074:	bb678793          	addi	a5,a5,-1098 # fab7fbb6 <_end+0xfab7abb2>
    1078:	7d5c0837          	lui	a6,0x7d5c0
    107c:	ddb80813          	addi	a6,a6,-549 # 7d5bfddb <_end+0x7d5badd7>
    1080:	beae08b7          	lui	a7,0xbeae0
    1084:	eed88893          	addi	a7,a7,-275 # beadfeed <_end+0xbeadaee9>
    1088:	df570937          	lui	s2,0xdf570
    108c:	f7690913          	addi	s2,s2,-138 # df56ff76 <_end+0xdf56af72>
    1090:	6fab89b7          	lui	s3,0x6fab8
    1094:	fbb98993          	addi	s3,s3,-69 # 6fab7fbb <_end+0x6fab2fb7>
    1098:	b7d5ca37          	lui	s4,0xb7d5c
    109c:	fdda0a13          	addi	s4,s4,-35 # b7d5bfdd <_end+0xb7d56fd9>
    10a0:	dbeaeab7          	lui	s5,0xdbeae
    10a4:	feea8a93          	addi	s5,s5,-18 # dbeadfee <_end+0xdbea8fea>
    10a8:	6df57b37          	lui	s6,0x6df57
    10ac:	ff7b0b13          	addi	s6,s6,-9 # 6df56ff7 <_end+0x6df51ff3>
    10b0:	b6fabbb7          	lui	s7,0xb6fab
    10b4:	7fbb8b93          	addi	s7,s7,2043 # b6fab7fb <_end+0xb6fa67f7>
    10b8:	db7d6c37          	lui	s8,0xdb7d6
    10bc:	bfdc0c13          	addi	s8,s8,-1027 # db7d5bfd <_end+0xdb7d0bf9>
    10c0:	edbebcb7          	lui	s9,0xedbeb
    10c4:	dfec8c93          	addi	s9,s9,-514 # edbeadfe <_end+0xedbe5dfa>
    10c8:	76df5d37          	lui	s10,0x76df5
    10cc:	6ffd0d13          	addi	s10,s10,1791 # 76df56ff <_end+0x76df06fb>
    10d0:	bb6fbdb7          	lui	s11,0xbb6fb
    10d4:	b7fd8d93          	addi	s11,s11,-1153 # bb6fab7f <_end+0xbb6f5b7b>
    10d8:	ddb7de37          	lui	t3,0xddb7d
    10dc:	5bfe0e13          	addi	t3,t3,1471 # ddb7d5bf <_end+0xddb785bb>
    10e0:	eedbfeb7          	lui	t4,0xeedbf
    10e4:	adfe8e93          	addi	t4,t4,-1313 # eedbeadf <_end+0xeedb9adb>
    10e8:	f76dff37          	lui	t5,0xf76df
    10ec:	56ff0f13          	addi	t5,t5,1391 # f76df56f <_end+0xf76da56b>
    10f0:	fbb70fb7          	lui	t6,0xfbb70
    10f4:	ab7f8f93          	addi	t6,t6,-1353 # fbb6fab7 <_end+0xfbb6aab3>

000010f8 <rvtest_code_begin>:

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*);def TEST_CASE_1=True;",ori)

RVTEST_SIGBASE( x2,signature_x2_1)
    10f8:	00003117          	auipc	sp,0x3
    10fc:	f1810113          	addi	sp,sp,-232 # 4010 <begin_signature>

00001100 <inst_0>:

inst_0:
// rs1 != rd, rs1==x5, rd==x22, imm_val == (-2**(12-1)), imm_val == -2048, rs1_val != imm_val, rs1_val < 0 and imm_val < 0, rs1_val == -513
// opcode: ori ; op1:x5; dest:x22; op1val:-0x201;  immval:-0x800
TEST_IMM_OP( ori, x22, x5, 0xfffffdff, -0x201, -0x800, x2, 0, x9)
    1100:	dff00293          	li	t0,-513
    1104:	8002eb13          	ori	s6,t0,-2048
    1108:	01612023          	sw	s6,0(sp)

0000110c <inst_1>:

inst_1:
// rs1 == rd, rs1==x27, rd==x27, imm_val == 0, rs1_val == imm_val, rs1_val == 0, rs1_val==0 and imm_val==0
// opcode: ori ; op1:x27; dest:x27; op1val:0x0;  immval:0x0
TEST_IMM_OP( ori, x27, x27, 0x0, 0x0, 0x0, x2, 4, x9)
    110c:	00000d93          	li	s11,0
    1110:	000ded93          	ori	s11,s11,0
    1114:	01b12223          	sw	s11,4(sp)

00001118 <inst_2>:

inst_2:
// rs1==x17, rd==x8, imm_val == (2**(12-1)-1), rs1_val > 0 and imm_val > 0, imm_val == 2047
// opcode: ori ; op1:x17; dest:x8; op1val:0x33333334;  immval:0x7ff
TEST_IMM_OP( ori, x8, x17, 0x333337ff, 0x33333334, 0x7ff, x2, 8, x9)
    1118:	333338b7          	lui	a7,0x33333
    111c:	33488893          	addi	a7,a7,820 # 33333334 <_end+0x3332e330>
    1120:	7ff8e413          	ori	s0,a7,2047
    1124:	00812423          	sw	s0,8(sp)

00001128 <inst_3>:

inst_3:
// rs1==x20, rd==x1, imm_val == 1, rs1_val < 0 and imm_val > 0
// opcode: ori ; op1:x20; dest:x1; op1val:-0xb504;  immval:0x1
TEST_IMM_OP( ori, x1, x20, 0xffff4afd, -0xb504, 0x1, x2, 12, x9)
    1128:	ffff5a37          	lui	s4,0xffff5
    112c:	afca0a13          	addi	s4,s4,-1284 # ffff4afc <_end+0xfffefaf8>
    1130:	001a6093          	ori	ra,s4,1
    1134:	00112623          	sw	ra,12(sp)

00001138 <inst_4>:

inst_4:
// rs1==x12, rd==x19, rs1_val == (-2**(xlen-1)), rs1_val == -2147483648
// opcode: ori ; op1:x12; dest:x19; op1val:-0x80000000;  immval:0x2d
TEST_IMM_OP( ori, x19, x12, 0x8000002d, -0x80000000, 0x2d, x2, 16, x9)
    1138:	80000637          	lui	a2,0x80000
    113c:	02d66993          	ori	s3,a2,45
    1140:	01312823          	sw	s3,16(sp)

00001144 <inst_5>:

inst_5:
// rs1==x8, rd==x3, rs1_val == (2**(xlen-1)-1), rs1_val == 2147483647, imm_val == 1365
// opcode: ori ; op1:x8; dest:x3; op1val:0x7fffffff;  immval:0x555
TEST_IMM_OP( ori, x3, x8, 0x7fffffff, 0x7fffffff, 0x555, x2, 20, x9)
    1144:	80000437          	lui	s0,0x80000
    1148:	fff40413          	addi	s0,s0,-1 # 7fffffff <_end+0x7fffaffb>
    114c:	55546193          	ori	gp,s0,1365
    1150:	00312a23          	sw	gp,20(sp)

00001154 <inst_6>:

inst_6:
// rs1==x28, rd==x26, rs1_val == 1, 
// opcode: ori ; op1:x28; dest:x26; op1val:0x1;  immval:0x667
TEST_IMM_OP( ori, x26, x28, 0x667, 0x1, 0x667, x2, 24, x9)
    1154:	00100e13          	li	t3,1
    1158:	667e6d13          	ori	s10,t3,1639
    115c:	01a12c23          	sw	s10,24(sp)

00001160 <inst_7>:

inst_7:
// rs1==x16, rd==x23, rs1_val > 0 and imm_val < 0, 
// opcode: ori ; op1:x16; dest:x23; op1val:0x7;  immval:-0x7
TEST_IMM_OP( ori, x23, x16, 0xffffffff, 0x7, -0x7, x2, 28, x9)
    1160:	00700813          	li	a6,7
    1164:	ff986b93          	ori	s7,a6,-7
    1168:	01712e23          	sw	s7,28(sp)

0000116c <inst_8>:

inst_8:
// rs1==x25, rd==x31, imm_val == 2, rs1_val == 262144
// opcode: ori ; op1:x25; dest:x31; op1val:0x40000;  immval:0x2
TEST_IMM_OP( ori, x31, x25, 0x40002, 0x40000, 0x2, x2, 32, x9)
    116c:	00040cb7          	lui	s9,0x40
    1170:	002cef93          	ori	t6,s9,2
    1174:	03f12023          	sw	t6,32(sp)

00001178 <inst_9>:

inst_9:
// rs1==x23, rd==x11, imm_val == 4, rs1_val == 536870912
// opcode: ori ; op1:x23; dest:x11; op1val:0x20000000;  immval:0x4
TEST_IMM_OP( ori, x11, x23, 0x20000004, 0x20000000, 0x4, x2, 36, x9)
    1178:	20000bb7          	lui	s7,0x20000
    117c:	004be593          	ori	a1,s7,4
    1180:	02b12223          	sw	a1,36(sp)

00001184 <inst_10>:

inst_10:
// rs1==x14, rd==x17, imm_val == 8, 
// opcode: ori ; op1:x14; dest:x17; op1val:-0x201;  immval:0x8
TEST_IMM_OP( ori, x17, x14, 0xfffffdff, -0x201, 0x8, x2, 40, x9)
    1184:	dff00713          	li	a4,-513
    1188:	00876893          	ori	a7,a4,8
    118c:	03112423          	sw	a7,40(sp)

00001190 <inst_11>:

inst_11:
// rs1==x31, rd==x7, imm_val == 16, rs1_val == 2
// opcode: ori ; op1:x31; dest:x7; op1val:0x2;  immval:0x10
TEST_IMM_OP( ori, x7, x31, 0x12, 0x2, 0x10, x2, 44, x9)
    1190:	00200f93          	li	t6,2
    1194:	010fe393          	ori	t2,t6,16
    1198:	02712623          	sw	t2,44(sp)

0000119c <inst_12>:

inst_12:
// rs1==x21, rd==x4, imm_val == 32, rs1_val == 32768
// opcode: ori ; op1:x21; dest:x4; op1val:0x8000;  immval:0x20
TEST_IMM_OP( ori, x4, x21, 0x8020, 0x8000, 0x20, x2, 48, x9)
    119c:	00008ab7          	lui	s5,0x8
    11a0:	020ae213          	ori	tp,s5,32
    11a4:	02412823          	sw	tp,48(sp)

000011a8 <inst_13>:

inst_13:
// rs1==x15, rd==x5, imm_val == 64, rs1_val == 2048
// opcode: ori ; op1:x15; dest:x5; op1val:0x800;  immval:0x40
TEST_IMM_OP( ori, x5, x15, 0x840, 0x800, 0x40, x2, 52, x9)
    11a8:	000017b7          	lui	a5,0x1
    11ac:	80078793          	addi	a5,a5,-2048 # 800 <offset+0x798>
    11b0:	0407e293          	ori	t0,a5,64
    11b4:	02512a23          	sw	t0,52(sp)

000011b8 <inst_14>:

inst_14:
// rs1==x30, rd==x25, imm_val == 128, rs1_val == -262145
// opcode: ori ; op1:x30; dest:x25; op1val:-0x40001;  immval:0x80
TEST_IMM_OP( ori, x25, x30, 0xfffbffff, -0x40001, 0x80, x2, 56, x9)
    11b8:	fffc0f37          	lui	t5,0xfffc0
    11bc:	ffff0f13          	addi	t5,t5,-1 # fffbffff <_end+0xfffbaffb>
    11c0:	080f6c93          	ori	s9,t5,128
    11c4:	03912c23          	sw	s9,56(sp)

000011c8 <inst_15>:

inst_15:
// rs1==x11, rd==x30, imm_val == 256, rs1_val == -5
// opcode: ori ; op1:x11; dest:x30; op1val:-0x5;  immval:0x100
TEST_IMM_OP( ori, x30, x11, 0xfffffffb, -0x5, 0x100, x2, 60, x9)
    11c8:	ffb00593          	li	a1,-5
    11cc:	1005ef13          	ori	t5,a1,256
    11d0:	03e12e23          	sw	t5,60(sp)

000011d4 <inst_16>:

inst_16:
// rs1==x4, rd==x10, imm_val == 512, rs1_val == -524289
// opcode: ori ; op1:x4; dest:x10; op1val:-0x80001;  immval:0x200
TEST_IMM_OP( ori, x10, x4, 0xfff7ffff, -0x80001, 0x200, x2, 64, x9)
    11d4:	fff80237          	lui	tp,0xfff80
    11d8:	fff20213          	addi	tp,tp,-1 # fff7ffff <_end+0xfff7affb>
    11dc:	20026513          	ori	a0,tp,512
    11e0:	04a12023          	sw	a0,64(sp)

000011e4 <inst_17>:

inst_17:
// rs1==x13, rd==x0, imm_val == 1024, rs1_val == -1073741825
// opcode: ori ; op1:x13; dest:x0; op1val:-0x40000001;  immval:0x400
TEST_IMM_OP( ori, x0, x13, 0, -0x40000001, 0x400, x2, 68, x9)
    11e4:	c00006b7          	lui	a3,0xc0000
    11e8:	fff68693          	addi	a3,a3,-1 # bfffffff <_end+0xbfffaffb>
    11ec:	4006e013          	ori	zero,a3,1024
    11f0:	04012223          	sw	zero,68(sp)

000011f4 <inst_18>:

inst_18:
// rs1==x26, rd==x6, imm_val == -2, rs1_val == -33
// opcode: ori ; op1:x26; dest:x6; op1val:-0x21;  immval:-0x2
TEST_IMM_OP( ori, x6, x26, 0xffffffff, -0x21, -0x2, x2, 72, x9)
    11f4:	fdf00d13          	li	s10,-33
    11f8:	ffed6313          	ori	t1,s10,-2
    11fc:	04612423          	sw	t1,72(sp)

00001200 <inst_19>:

inst_19:
// rs1==x19, rd==x18, imm_val == -3, 
// opcode: ori ; op1:x19; dest:x18; op1val:0xb503;  immval:-0x3
TEST_IMM_OP( ori, x18, x19, 0xffffffff, 0xb503, -0x3, x2, 76, x9)
    1200:	0000b9b7          	lui	s3,0xb
    1204:	50398993          	addi	s3,s3,1283 # b503 <_end+0x64ff>
    1208:	ffd9e913          	ori	s2,s3,-3
    120c:	05212623          	sw	s2,76(sp)

00001210 <inst_20>:

inst_20:
// rs1==x7, rd==x21, imm_val == -5, rs1_val == 268435456
// opcode: ori ; op1:x7; dest:x21; op1val:0x10000000;  immval:-0x5
TEST_IMM_OP( ori, x21, x7, 0xfffffffb, 0x10000000, -0x5, x2, 80, x5)
    1210:	100003b7          	lui	t2,0x10000
    1214:	ffb3ea93          	ori	s5,t2,-5
    1218:	05512823          	sw	s5,80(sp)

0000121c <inst_21>:

inst_21:
// rs1==x24, rd==x16, imm_val == -9, 
// opcode: ori ; op1:x24; dest:x16; op1val:-0x80001;  immval:-0x9
TEST_IMM_OP( ori, x16, x24, 0xffffffff, -0x80001, -0x9, x2, 84, x5)
    121c:	fff80c37          	lui	s8,0xfff80
    1220:	fffc0c13          	addi	s8,s8,-1 # fff7ffff <_end+0xfff7affb>
    1224:	ff7c6813          	ori	a6,s8,-9
    1228:	05012a23          	sw	a6,84(sp)
RVTEST_SIGBASE( x4,signature_x4_0)
    122c:	00003217          	auipc	tp,0x3
    1230:	e3c20213          	addi	tp,tp,-452 # 4068 <signature_x4_0>

00001234 <inst_22>:

inst_22:
// rs1==x0, rd==x9, imm_val == -17, rs1_val == -16385
// opcode: ori ; op1:x0; dest:x9; op1val:0x0;  immval:-0x11
TEST_IMM_OP( ori, x9, x0, 0xffffffef, 0x0, -0x11, x4, 0, x5)
    1234:	00000013          	nop
    1238:	fef06493          	ori	s1,zero,-17
    123c:	00922023          	sw	s1,0(tp) # 0 <offset-0x68>

00001240 <inst_23>:

inst_23:
// rs1==x3, rd==x28, imm_val == -33, rs1_val == 8192
// opcode: ori ; op1:x3; dest:x28; op1val:0x2000;  immval:-0x21
TEST_IMM_OP( ori, x28, x3, 0xffffffdf, 0x2000, -0x21, x4, 4, x5)
    1240:	000021b7          	lui	gp,0x2
    1244:	fdf1ee13          	ori	t3,gp,-33
    1248:	01c22223          	sw	t3,4(tp) # 4 <offset-0x64>

0000124c <inst_24>:

inst_24:
// rs1==x1, rd==x15, imm_val == -65, 
// opcode: ori ; op1:x1; dest:x15; op1val:0x55555556;  immval:-0x41
TEST_IMM_OP( ori, x15, x1, 0xffffffff, 0x55555556, -0x41, x4, 8, x5)
    124c:	555550b7          	lui	ra,0x55555
    1250:	55608093          	addi	ra,ra,1366 # 55555556 <_end+0x55550552>
    1254:	fbf0e793          	ori	a5,ra,-65
    1258:	00f22423          	sw	a5,8(tp) # 8 <offset-0x60>

0000125c <inst_25>:

inst_25:
// rs1==x18, rd==x2, imm_val == -129, 
// opcode: ori ; op1:x18; dest:x2; op1val:-0xb504;  immval:-0x81
TEST_IMM_OP( ori, x2, x18, 0xffffffff, -0xb504, -0x81, x4, 12, x5)
    125c:	ffff5937          	lui	s2,0xffff5
    1260:	afc90913          	addi	s2,s2,-1284 # ffff4afc <_end+0xfffefaf8>
    1264:	f7f96113          	ori	sp,s2,-129
    1268:	00222623          	sw	sp,12(tp) # c <offset-0x5c>

0000126c <inst_26>:

inst_26:
// rs1==x22, rd==x20, imm_val == -257, rs1_val == -1431655766
// opcode: ori ; op1:x22; dest:x20; op1val:-0x55555556;  immval:-0x101
TEST_IMM_OP( ori, x20, x22, 0xfffffeff, -0x55555556, -0x101, x4, 16, x5)
    126c:	aaaabb37          	lui	s6,0xaaaab
    1270:	aaab0b13          	addi	s6,s6,-1366 # aaaaaaaa <_end+0xaaaa5aa6>
    1274:	effb6a13          	ori	s4,s6,-257
    1278:	01422823          	sw	s4,16(tp) # 10 <offset-0x58>

0000127c <inst_27>:

inst_27:
// rs1==x6, rd==x13, imm_val == -513, rs1_val == 16777216
// opcode: ori ; op1:x6; dest:x13; op1val:0x1000000;  immval:-0x201
TEST_IMM_OP( ori, x13, x6, 0xfffffdff, 0x1000000, -0x201, x4, 20, x5)
    127c:	01000337          	lui	t1,0x1000
    1280:	dff36693          	ori	a3,t1,-513
    1284:	00d22a23          	sw	a3,20(tp) # 14 <offset-0x54>

00001288 <inst_28>:

inst_28:
// rs1==x29, rd==x14, imm_val == -1025, 
// opcode: ori ; op1:x29; dest:x14; op1val:0x20000000;  immval:-0x401
TEST_IMM_OP( ori, x14, x29, 0xfffffbff, 0x20000000, -0x401, x4, 24, x5)
    1288:	20000eb7          	lui	t4,0x20000
    128c:	bffee713          	ori	a4,t4,-1025
    1290:	00e22c23          	sw	a4,24(tp) # 18 <offset-0x50>

00001294 <inst_29>:

inst_29:
// rs1==x2, rd==x12, imm_val == -1366, rs1_val==-46340 and imm_val==-1366
// opcode: ori ; op1:x2; dest:x12; op1val:-0xb504;  immval:-0x556
TEST_IMM_OP( ori, x12, x2, 0xfffffafe, -0xb504, -0x556, x4, 28, x5)
    1294:	ffff5137          	lui	sp,0xffff5
    1298:	afc10113          	addi	sp,sp,-1284 # ffff4afc <_end+0xfffefaf8>
    129c:	aaa16613          	ori	a2,sp,-1366
    12a0:	00c22e23          	sw	a2,28(tp) # 1c <offset-0x4c>

000012a4 <inst_30>:

inst_30:
// rs1==x9, rd==x24, rs1_val == 4, rs1_val==4 and imm_val==5
// opcode: ori ; op1:x9; dest:x24; op1val:0x4;  immval:0x5
TEST_IMM_OP( ori, x24, x9, 0x5, 0x4, 0x5, x4, 32, x5)
    12a4:	00400493          	li	s1,4
    12a8:	0054ec13          	ori	s8,s1,5
    12ac:	03822023          	sw	s8,32(tp) # 20 <offset-0x48>

000012b0 <inst_31>:

inst_31:
// rs1==x10, rd==x29, rs1_val == 8, 
// opcode: ori ; op1:x10; dest:x29; op1val:0x8;  immval:0x6
TEST_IMM_OP( ori, x29, x10, 0xe, 0x8, 0x6, x4, 36, x5)
    12b0:	00800513          	li	a0,8
    12b4:	00656e93          	ori	t4,a0,6
    12b8:	03d22223          	sw	t4,36(tp) # 24 <offset-0x44>

000012bc <inst_32>:

inst_32:
// rs1_val == 16, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x10;  immval:0x200
TEST_IMM_OP( ori, x11, x10, 0x210, 0x10, 0x200, x4, 40, x5)
    12bc:	01000513          	li	a0,16
    12c0:	20056593          	ori	a1,a0,512
    12c4:	02b22423          	sw	a1,40(tp) # 28 <offset-0x40>

000012c8 <inst_33>:

inst_33:
// rs1_val == 32, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x20;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x2c, 0x20, 0x2c, x4, 44, x5)
    12c8:	02000513          	li	a0,32
    12cc:	02c56593          	ori	a1,a0,44
    12d0:	02b22623          	sw	a1,44(tp) # 2c <offset-0x3c>

000012d4 <inst_34>:

inst_34:
// rs1_val == 64, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x40;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x43, 0x40, 0x3, x4, 48, x5)
    12d4:	04000513          	li	a0,64
    12d8:	00356593          	ori	a1,a0,3
    12dc:	02b22823          	sw	a1,48(tp) # 30 <offset-0x38>

000012e0 <inst_35>:

inst_35:
// rs1_val == 128, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x80;  immval:0x20
TEST_IMM_OP( ori, x11, x10, 0xa0, 0x80, 0x20, x4, 52, x5)
    12e0:	08000513          	li	a0,128
    12e4:	02056593          	ori	a1,a0,32
    12e8:	02b22a23          	sw	a1,52(tp) # 34 <offset-0x34>

000012ec <inst_36>:

inst_36:
// rs1_val == 256, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x100;  immval:-0x41
TEST_IMM_OP( ori, x11, x10, 0xffffffbf, 0x100, -0x41, x4, 56, x5)
    12ec:	10000513          	li	a0,256
    12f0:	fbf56593          	ori	a1,a0,-65
    12f4:	02b22c23          	sw	a1,56(tp) # 38 <offset-0x30>

000012f8 <inst_37>:

inst_37:
// rs1_val == 512, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x200;  immval:-0x6
TEST_IMM_OP( ori, x11, x10, 0xfffffffa, 0x200, -0x6, x4, 60, x5)
    12f8:	20000513          	li	a0,512
    12fc:	ffa56593          	ori	a1,a0,-6
    1300:	02b22e23          	sw	a1,60(tp) # 3c <offset-0x2c>

00001304 <inst_38>:

inst_38:
// rs1_val == 1024, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x400;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd3, 0x400, -0x2d, x4, 64, x5)
    1304:	40000513          	li	a0,1024
    1308:	fd356593          	ori	a1,a0,-45
    130c:	04b22023          	sw	a1,64(tp) # 40 <offset-0x28>

00001310 <inst_39>:

inst_39:
// rs1_val == 4096, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x1000;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x1005, 0x1000, 0x5, x4, 68, x5)
    1310:	00001537          	lui	a0,0x1
    1314:	00556593          	ori	a1,a0,5
    1318:	04b22223          	sw	a1,68(tp) # 44 <offset-0x24>

0000131c <inst_40>:

inst_40:
// rs1_val == 16384, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4000;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x4665, 0x4000, 0x665, x4, 72, x5)
    131c:	00004537          	lui	a0,0x4
    1320:	66556593          	ori	a1,a0,1637
    1324:	04b22423          	sw	a1,72(tp) # 48 <offset-0x20>

00001328 <inst_41>:

inst_41:
// rs1_val == 65536, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x10000;  immval:0x9
TEST_IMM_OP( ori, x11, x10, 0x10009, 0x10000, 0x9, x4, 76, x5)
    1328:	00010537          	lui	a0,0x10
    132c:	00956593          	ori	a1,a0,9
    1330:	04b22623          	sw	a1,76(tp) # 4c <offset-0x1c>

00001334 <inst_42>:

inst_42:
// rs1_val == 131072, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x20000;  immval:0x200
TEST_IMM_OP( ori, x11, x10, 0x20200, 0x20000, 0x200, x4, 80, x5)
    1334:	00020537          	lui	a0,0x20
    1338:	20056593          	ori	a1,a0,512
    133c:	04b22823          	sw	a1,80(tp) # 50 <offset-0x18>

00001340 <inst_43>:

inst_43:
// rs1_val == 524288, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x80000;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x80000, 0x80000, 0x0, x4, 84, x5)
    1340:	00080537          	lui	a0,0x80
    1344:	00056593          	ori	a1,a0,0
    1348:	04b22a23          	sw	a1,84(tp) # 54 <offset-0x14>

0000134c <inst_44>:

inst_44:
// rs1_val == 1048576, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x100000;  immval:0x200
TEST_IMM_OP( ori, x11, x10, 0x100200, 0x100000, 0x200, x4, 88, x5)
    134c:	00100537          	lui	a0,0x100
    1350:	20056593          	ori	a1,a0,512
    1354:	04b22c23          	sw	a1,88(tp) # 58 <offset-0x10>

00001358 <inst_45>:

inst_45:
// rs1_val == 2097152, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x200000;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd4, 0x200000, -0x2c, x4, 92, x5)
    1358:	00200537          	lui	a0,0x200
    135c:	fd456593          	ori	a1,a0,-44
    1360:	04b22e23          	sw	a1,92(tp) # 5c <offset-0xc>

00001364 <inst_46>:

inst_46:
// rs1_val == 4194304, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x400000;  immval:-0x201
TEST_IMM_OP( ori, x11, x10, 0xfffffdff, 0x400000, -0x201, x4, 96, x5)
    1364:	00400537          	lui	a0,0x400
    1368:	dff56593          	ori	a1,a0,-513
    136c:	06b22023          	sw	a1,96(tp) # 60 <offset-0x8>

00001370 <inst_47>:

inst_47:
// rs1_val == 8388608, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x800000;  immval:0x80
TEST_IMM_OP( ori, x11, x10, 0x800080, 0x800000, 0x80, x4, 100, x5)
    1370:	00800537          	lui	a0,0x800
    1374:	08056593          	ori	a1,a0,128
    1378:	06b22223          	sw	a1,100(tp) # 64 <offset-0x4>

0000137c <inst_48>:

inst_48:
// rs1_val == 33554432, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2000000;  immval:-0x21
TEST_IMM_OP( ori, x11, x10, 0xffffffdf, 0x2000000, -0x21, x4, 104, x5)
    137c:	02000537          	lui	a0,0x2000
    1380:	fdf56593          	ori	a1,a0,-33
    1384:	06b22423          	sw	a1,104(tp) # 68 <offset>

00001388 <inst_49>:

inst_49:
// rs1_val == 67108864, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4000000;  immval:0x10
TEST_IMM_OP( ori, x11, x10, 0x4000010, 0x4000000, 0x10, x4, 108, x5)
    1388:	04000537          	lui	a0,0x4000
    138c:	01056593          	ori	a1,a0,16
    1390:	06b22623          	sw	a1,108(tp) # 6c <offset+0x4>

00001394 <inst_50>:

inst_50:
// rs1_val == 134217728, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x8000000;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x8000554, 0x8000000, 0x554, x4, 112, x5)
    1394:	08000537          	lui	a0,0x8000
    1398:	55456593          	ori	a1,a0,1364
    139c:	06b22823          	sw	a1,112(tp) # 70 <offset+0x8>

000013a0 <inst_51>:

inst_51:
// rs1_val == 1073741824, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x40000000;  immval:-0x6
TEST_IMM_OP( ori, x11, x10, 0xfffffffa, 0x40000000, -0x6, x4, 116, x5)
    13a0:	40000537          	lui	a0,0x40000
    13a4:	ffa56593          	ori	a1,a0,-6
    13a8:	06b22a23          	sw	a1,116(tp) # 74 <offset+0xc>

000013ac <inst_52>:

inst_52:
// rs1_val == -2, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x2;  immval:-0x41
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x2, -0x41, x4, 120, x5)
    13ac:	ffe00513          	li	a0,-2
    13b0:	fbf56593          	ori	a1,a0,-65
    13b4:	06b22c23          	sw	a1,120(tp) # 78 <offset+0x10>

000013b8 <inst_53>:

inst_53:
// rs1_val == -3, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x3;  immval:-0x9
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x3, -0x9, x4, 124, x5)
    13b8:	ffd00513          	li	a0,-3
    13bc:	ff756593          	ori	a1,a0,-9
    13c0:	06b22e23          	sw	a1,124(tp) # 7c <offset+0x14>

000013c4 <inst_54>:

inst_54:
// rs1_val == -9, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x9;  immval:-0x800
TEST_IMM_OP( ori, x11, x10, 0xfffffff7, -0x9, -0x800, x4, 128, x5)
    13c4:	ff700513          	li	a0,-9
    13c8:	80056593          	ori	a1,a0,-2048
    13cc:	08b22023          	sw	a1,128(tp) # 80 <offset+0x18>

000013d0 <inst_55>:

inst_55:
// rs1_val == -17, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x11;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x11, -0x2d, x4, 132, x5)
    13d0:	fef00513          	li	a0,-17
    13d4:	fd356593          	ori	a1,a0,-45
    13d8:	08b22223          	sw	a1,132(tp) # 84 <offset+0x1c>

000013dc <inst_56>:

inst_56:
// rs1_val == -65, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x41;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xffffffbf, -0x41, -0x556, x4, 136, x5)
    13dc:	fbf00513          	li	a0,-65
    13e0:	aaa56593          	ori	a1,a0,-1366
    13e4:	08b22423          	sw	a1,136(tp) # 88 <offset+0x20>

000013e8 <inst_57>:

inst_57:
// rs1_val == -129, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x81;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0xffffff7f, -0x81, 0x665, x4, 140, x5)
    13e8:	f7f00513          	li	a0,-129
    13ec:	66556593          	ori	a1,a0,1637
    13f0:	08b22623          	sw	a1,140(tp) # 8c <offset+0x24>

000013f4 <inst_58>:

inst_58:
// rs1_val == -257, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x101;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0xfffffeff, -0x101, 0x666, x4, 144, x5)
    13f4:	eff00513          	li	a0,-257
    13f8:	66656593          	ori	a1,a0,1638
    13fc:	08b22823          	sw	a1,144(tp) # 90 <offset+0x28>

00001400 <inst_59>:

inst_59:
// rs1_val == -1025, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x401;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x401, 0x666, x4, 148, x5)
    1400:	bff00513          	li	a0,-1025
    1404:	66656593          	ori	a1,a0,1638
    1408:	08b22a23          	sw	a1,148(tp) # 94 <offset+0x2c>

0000140c <inst_60>:

inst_60:
// rs1_val == -2049, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x801;  immval:0x7ff
TEST_IMM_OP( ori, x11, x10, 0xfffff7ff, -0x801, 0x7ff, x4, 152, x5)
    140c:	fffff537          	lui	a0,0xfffff
    1410:	7ff50513          	addi	a0,a0,2047 # fffff7ff <_end+0xffffa7fb>
    1414:	7ff56593          	ori	a1,a0,2047
    1418:	08b22c23          	sw	a1,152(tp) # 98 <offset+0x30>

0000141c <inst_61>:

inst_61:
// rs1_val == -4097, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x1001;  immval:0x7
TEST_IMM_OP( ori, x11, x10, 0xffffefff, -0x1001, 0x7, x4, 156, x5)
    141c:	fffff537          	lui	a0,0xfffff
    1420:	fff50513          	addi	a0,a0,-1 # ffffefff <_end+0xffff9ffb>
    1424:	00756593          	ori	a1,a0,7
    1428:	08b22e23          	sw	a1,156(tp) # 9c <offset+0x34>

0000142c <inst_62>:

inst_62:
// rs1_val == -8193, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x2001;  immval:-0x21
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x2001, -0x21, x4, 160, x5)
    142c:	ffffe537          	lui	a0,0xffffe
    1430:	fff50513          	addi	a0,a0,-1 # ffffdfff <_end+0xffff8ffb>
    1434:	fdf56593          	ori	a1,a0,-33
    1438:	0ab22023          	sw	a1,160(tp) # a0 <offset+0x38>

0000143c <inst_63>:

inst_63:
// rs1_val == -32769, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x8001;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0xffff7fff, -0x8001, 0x2d, x4, 164, x5)
    143c:	ffff8537          	lui	a0,0xffff8
    1440:	fff50513          	addi	a0,a0,-1 # ffff7fff <_end+0xffff2ffb>
    1444:	02d56593          	ori	a1,a0,45
    1448:	0ab22223          	sw	a1,164(tp) # a4 <offset+0x3c>

0000144c <inst_64>:

inst_64:
// rs1_val == -65537, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x10001;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0xfffeffff, -0x10001, 0x332, x4, 168, x5)
    144c:	ffff0537          	lui	a0,0xffff0
    1450:	fff50513          	addi	a0,a0,-1 # fffeffff <_end+0xfffeaffb>
    1454:	33256593          	ori	a1,a0,818
    1458:	0ab22423          	sw	a1,168(tp) # a8 <offset+0x40>

0000145c <inst_65>:

inst_65:
// rs1_val == -131073, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x20001;  immval:-0xa
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x20001, -0xa, x4, 172, x5)
    145c:	fffe0537          	lui	a0,0xfffe0
    1460:	fff50513          	addi	a0,a0,-1 # fffdffff <_end+0xfffdaffb>
    1464:	ff656593          	ori	a1,a0,-10
    1468:	0ab22623          	sw	a1,172(tp) # ac <offset+0x44>

0000146c <inst_66>:

inst_66:
// rs1_val == -1048577, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x100001;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0xffefffff, -0x100001, 0x6, x4, 176, x5)
    146c:	fff00537          	lui	a0,0xfff00
    1470:	fff50513          	addi	a0,a0,-1 # ffefffff <_end+0xffefaffb>
    1474:	00656593          	ori	a1,a0,6
    1478:	0ab22823          	sw	a1,176(tp) # b0 <offset+0x48>

0000147c <inst_67>:

inst_67:
// rs1_val == -2097153, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x200001;  immval:-0x400
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x200001, -0x400, x4, 180, x5)
    147c:	ffe00537          	lui	a0,0xffe00
    1480:	fff50513          	addi	a0,a0,-1 # ffdfffff <_end+0xffdfaffb>
    1484:	c0056593          	ori	a1,a0,-1024
    1488:	0ab22a23          	sw	a1,180(tp) # b4 <offset+0x4c>

0000148c <inst_68>:

inst_68:
// rs1_val == -4194305, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x400001;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x400001, -0x2c, x4, 184, x5)
    148c:	ffc00537          	lui	a0,0xffc00
    1490:	fff50513          	addi	a0,a0,-1 # ffbfffff <_end+0xffbfaffb>
    1494:	fd456593          	ori	a1,a0,-44
    1498:	0ab22c23          	sw	a1,184(tp) # b8 <offset+0x50>

0000149c <inst_69>:

inst_69:
// rs1_val == -8388609, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x800001;  immval:-0xa
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x800001, -0xa, x4, 188, x5)
    149c:	ff800537          	lui	a0,0xff800
    14a0:	fff50513          	addi	a0,a0,-1 # ff7fffff <_end+0xff7faffb>
    14a4:	ff656593          	ori	a1,a0,-10
    14a8:	0ab22e23          	sw	a1,188(tp) # bc <offset+0x54>

000014ac <inst_70>:

inst_70:
// rs1_val == -16777217, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x1000001;  immval:0x3ff
TEST_IMM_OP( ori, x11, x10, 0xfeffffff, -0x1000001, 0x3ff, x4, 192, x5)
    14ac:	ff000537          	lui	a0,0xff000
    14b0:	fff50513          	addi	a0,a0,-1 # feffffff <_end+0xfeffaffb>
    14b4:	3ff56593          	ori	a1,a0,1023
    14b8:	0cb22023          	sw	a1,192(tp) # c0 <offset+0x58>

000014bc <inst_71>:

inst_71:
// rs1_val == -33554433, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x2000001;  immval:-0x8
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x2000001, -0x8, x4, 196, x5)
    14bc:	fe000537          	lui	a0,0xfe000
    14c0:	fff50513          	addi	a0,a0,-1 # fdffffff <_end+0xfdffaffb>
    14c4:	ff856593          	ori	a1,a0,-8
    14c8:	0cb22223          	sw	a1,196(tp) # c4 <offset+0x5c>

000014cc <inst_72>:

inst_72:
// rs1_val == -67108865, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x4000001;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0xfbffffff, -0x4000001, 0x4, x4, 200, x5)
    14cc:	fc000537          	lui	a0,0xfc000
    14d0:	fff50513          	addi	a0,a0,-1 # fbffffff <_end+0xfbffaffb>
    14d4:	00456593          	ori	a1,a0,4
    14d8:	0cb22423          	sw	a1,200(tp) # c8 <offset+0x60>

000014dc <inst_73>:

inst_73:
// rs1_val == -134217729, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x8000001;  immval:-0x6
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x8000001, -0x6, x4, 204, x5)
    14dc:	f8000537          	lui	a0,0xf8000
    14e0:	fff50513          	addi	a0,a0,-1 # f7ffffff <_end+0xf7ffaffb>
    14e4:	ffa56593          	ori	a1,a0,-6
    14e8:	0cb22623          	sw	a1,204(tp) # cc <offset+0x64>

000014ec <inst_74>:

inst_74:
// rs1_val == -268435457, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x10000001;  immval:-0x7
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x10000001, -0x7, x4, 208, x5)
    14ec:	f0000537          	lui	a0,0xf0000
    14f0:	fff50513          	addi	a0,a0,-1 # efffffff <_end+0xefffaffb>
    14f4:	ff956593          	ori	a1,a0,-7
    14f8:	0cb22823          	sw	a1,208(tp) # d0 <offset+0x68>

000014fc <inst_75>:

inst_75:
// rs1_val == -536870913, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x20000001;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0xdfffffff, -0x20000001, 0x554, x4, 212, x5)
    14fc:	e0000537          	lui	a0,0xe0000
    1500:	fff50513          	addi	a0,a0,-1 # dfffffff <_end+0xdfffaffb>
    1504:	55456593          	ori	a1,a0,1364
    1508:	0cb22a23          	sw	a1,212(tp) # d4 <offset+0x6c>

0000150c <inst_76>:

inst_76:
// rs1_val == 1431655765, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:-0x101
TEST_IMM_OP( ori, x11, x10, 0xffffffff, 0x55555555, -0x101, x4, 216, x5)
    150c:	55555537          	lui	a0,0x55555
    1510:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x55550551>
    1514:	eff56593          	ori	a1,a0,-257
    1518:	0cb22c23          	sw	a1,216(tp) # d8 <offset+0x70>

0000151c <inst_77>:

inst_77:
// rs1_val==3 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x3, 0x3, 0x3, x4, 220, x5)
    151c:	00300513          	li	a0,3
    1520:	00356593          	ori	a1,a0,3
    1524:	0cb22e23          	sw	a1,220(tp) # dc <offset+0x74>

00001528 <inst_78>:

inst_78:
// rs1_val==3 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x557, 0x3, 0x555, x4, 224, x5)
    1528:	00300513          	li	a0,3
    152c:	55556593          	ori	a1,a0,1365
    1530:	0eb22023          	sw	a1,224(tp) # e0 <offset+0x78>

00001534 <inst_79>:

inst_79:
// rs1_val==3 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffaab, 0x3, -0x556, x4, 228, x5)
    1534:	00300513          	li	a0,3
    1538:	aaa56593          	ori	a1,a0,-1366
    153c:	0eb22223          	sw	a1,228(tp) # e4 <offset+0x7c>

00001540 <inst_80>:

inst_80:
// rs1_val==3 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x7, 0x3, 0x5, x4, 232, x5)
    1540:	00300513          	li	a0,3
    1544:	00556593          	ori	a1,a0,5
    1548:	0eb22423          	sw	a1,232(tp) # e8 <offset+0x80>

0000154c <inst_81>:

inst_81:
// rs1_val==3 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x333, 0x3, 0x333, x4, 236, x5)
    154c:	00300513          	li	a0,3
    1550:	33356593          	ori	a1,a0,819
    1554:	0eb22623          	sw	a1,236(tp) # ec <offset+0x84>

00001558 <inst_82>:

inst_82:
// rs1_val==3 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x667, 0x3, 0x666, x4, 240, x5)
    1558:	00300513          	li	a0,3
    155c:	66656593          	ori	a1,a0,1638
    1560:	0eb22823          	sw	a1,240(tp) # f0 <offset+0x88>

00001564 <inst_83>:

inst_83:
// rs1_val==3 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd3, 0x3, -0x2d, x4, 244, x5)
    1564:	00300513          	li	a0,3
    1568:	fd356593          	ori	a1,a0,-45
    156c:	0eb22a23          	sw	a1,244(tp) # f4 <offset+0x8c>

00001570 <inst_84>:

inst_84:
// rs1_val==3 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x2f, 0x3, 0x2d, x4, 248, x5)
    1570:	00300513          	li	a0,3
    1574:	02d56593          	ori	a1,a0,45
    1578:	0eb22c23          	sw	a1,248(tp) # f8 <offset+0x90>

0000157c <inst_85>:

inst_85:
// rs1_val==3 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x3, 0x3, 0x2, x4, 252, x5)
    157c:	00300513          	li	a0,3
    1580:	00256593          	ori	a1,a0,2
    1584:	0eb22e23          	sw	a1,252(tp) # fc <offset+0x94>

00001588 <inst_86>:

inst_86:
// rs1_val==3 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x557, 0x3, 0x554, x4, 256, x5)
    1588:	00300513          	li	a0,3
    158c:	55456593          	ori	a1,a0,1364
    1590:	10b22023          	sw	a1,256(tp) # 100 <offset+0x98>

00001594 <inst_87>:

inst_87:
// rs1_val==3 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x3, 0x3, 0x0, x4, 260, x5)
    1594:	00300513          	li	a0,3
    1598:	00056593          	ori	a1,a0,0
    159c:	10b22223          	sw	a1,260(tp) # 104 <offset+0x9c>

000015a0 <inst_88>:

inst_88:
// rs1_val==3 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x7, 0x3, 0x4, x4, 264, x5)
    15a0:	00300513          	li	a0,3
    15a4:	00456593          	ori	a1,a0,4
    15a8:	10b22423          	sw	a1,264(tp) # 108 <offset+0xa0>

000015ac <inst_89>:

inst_89:
// rs1_val==3 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x333, 0x3, 0x332, x4, 268, x5)
    15ac:	00300513          	li	a0,3
    15b0:	33256593          	ori	a1,a0,818
    15b4:	10b22623          	sw	a1,268(tp) # 10c <offset+0xa4>

000015b8 <inst_90>:

inst_90:
// rs1_val==3 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x667, 0x3, 0x665, x4, 272, x5)
    15b8:	00300513          	li	a0,3
    15bc:	66556593          	ori	a1,a0,1637
    15c0:	10b22823          	sw	a1,272(tp) # 110 <offset+0xa8>

000015c4 <inst_91>:

inst_91:
// rs1_val==3 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x2f, 0x3, 0x2c, x4, 276, x5)
    15c4:	00300513          	li	a0,3
    15c8:	02c56593          	ori	a1,a0,44
    15cc:	10b22a23          	sw	a1,276(tp) # 114 <offset+0xac>

000015d0 <inst_92>:

inst_92:
// rs1_val==3 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x557, 0x3, 0x556, x4, 280, x5)
    15d0:	00300513          	li	a0,3
    15d4:	55656593          	ori	a1,a0,1366
    15d8:	10b22c23          	sw	a1,280(tp) # 118 <offset+0xb0>

000015dc <inst_93>:

inst_93:
// rs1_val==3 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffaab, 0x3, -0x555, x4, 284, x5)
    15dc:	00300513          	li	a0,3
    15e0:	aab56593          	ori	a1,a0,-1365
    15e4:	10b22e23          	sw	a1,284(tp) # 11c <offset+0xb4>

000015e8 <inst_94>:

inst_94:
// rs1_val==3 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x7, 0x3, 0x6, x4, 288, x5)
    15e8:	00300513          	li	a0,3
    15ec:	00656593          	ori	a1,a0,6
    15f0:	12b22023          	sw	a1,288(tp) # 120 <offset+0xb8>

000015f4 <inst_95>:

inst_95:
// rs1_val==3 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x337, 0x3, 0x334, x4, 292, x5)
    15f4:	00300513          	li	a0,3
    15f8:	33456593          	ori	a1,a0,820
    15fc:	12b22223          	sw	a1,292(tp) # 124 <offset+0xbc>

00001600 <inst_96>:

inst_96:
// rs1_val==3 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x667, 0x3, 0x667, x4, 296, x5)
    1600:	00300513          	li	a0,3
    1604:	66756593          	ori	a1,a0,1639
    1608:	12b22423          	sw	a1,296(tp) # 128 <offset+0xc0>

0000160c <inst_97>:

inst_97:
// rs1_val==3 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd7, 0x3, -0x2c, x4, 300, x5)
    160c:	00300513          	li	a0,3
    1610:	fd456593          	ori	a1,a0,-44
    1614:	12b22623          	sw	a1,300(tp) # 12c <offset+0xc4>

00001618 <inst_98>:

inst_98:
// rs1_val==3 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x2f, 0x3, 0x2e, x4, 304, x5)
    1618:	00300513          	li	a0,3
    161c:	02e56593          	ori	a1,a0,46
    1620:	12b22823          	sw	a1,304(tp) # 130 <offset+0xc8>

00001624 <inst_99>:

inst_99:
// rs1_val==1431655765 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x55555557, 0x55555555, 0x3, x4, 308, x5)
    1624:	55555537          	lui	a0,0x55555
    1628:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x55550551>
    162c:	00356593          	ori	a1,a0,3
    1630:	12b22a23          	sw	a1,308(tp) # 134 <offset+0xcc>

00001634 <inst_100>:

inst_100:
// rs1_val==1431655765 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x55555555, 0x55555555, 0x555, x4, 312, x5)
    1634:	55555537          	lui	a0,0x55555
    1638:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x55550551>
    163c:	55556593          	ori	a1,a0,1365
    1640:	12b22c23          	sw	a1,312(tp) # 138 <offset+0xd0>

00001644 <inst_101>:

inst_101:
// rs1_val==1431655765 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xffffffff, 0x55555555, -0x556, x4, 316, x5)
    1644:	55555537          	lui	a0,0x55555
    1648:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x55550551>
    164c:	aaa56593          	ori	a1,a0,-1366
    1650:	12b22e23          	sw	a1,316(tp) # 13c <offset+0xd4>

00001654 <inst_102>:

inst_102:
// rs1_val==1431655765 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x55555555, 0x55555555, 0x5, x4, 320, x5)
    1654:	55555537          	lui	a0,0x55555
    1658:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x55550551>
    165c:	00556593          	ori	a1,a0,5
    1660:	14b22023          	sw	a1,320(tp) # 140 <offset+0xd8>

00001664 <inst_103>:

inst_103:
// rs1_val==1431655765 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x55555777, 0x55555555, 0x333, x4, 324, x5)
    1664:	55555537          	lui	a0,0x55555
    1668:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x55550551>
    166c:	33356593          	ori	a1,a0,819
    1670:	14b22223          	sw	a1,324(tp) # 144 <offset+0xdc>

00001674 <inst_104>:

inst_104:
// rs1_val==1431655765 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x55555777, 0x55555555, 0x666, x4, 328, x5)
    1674:	55555537          	lui	a0,0x55555
    1678:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x55550551>
    167c:	66656593          	ori	a1,a0,1638
    1680:	14b22423          	sw	a1,328(tp) # 148 <offset+0xe0>

00001684 <inst_105>:

inst_105:
// rs1_val==1431655765 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd7, 0x55555555, -0x2d, x4, 332, x5)
    1684:	55555537          	lui	a0,0x55555
    1688:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x55550551>
    168c:	fd356593          	ori	a1,a0,-45
    1690:	14b22623          	sw	a1,332(tp) # 14c <offset+0xe4>

00001694 <inst_106>:

inst_106:
// rs1_val==1431655765 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x5555557d, 0x55555555, 0x2d, x4, 336, x5)
    1694:	55555537          	lui	a0,0x55555
    1698:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x55550551>
    169c:	02d56593          	ori	a1,a0,45
    16a0:	14b22823          	sw	a1,336(tp) # 150 <offset+0xe8>

000016a4 <inst_107>:

inst_107:
// rs1_val==1431655765 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x55555557, 0x55555555, 0x2, x4, 340, x5)
    16a4:	55555537          	lui	a0,0x55555
    16a8:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x55550551>
    16ac:	00256593          	ori	a1,a0,2
    16b0:	14b22a23          	sw	a1,340(tp) # 154 <offset+0xec>

000016b4 <inst_108>:

inst_108:
// rs1_val==1431655765 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x55555555, 0x55555555, 0x554, x4, 344, x5)
    16b4:	55555537          	lui	a0,0x55555
    16b8:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x55550551>
    16bc:	55456593          	ori	a1,a0,1364
    16c0:	14b22c23          	sw	a1,344(tp) # 158 <offset+0xf0>

000016c4 <inst_109>:

inst_109:
// rs1_val==1431655765 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x55555555, 0x55555555, 0x0, x4, 348, x5)
    16c4:	55555537          	lui	a0,0x55555
    16c8:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x55550551>
    16cc:	00056593          	ori	a1,a0,0
    16d0:	14b22e23          	sw	a1,348(tp) # 15c <offset+0xf4>

000016d4 <inst_110>:

inst_110:
// rs1_val==1431655765 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x55555555, 0x55555555, 0x4, x4, 352, x5)
    16d4:	55555537          	lui	a0,0x55555
    16d8:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x55550551>
    16dc:	00456593          	ori	a1,a0,4
    16e0:	16b22023          	sw	a1,352(tp) # 160 <offset+0xf8>

000016e4 <inst_111>:

inst_111:
// rs1_val==1431655765 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x55555777, 0x55555555, 0x332, x4, 356, x5)
    16e4:	55555537          	lui	a0,0x55555
    16e8:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x55550551>
    16ec:	33256593          	ori	a1,a0,818
    16f0:	16b22223          	sw	a1,356(tp) # 164 <offset+0xfc>

000016f4 <inst_112>:

inst_112:
// rs1_val==1431655765 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x55555775, 0x55555555, 0x665, x4, 360, x5)
    16f4:	55555537          	lui	a0,0x55555
    16f8:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x55550551>
    16fc:	66556593          	ori	a1,a0,1637
    1700:	16b22423          	sw	a1,360(tp) # 168 <offset+0x100>

00001704 <inst_113>:

inst_113:
// rs1_val==1431655765 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x5555557d, 0x55555555, 0x2c, x4, 364, x5)
    1704:	55555537          	lui	a0,0x55555
    1708:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x55550551>
    170c:	02c56593          	ori	a1,a0,44
    1710:	16b22623          	sw	a1,364(tp) # 16c <offset+0x104>

00001714 <inst_114>:

inst_114:
// rs1_val==1431655765 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x55555557, 0x55555555, 0x556, x4, 368, x5)
    1714:	55555537          	lui	a0,0x55555
    1718:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x55550551>
    171c:	55656593          	ori	a1,a0,1366
    1720:	16b22823          	sw	a1,368(tp) # 170 <offset+0x108>

00001724 <inst_115>:

inst_115:
// rs1_val==1431655765 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xffffffff, 0x55555555, -0x555, x4, 372, x5)
    1724:	55555537          	lui	a0,0x55555
    1728:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x55550551>
    172c:	aab56593          	ori	a1,a0,-1365
    1730:	16b22a23          	sw	a1,372(tp) # 174 <offset+0x10c>

00001734 <inst_116>:

inst_116:
// rs1_val==1431655765 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x55555557, 0x55555555, 0x6, x4, 376, x5)
    1734:	55555537          	lui	a0,0x55555
    1738:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x55550551>
    173c:	00656593          	ori	a1,a0,6
    1740:	16b22c23          	sw	a1,376(tp) # 178 <offset+0x110>

00001744 <inst_117>:

inst_117:
// rs1_val==1431655765 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x55555775, 0x55555555, 0x334, x4, 380, x5)
    1744:	55555537          	lui	a0,0x55555
    1748:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x55550551>
    174c:	33456593          	ori	a1,a0,820
    1750:	16b22e23          	sw	a1,380(tp) # 17c <offset+0x114>

00001754 <inst_118>:

inst_118:
// rs1_val==1431655765 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x55555777, 0x55555555, 0x667, x4, 384, x5)
    1754:	55555537          	lui	a0,0x55555
    1758:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x55550551>
    175c:	66756593          	ori	a1,a0,1639
    1760:	18b22023          	sw	a1,384(tp) # 180 <offset+0x118>

00001764 <inst_119>:

inst_119:
// rs1_val==1431655765 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd5, 0x55555555, -0x2c, x4, 388, x5)
    1764:	55555537          	lui	a0,0x55555
    1768:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x55550551>
    176c:	fd456593          	ori	a1,a0,-44
    1770:	18b22223          	sw	a1,388(tp) # 184 <offset+0x11c>

00001774 <inst_120>:

inst_120:
// rs1_val==1431655765 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x5555557f, 0x55555555, 0x2e, x4, 392, x5)
    1774:	55555537          	lui	a0,0x55555
    1778:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x55550551>
    177c:	02e56593          	ori	a1,a0,46
    1780:	18b22423          	sw	a1,392(tp) # 188 <offset+0x120>

00001784 <inst_121>:

inst_121:
// rs1_val==-1431655766 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaab, -0x55555556, 0x3, x4, 396, x5)
    1784:	aaaab537          	lui	a0,0xaaaab
    1788:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa5aa6>
    178c:	00356593          	ori	a1,a0,3
    1790:	18b22623          	sw	a1,396(tp) # 18c <offset+0x124>

00001794 <inst_122>:

inst_122:
// rs1_val==-1431655766 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0xaaaaafff, -0x55555556, 0x555, x4, 400, x5)
    1794:	aaaab537          	lui	a0,0xaaaab
    1798:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa5aa6>
    179c:	55556593          	ori	a1,a0,1365
    17a0:	18b22823          	sw	a1,400(tp) # 190 <offset+0x128>

000017a4 <inst_123>:

inst_123:
// rs1_val==-1431655766 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffaaa, -0x55555556, -0x556, x4, 404, x5)
    17a4:	aaaab537          	lui	a0,0xaaaab
    17a8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa5aa6>
    17ac:	aaa56593          	ori	a1,a0,-1366
    17b0:	18b22a23          	sw	a1,404(tp) # 194 <offset+0x12c>

000017b4 <inst_124>:

inst_124:
// rs1_val==-1431655766 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaaf, -0x55555556, 0x5, x4, 408, x5)
    17b4:	aaaab537          	lui	a0,0xaaaab
    17b8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa5aa6>
    17bc:	00556593          	ori	a1,a0,5
    17c0:	18b22c23          	sw	a1,408(tp) # 198 <offset+0x130>

000017c4 <inst_125>:

inst_125:
// rs1_val==-1431655766 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0xaaaaabbb, -0x55555556, 0x333, x4, 412, x5)
    17c4:	aaaab537          	lui	a0,0xaaaab
    17c8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa5aa6>
    17cc:	33356593          	ori	a1,a0,819
    17d0:	18b22e23          	sw	a1,412(tp) # 19c <offset+0x134>

000017d4 <inst_126>:

inst_126:
// rs1_val==-1431655766 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0xaaaaaeee, -0x55555556, 0x666, x4, 416, x5)
    17d4:	aaaab537          	lui	a0,0xaaaab
    17d8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa5aa6>
    17dc:	66656593          	ori	a1,a0,1638
    17e0:	1ab22023          	sw	a1,416(tp) # 1a0 <offset+0x138>

000017e4 <inst_127>:

inst_127:
// rs1_val==-1431655766 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xfffffffb, -0x55555556, -0x2d, x4, 420, x5)
    17e4:	aaaab537          	lui	a0,0xaaaab
    17e8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa5aa6>
    17ec:	fd356593          	ori	a1,a0,-45
    17f0:	1ab22223          	sw	a1,420(tp) # 1a4 <offset+0x13c>

000017f4 <inst_128>:

inst_128:
// rs1_val==-1431655766 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaaf, -0x55555556, 0x2d, x4, 424, x5)
    17f4:	aaaab537          	lui	a0,0xaaaab
    17f8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa5aa6>
    17fc:	02d56593          	ori	a1,a0,45
    1800:	1ab22423          	sw	a1,424(tp) # 1a8 <offset+0x140>

00001804 <inst_129>:

inst_129:
// rs1_val==-1431655766 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaaa, -0x55555556, 0x2, x4, 428, x5)
    1804:	aaaab537          	lui	a0,0xaaaab
    1808:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa5aa6>
    180c:	00256593          	ori	a1,a0,2
    1810:	1ab22623          	sw	a1,428(tp) # 1ac <offset+0x144>

00001814 <inst_130>:

inst_130:
// rs1_val==-1431655766 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0xaaaaaffe, -0x55555556, 0x554, x4, 432, x5)
    1814:	aaaab537          	lui	a0,0xaaaab
    1818:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa5aa6>
    181c:	55456593          	ori	a1,a0,1364
    1820:	1ab22823          	sw	a1,432(tp) # 1b0 <offset+0x148>

00001824 <inst_131>:

inst_131:
// rs1_val==-1431655766 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaaa, -0x55555556, 0x0, x4, 436, x5)
    1824:	aaaab537          	lui	a0,0xaaaab
    1828:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa5aa6>
    182c:	00056593          	ori	a1,a0,0
    1830:	1ab22a23          	sw	a1,436(tp) # 1b4 <offset+0x14c>

00001834 <inst_132>:

inst_132:
// rs1_val==-1431655766 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaae, -0x55555556, 0x4, x4, 440, x5)
    1834:	aaaab537          	lui	a0,0xaaaab
    1838:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa5aa6>
    183c:	00456593          	ori	a1,a0,4
    1840:	1ab22c23          	sw	a1,440(tp) # 1b8 <offset+0x150>

00001844 <inst_133>:

inst_133:
// rs1_val==-1431655766 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0xaaaaabba, -0x55555556, 0x332, x4, 444, x5)
    1844:	aaaab537          	lui	a0,0xaaaab
    1848:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa5aa6>
    184c:	33256593          	ori	a1,a0,818
    1850:	1ab22e23          	sw	a1,444(tp) # 1bc <offset+0x154>

00001854 <inst_134>:

inst_134:
// rs1_val==-1431655766 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0xaaaaaeef, -0x55555556, 0x665, x4, 448, x5)
    1854:	aaaab537          	lui	a0,0xaaaab
    1858:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa5aa6>
    185c:	66556593          	ori	a1,a0,1637
    1860:	1cb22023          	sw	a1,448(tp) # 1c0 <offset+0x158>

00001864 <inst_135>:

inst_135:
// rs1_val==-1431655766 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaae, -0x55555556, 0x2c, x4, 452, x5)
    1864:	aaaab537          	lui	a0,0xaaaab
    1868:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa5aa6>
    186c:	02c56593          	ori	a1,a0,44
    1870:	1cb22223          	sw	a1,452(tp) # 1c4 <offset+0x15c>

00001874 <inst_136>:

inst_136:
// rs1_val==-1431655766 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0xaaaaaffe, -0x55555556, 0x556, x4, 456, x5)
    1874:	aaaab537          	lui	a0,0xaaaab
    1878:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa5aa6>
    187c:	55656593          	ori	a1,a0,1366
    1880:	1cb22423          	sw	a1,456(tp) # 1c8 <offset+0x160>

00001884 <inst_137>:

inst_137:
// rs1_val==-1431655766 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffaab, -0x55555556, -0x555, x4, 460, x5)
    1884:	aaaab537          	lui	a0,0xaaaab
    1888:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa5aa6>
    188c:	aab56593          	ori	a1,a0,-1365
    1890:	1cb22623          	sw	a1,460(tp) # 1cc <offset+0x164>

00001894 <inst_138>:

inst_138:
// rs1_val==-1431655766 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaae, -0x55555556, 0x6, x4, 464, x5)
    1894:	aaaab537          	lui	a0,0xaaaab
    1898:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa5aa6>
    189c:	00656593          	ori	a1,a0,6
    18a0:	1cb22823          	sw	a1,464(tp) # 1d0 <offset+0x168>

000018a4 <inst_139>:

inst_139:
// rs1_val==-1431655766 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0xaaaaabbe, -0x55555556, 0x334, x4, 468, x5)
    18a4:	aaaab537          	lui	a0,0xaaaab
    18a8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa5aa6>
    18ac:	33456593          	ori	a1,a0,820
    18b0:	1cb22a23          	sw	a1,468(tp) # 1d4 <offset+0x16c>

000018b4 <inst_140>:

inst_140:
// rs1_val==-1431655766 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0xaaaaaeef, -0x55555556, 0x667, x4, 472, x5)
    18b4:	aaaab537          	lui	a0,0xaaaab
    18b8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa5aa6>
    18bc:	66756593          	ori	a1,a0,1639
    18c0:	1cb22c23          	sw	a1,472(tp) # 1d8 <offset+0x170>

000018c4 <inst_141>:

inst_141:
// rs1_val==-1431655766 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xfffffffe, -0x55555556, -0x2c, x4, 476, x5)
    18c4:	aaaab537          	lui	a0,0xaaaab
    18c8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa5aa6>
    18cc:	fd456593          	ori	a1,a0,-44
    18d0:	1cb22e23          	sw	a1,476(tp) # 1dc <offset+0x174>

000018d4 <inst_142>:

inst_142:
// rs1_val==-1431655766 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaae, -0x55555556, 0x2e, x4, 480, x5)
    18d4:	aaaab537          	lui	a0,0xaaaab
    18d8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa5aa6>
    18dc:	02e56593          	ori	a1,a0,46
    18e0:	1eb22023          	sw	a1,480(tp) # 1e0 <offset+0x178>

000018e4 <inst_143>:

inst_143:
// rs1_val==5 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x7, 0x5, 0x3, x4, 484, x5)
    18e4:	00500513          	li	a0,5
    18e8:	00356593          	ori	a1,a0,3
    18ec:	1eb22223          	sw	a1,484(tp) # 1e4 <offset+0x17c>

000018f0 <inst_144>:

inst_144:
// rs1_val==5 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x555, 0x5, 0x555, x4, 488, x5)
    18f0:	00500513          	li	a0,5
    18f4:	55556593          	ori	a1,a0,1365
    18f8:	1eb22423          	sw	a1,488(tp) # 1e8 <offset+0x180>

000018fc <inst_145>:

inst_145:
// rs1_val==5 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffaaf, 0x5, -0x556, x4, 492, x5)
    18fc:	00500513          	li	a0,5
    1900:	aaa56593          	ori	a1,a0,-1366
    1904:	1eb22623          	sw	a1,492(tp) # 1ec <offset+0x184>

00001908 <inst_146>:

inst_146:
// rs1_val==5 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x5, 0x5, 0x5, x4, 496, x5)
    1908:	00500513          	li	a0,5
    190c:	00556593          	ori	a1,a0,5
    1910:	1eb22823          	sw	a1,496(tp) # 1f0 <offset+0x188>

00001914 <inst_147>:

inst_147:
// rs1_val==5 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x337, 0x5, 0x333, x4, 500, x5)
    1914:	00500513          	li	a0,5
    1918:	33356593          	ori	a1,a0,819
    191c:	1eb22a23          	sw	a1,500(tp) # 1f4 <offset+0x18c>

00001920 <inst_148>:

inst_148:
// rs1_val==5 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x667, 0x5, 0x666, x4, 504, x5)
    1920:	00500513          	li	a0,5
    1924:	66656593          	ori	a1,a0,1638
    1928:	1eb22c23          	sw	a1,504(tp) # 1f8 <offset+0x190>

0000192c <inst_149>:

inst_149:
// rs1_val==5 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd7, 0x5, -0x2d, x4, 508, x5)
    192c:	00500513          	li	a0,5
    1930:	fd356593          	ori	a1,a0,-45
    1934:	1eb22e23          	sw	a1,508(tp) # 1fc <offset+0x194>

00001938 <inst_150>:

inst_150:
// rs1_val==5 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x2d, 0x5, 0x2d, x4, 512, x5)
    1938:	00500513          	li	a0,5
    193c:	02d56593          	ori	a1,a0,45
    1940:	20b22023          	sw	a1,512(tp) # 200 <offset+0x198>

00001944 <inst_151>:

inst_151:
// rs1_val==5 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x7, 0x5, 0x2, x4, 516, x5)
    1944:	00500513          	li	a0,5
    1948:	00256593          	ori	a1,a0,2
    194c:	20b22223          	sw	a1,516(tp) # 204 <offset+0x19c>

00001950 <inst_152>:

inst_152:
// rs1_val==5 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x555, 0x5, 0x554, x4, 520, x5)
    1950:	00500513          	li	a0,5
    1954:	55456593          	ori	a1,a0,1364
    1958:	20b22423          	sw	a1,520(tp) # 208 <offset+0x1a0>

0000195c <inst_153>:

inst_153:
// rs1_val==5 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x5, 0x5, 0x0, x4, 524, x5)
    195c:	00500513          	li	a0,5
    1960:	00056593          	ori	a1,a0,0
    1964:	20b22623          	sw	a1,524(tp) # 20c <offset+0x1a4>

00001968 <inst_154>:

inst_154:
// rs1_val==5 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x5, 0x5, 0x4, x4, 528, x5)
    1968:	00500513          	li	a0,5
    196c:	00456593          	ori	a1,a0,4
    1970:	20b22823          	sw	a1,528(tp) # 210 <offset+0x1a8>

00001974 <inst_155>:

inst_155:
// rs1_val==5 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x337, 0x5, 0x332, x4, 532, x5)
    1974:	00500513          	li	a0,5
    1978:	33256593          	ori	a1,a0,818
    197c:	20b22a23          	sw	a1,532(tp) # 214 <offset+0x1ac>

00001980 <inst_156>:

inst_156:
// rs1_val==5 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x665, 0x5, 0x665, x4, 536, x5)
    1980:	00500513          	li	a0,5
    1984:	66556593          	ori	a1,a0,1637
    1988:	20b22c23          	sw	a1,536(tp) # 218 <offset+0x1b0>

0000198c <inst_157>:

inst_157:
// rs1_val==5 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x2d, 0x5, 0x2c, x4, 540, x5)
    198c:	00500513          	li	a0,5
    1990:	02c56593          	ori	a1,a0,44
    1994:	20b22e23          	sw	a1,540(tp) # 21c <offset+0x1b4>

00001998 <inst_158>:

inst_158:
// rs1_val==5 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x557, 0x5, 0x556, x4, 544, x5)
    1998:	00500513          	li	a0,5
    199c:	55656593          	ori	a1,a0,1366
    19a0:	22b22023          	sw	a1,544(tp) # 220 <offset+0x1b8>

000019a4 <inst_159>:

inst_159:
// rs1_val==5 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffaaf, 0x5, -0x555, x4, 548, x5)
    19a4:	00500513          	li	a0,5
    19a8:	aab56593          	ori	a1,a0,-1365
    19ac:	22b22223          	sw	a1,548(tp) # 224 <offset+0x1bc>

000019b0 <inst_160>:

inst_160:
// rs1_val==5 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x7, 0x5, 0x6, x4, 552, x5)
    19b0:	00500513          	li	a0,5
    19b4:	00656593          	ori	a1,a0,6
    19b8:	22b22423          	sw	a1,552(tp) # 228 <offset+0x1c0>

000019bc <inst_161>:

inst_161:
// rs1_val==5 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x335, 0x5, 0x334, x4, 556, x5)
    19bc:	00500513          	li	a0,5
    19c0:	33456593          	ori	a1,a0,820
    19c4:	22b22623          	sw	a1,556(tp) # 22c <offset+0x1c4>

000019c8 <inst_162>:

inst_162:
// rs1_val==5 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x667, 0x5, 0x667, x4, 560, x5)
    19c8:	00500513          	li	a0,5
    19cc:	66756593          	ori	a1,a0,1639
    19d0:	22b22823          	sw	a1,560(tp) # 230 <offset+0x1c8>

000019d4 <inst_163>:

inst_163:
// rs1_val==5 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd5, 0x5, -0x2c, x4, 564, x5)
    19d4:	00500513          	li	a0,5
    19d8:	fd456593          	ori	a1,a0,-44
    19dc:	22b22a23          	sw	a1,564(tp) # 234 <offset+0x1cc>

000019e0 <inst_164>:

inst_164:
// rs1_val==5 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x2f, 0x5, 0x2e, x4, 568, x5)
    19e0:	00500513          	li	a0,5
    19e4:	02e56593          	ori	a1,a0,46
    19e8:	22b22c23          	sw	a1,568(tp) # 238 <offset+0x1d0>

000019ec <inst_165>:

inst_165:
// rs1_val==858993459 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x33333333, 0x33333333, 0x3, x4, 572, x5)
    19ec:	33333537          	lui	a0,0x33333
    19f0:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332e32f>
    19f4:	00356593          	ori	a1,a0,3
    19f8:	22b22e23          	sw	a1,572(tp) # 23c <offset+0x1d4>

000019fc <inst_166>:

inst_166:
// rs1_val==858993459 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x33333777, 0x33333333, 0x555, x4, 576, x5)
    19fc:	33333537          	lui	a0,0x33333
    1a00:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332e32f>
    1a04:	55556593          	ori	a1,a0,1365
    1a08:	24b22023          	sw	a1,576(tp) # 240 <offset+0x1d8>

00001a0c <inst_167>:

inst_167:
// rs1_val==858993459 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffbbb, 0x33333333, -0x556, x4, 580, x5)
    1a0c:	33333537          	lui	a0,0x33333
    1a10:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332e32f>
    1a14:	aaa56593          	ori	a1,a0,-1366
    1a18:	24b22223          	sw	a1,580(tp) # 244 <offset+0x1dc>

00001a1c <inst_168>:

inst_168:
// rs1_val==858993459 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x33333337, 0x33333333, 0x5, x4, 584, x5)
    1a1c:	33333537          	lui	a0,0x33333
    1a20:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332e32f>
    1a24:	00556593          	ori	a1,a0,5
    1a28:	24b22423          	sw	a1,584(tp) # 248 <offset+0x1e0>

00001a2c <inst_169>:

inst_169:
// rs1_val==858993459 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x33333333, 0x33333333, 0x333, x4, 588, x5)
    1a2c:	33333537          	lui	a0,0x33333
    1a30:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332e32f>
    1a34:	33356593          	ori	a1,a0,819
    1a38:	24b22623          	sw	a1,588(tp) # 24c <offset+0x1e4>

00001a3c <inst_170>:

inst_170:
// rs1_val==858993459 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x33333777, 0x33333333, 0x666, x4, 592, x5)
    1a3c:	33333537          	lui	a0,0x33333
    1a40:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332e32f>
    1a44:	66656593          	ori	a1,a0,1638
    1a48:	24b22823          	sw	a1,592(tp) # 250 <offset+0x1e8>

00001a4c <inst_171>:

inst_171:
// rs1_val==858993459 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xfffffff3, 0x33333333, -0x2d, x4, 596, x5)
    1a4c:	33333537          	lui	a0,0x33333
    1a50:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332e32f>
    1a54:	fd356593          	ori	a1,a0,-45
    1a58:	24b22a23          	sw	a1,596(tp) # 254 <offset+0x1ec>

00001a5c <inst_172>:

inst_172:
// rs1_val==858993459 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x3333333f, 0x33333333, 0x2d, x4, 600, x5)
    1a5c:	33333537          	lui	a0,0x33333
    1a60:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332e32f>
    1a64:	02d56593          	ori	a1,a0,45
    1a68:	24b22c23          	sw	a1,600(tp) # 258 <offset+0x1f0>

00001a6c <inst_173>:

inst_173:
// rs1_val==858993459 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x33333333, 0x33333333, 0x2, x4, 604, x5)
    1a6c:	33333537          	lui	a0,0x33333
    1a70:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332e32f>
    1a74:	00256593          	ori	a1,a0,2
    1a78:	24b22e23          	sw	a1,604(tp) # 25c <offset+0x1f4>

00001a7c <inst_174>:

inst_174:
// rs1_val==858993459 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x33333777, 0x33333333, 0x554, x4, 608, x5)
    1a7c:	33333537          	lui	a0,0x33333
    1a80:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332e32f>
    1a84:	55456593          	ori	a1,a0,1364
    1a88:	26b22023          	sw	a1,608(tp) # 260 <offset+0x1f8>

00001a8c <inst_175>:

inst_175:
// rs1_val==858993459 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x33333333, 0x33333333, 0x0, x4, 612, x5)
    1a8c:	33333537          	lui	a0,0x33333
    1a90:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332e32f>
    1a94:	00056593          	ori	a1,a0,0
    1a98:	26b22223          	sw	a1,612(tp) # 264 <offset+0x1fc>

00001a9c <inst_176>:

inst_176:
// rs1_val==858993459 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x33333337, 0x33333333, 0x4, x4, 616, x5)
    1a9c:	33333537          	lui	a0,0x33333
    1aa0:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332e32f>
    1aa4:	00456593          	ori	a1,a0,4
    1aa8:	26b22423          	sw	a1,616(tp) # 268 <offset+0x200>

00001aac <inst_177>:

inst_177:
// rs1_val==858993459 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x33333333, 0x33333333, 0x332, x4, 620, x5)
    1aac:	33333537          	lui	a0,0x33333
    1ab0:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332e32f>
    1ab4:	33256593          	ori	a1,a0,818
    1ab8:	26b22623          	sw	a1,620(tp) # 26c <offset+0x204>

00001abc <inst_178>:

inst_178:
// rs1_val==858993459 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x33333777, 0x33333333, 0x665, x4, 624, x5)
    1abc:	33333537          	lui	a0,0x33333
    1ac0:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332e32f>
    1ac4:	66556593          	ori	a1,a0,1637
    1ac8:	26b22823          	sw	a1,624(tp) # 270 <offset+0x208>

00001acc <inst_179>:

inst_179:
// rs1_val==858993459 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x3333333f, 0x33333333, 0x2c, x4, 628, x5)
    1acc:	33333537          	lui	a0,0x33333
    1ad0:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332e32f>
    1ad4:	02c56593          	ori	a1,a0,44
    1ad8:	26b22a23          	sw	a1,628(tp) # 274 <offset+0x20c>

00001adc <inst_180>:

inst_180:
// rs1_val==858993459 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x33333777, 0x33333333, 0x556, x4, 632, x5)
    1adc:	33333537          	lui	a0,0x33333
    1ae0:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332e32f>
    1ae4:	55656593          	ori	a1,a0,1366
    1ae8:	26b22c23          	sw	a1,632(tp) # 278 <offset+0x210>

00001aec <inst_181>:

inst_181:
// rs1_val==858993459 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffbbb, 0x33333333, -0x555, x4, 636, x5)
    1aec:	33333537          	lui	a0,0x33333
    1af0:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332e32f>
    1af4:	aab56593          	ori	a1,a0,-1365
    1af8:	26b22e23          	sw	a1,636(tp) # 27c <offset+0x214>

00001afc <inst_182>:

inst_182:
// rs1_val==858993459 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x33333337, 0x33333333, 0x6, x4, 640, x5)
    1afc:	33333537          	lui	a0,0x33333
    1b00:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332e32f>
    1b04:	00656593          	ori	a1,a0,6
    1b08:	28b22023          	sw	a1,640(tp) # 280 <offset+0x218>

00001b0c <inst_183>:

inst_183:
// rs1_val==858993459 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x33333337, 0x33333333, 0x334, x4, 644, x5)
    1b0c:	33333537          	lui	a0,0x33333
    1b10:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332e32f>
    1b14:	33456593          	ori	a1,a0,820
    1b18:	28b22223          	sw	a1,644(tp) # 284 <offset+0x21c>

00001b1c <inst_184>:

inst_184:
// rs1_val==858993459 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x33333777, 0x33333333, 0x667, x4, 648, x5)
    1b1c:	33333537          	lui	a0,0x33333
    1b20:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332e32f>
    1b24:	66756593          	ori	a1,a0,1639
    1b28:	28b22423          	sw	a1,648(tp) # 288 <offset+0x220>

00001b2c <inst_185>:

inst_185:
// rs1_val==858993459 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xfffffff7, 0x33333333, -0x2c, x4, 652, x5)
    1b2c:	33333537          	lui	a0,0x33333
    1b30:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332e32f>
    1b34:	fd456593          	ori	a1,a0,-44
    1b38:	28b22623          	sw	a1,652(tp) # 28c <offset+0x224>

00001b3c <inst_186>:

inst_186:
// rs1_val==858993459 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x3333333f, 0x33333333, 0x2e, x4, 656, x5)
    1b3c:	33333537          	lui	a0,0x33333
    1b40:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332e32f>
    1b44:	02e56593          	ori	a1,a0,46
    1b48:	28b22823          	sw	a1,656(tp) # 290 <offset+0x228>

00001b4c <inst_187>:

inst_187:
// rs1_val==1717986918 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666666, 0x3, x4, 660, x5)
    1b4c:	66666537          	lui	a0,0x66666
    1b50:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66661662>
    1b54:	00356593          	ori	a1,a0,3
    1b58:	28b22a23          	sw	a1,660(tp) # 294 <offset+0x22c>

00001b5c <inst_188>:

inst_188:
// rs1_val==1717986918 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x66666777, 0x66666666, 0x555, x4, 664, x5)
    1b5c:	66666537          	lui	a0,0x66666
    1b60:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66661662>
    1b64:	55556593          	ori	a1,a0,1365
    1b68:	28b22c23          	sw	a1,664(tp) # 298 <offset+0x230>

00001b6c <inst_189>:

inst_189:
// rs1_val==1717986918 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffeee, 0x66666666, -0x556, x4, 668, x5)
    1b6c:	66666537          	lui	a0,0x66666
    1b70:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66661662>
    1b74:	aaa56593          	ori	a1,a0,-1366
    1b78:	28b22e23          	sw	a1,668(tp) # 29c <offset+0x234>

00001b7c <inst_190>:

inst_190:
// rs1_val==1717986918 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666666, 0x5, x4, 672, x5)
    1b7c:	66666537          	lui	a0,0x66666
    1b80:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66661662>
    1b84:	00556593          	ori	a1,a0,5
    1b88:	2ab22023          	sw	a1,672(tp) # 2a0 <offset+0x238>

00001b8c <inst_191>:

inst_191:
// rs1_val==1717986918 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x66666777, 0x66666666, 0x333, x4, 676, x5)
    1b8c:	66666537          	lui	a0,0x66666
    1b90:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66661662>
    1b94:	33356593          	ori	a1,a0,819
    1b98:	2ab22223          	sw	a1,676(tp) # 2a4 <offset+0x23c>

00001b9c <inst_192>:

inst_192:
// rs1_val==1717986918 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x66666666, 0x66666666, 0x666, x4, 680, x5)
    1b9c:	66666537          	lui	a0,0x66666
    1ba0:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66661662>
    1ba4:	66656593          	ori	a1,a0,1638
    1ba8:	2ab22423          	sw	a1,680(tp) # 2a8 <offset+0x240>

00001bac <inst_193>:

inst_193:
// rs1_val==1717986918 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xfffffff7, 0x66666666, -0x2d, x4, 684, x5)
    1bac:	66666537          	lui	a0,0x66666
    1bb0:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66661662>
    1bb4:	fd356593          	ori	a1,a0,-45
    1bb8:	2ab22623          	sw	a1,684(tp) # 2ac <offset+0x244>

00001bbc <inst_194>:

inst_194:
// rs1_val==1717986918 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x6666666f, 0x66666666, 0x2d, x4, 688, x5)
    1bbc:	66666537          	lui	a0,0x66666
    1bc0:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66661662>
    1bc4:	02d56593          	ori	a1,a0,45
    1bc8:	2ab22823          	sw	a1,688(tp) # 2b0 <offset+0x248>

00001bcc <inst_195>:

inst_195:
// rs1_val==1717986918 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x66666666, 0x66666666, 0x2, x4, 692, x5)
    1bcc:	66666537          	lui	a0,0x66666
    1bd0:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66661662>
    1bd4:	00256593          	ori	a1,a0,2
    1bd8:	2ab22a23          	sw	a1,692(tp) # 2b4 <offset+0x24c>

00001bdc <inst_196>:

inst_196:
// rs1_val==1717986918 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x66666776, 0x66666666, 0x554, x4, 696, x5)
    1bdc:	66666537          	lui	a0,0x66666
    1be0:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66661662>
    1be4:	55456593          	ori	a1,a0,1364
    1be8:	2ab22c23          	sw	a1,696(tp) # 2b8 <offset+0x250>

00001bec <inst_197>:

inst_197:
// rs1_val==1717986918 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x66666666, 0x66666666, 0x0, x4, 700, x5)
    1bec:	66666537          	lui	a0,0x66666
    1bf0:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66661662>
    1bf4:	00056593          	ori	a1,a0,0
    1bf8:	2ab22e23          	sw	a1,700(tp) # 2bc <offset+0x254>

00001bfc <inst_198>:

inst_198:
// rs1_val==1717986918 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x66666666, 0x66666666, 0x4, x4, 704, x5)
    1bfc:	66666537          	lui	a0,0x66666
    1c00:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66661662>
    1c04:	00456593          	ori	a1,a0,4
    1c08:	2cb22023          	sw	a1,704(tp) # 2c0 <offset+0x258>

00001c0c <inst_199>:

inst_199:
// rs1_val==1717986918 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x66666776, 0x66666666, 0x332, x4, 708, x5)
    1c0c:	66666537          	lui	a0,0x66666
    1c10:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66661662>
    1c14:	33256593          	ori	a1,a0,818
    1c18:	2cb22223          	sw	a1,708(tp) # 2c4 <offset+0x25c>

00001c1c <inst_200>:

inst_200:
// rs1_val==1717986918 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666666, 0x665, x4, 712, x5)
    1c1c:	66666537          	lui	a0,0x66666
    1c20:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66661662>
    1c24:	66556593          	ori	a1,a0,1637
    1c28:	2cb22423          	sw	a1,712(tp) # 2c8 <offset+0x260>

00001c2c <inst_201>:

inst_201:
// rs1_val==1717986918 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x6666666e, 0x66666666, 0x2c, x4, 716, x5)
    1c2c:	66666537          	lui	a0,0x66666
    1c30:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66661662>
    1c34:	02c56593          	ori	a1,a0,44
    1c38:	2cb22623          	sw	a1,716(tp) # 2cc <offset+0x264>

00001c3c <inst_202>:

inst_202:
// rs1_val==1717986918 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x66666776, 0x66666666, 0x556, x4, 720, x5)
    1c3c:	66666537          	lui	a0,0x66666
    1c40:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66661662>
    1c44:	55656593          	ori	a1,a0,1366
    1c48:	2cb22823          	sw	a1,720(tp) # 2d0 <offset+0x268>

00001c4c <inst_203>:

inst_203:
// rs1_val==1717986918 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffeef, 0x66666666, -0x555, x4, 724, x5)
    1c4c:	66666537          	lui	a0,0x66666
    1c50:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66661662>
    1c54:	aab56593          	ori	a1,a0,-1365
    1c58:	2cb22a23          	sw	a1,724(tp) # 2d4 <offset+0x26c>

00001c5c <inst_204>:

inst_204:
// rs1_val==1717986918 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x66666666, 0x66666666, 0x6, x4, 728, x5)
    1c5c:	66666537          	lui	a0,0x66666
    1c60:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66661662>
    1c64:	00656593          	ori	a1,a0,6
    1c68:	2cb22c23          	sw	a1,728(tp) # 2d8 <offset+0x270>

00001c6c <inst_205>:

inst_205:
// rs1_val==1717986918 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x66666776, 0x66666666, 0x334, x4, 732, x5)
    1c6c:	66666537          	lui	a0,0x66666
    1c70:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66661662>
    1c74:	33456593          	ori	a1,a0,820
    1c78:	2cb22e23          	sw	a1,732(tp) # 2dc <offset+0x274>

00001c7c <inst_206>:

inst_206:
// rs1_val==1717986918 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666666, 0x667, x4, 736, x5)
    1c7c:	66666537          	lui	a0,0x66666
    1c80:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66661662>
    1c84:	66756593          	ori	a1,a0,1639
    1c88:	2eb22023          	sw	a1,736(tp) # 2e0 <offset+0x278>

00001c8c <inst_207>:

inst_207:
// rs1_val==1717986918 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xfffffff6, 0x66666666, -0x2c, x4, 740, x5)
    1c8c:	66666537          	lui	a0,0x66666
    1c90:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66661662>
    1c94:	fd456593          	ori	a1,a0,-44
    1c98:	2eb22223          	sw	a1,740(tp) # 2e4 <offset+0x27c>

00001c9c <inst_208>:

inst_208:
// rs1_val==1717986918 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x6666666e, 0x66666666, 0x2e, x4, 744, x5)
    1c9c:	66666537          	lui	a0,0x66666
    1ca0:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66661662>
    1ca4:	02e56593          	ori	a1,a0,46
    1ca8:	2eb22423          	sw	a1,744(tp) # 2e8 <offset+0x280>

00001cac <inst_209>:

inst_209:
// rs1_val==-46340 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0xffff4aff, -0xb504, 0x3, x4, 748, x5)
    1cac:	ffff5537          	lui	a0,0xffff5
    1cb0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffefaf8>
    1cb4:	00356593          	ori	a1,a0,3
    1cb8:	2eb22623          	sw	a1,748(tp) # 2ec <offset+0x284>

00001cbc <inst_210>:

inst_210:
// rs1_val==-46340 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0xffff4ffd, -0xb504, 0x555, x4, 752, x5)
    1cbc:	ffff5537          	lui	a0,0xffff5
    1cc0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffefaf8>
    1cc4:	55556593          	ori	a1,a0,1365
    1cc8:	2eb22823          	sw	a1,752(tp) # 2f0 <offset+0x288>

00001ccc <inst_211>:

inst_211:
// rs1_val==-46340 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0xffff4afd, -0xb504, 0x5, x4, 756, x5)
    1ccc:	ffff5537          	lui	a0,0xffff5
    1cd0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffefaf8>
    1cd4:	00556593          	ori	a1,a0,5
    1cd8:	2eb22a23          	sw	a1,756(tp) # 2f4 <offset+0x28c>

00001cdc <inst_212>:

inst_212:
// rs1_val==-46340 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0xffff4bff, -0xb504, 0x333, x4, 760, x5)
    1cdc:	ffff5537          	lui	a0,0xffff5
    1ce0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffefaf8>
    1ce4:	33356593          	ori	a1,a0,819
    1ce8:	2eb22c23          	sw	a1,760(tp) # 2f8 <offset+0x290>

00001cec <inst_213>:

inst_213:
// rs1_val==-46340 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0xffff4efe, -0xb504, 0x666, x4, 764, x5)
    1cec:	ffff5537          	lui	a0,0xffff5
    1cf0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffefaf8>
    1cf4:	66656593          	ori	a1,a0,1638
    1cf8:	2eb22e23          	sw	a1,764(tp) # 2fc <offset+0x294>

00001cfc <inst_214>:

inst_214:
// rs1_val==-46340 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0xb504, -0x2d, x4, 768, x5)
    1cfc:	ffff5537          	lui	a0,0xffff5
    1d00:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffefaf8>
    1d04:	fd356593          	ori	a1,a0,-45
    1d08:	30b22023          	sw	a1,768(tp) # 300 <offset+0x298>

00001d0c <inst_215>:

inst_215:
// rs1_val==-46340 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0xffff4afd, -0xb504, 0x2d, x4, 772, x5)
    1d0c:	ffff5537          	lui	a0,0xffff5
    1d10:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffefaf8>
    1d14:	02d56593          	ori	a1,a0,45
    1d18:	30b22223          	sw	a1,772(tp) # 304 <offset+0x29c>

00001d1c <inst_216>:

inst_216:
// rs1_val==-46340 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0xffff4afe, -0xb504, 0x2, x4, 776, x5)
    1d1c:	ffff5537          	lui	a0,0xffff5
    1d20:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffefaf8>
    1d24:	00256593          	ori	a1,a0,2
    1d28:	30b22423          	sw	a1,776(tp) # 308 <offset+0x2a0>

00001d2c <inst_217>:

inst_217:
// rs1_val==-46340 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0xffff4ffc, -0xb504, 0x554, x4, 780, x5)
    1d2c:	ffff5537          	lui	a0,0xffff5
    1d30:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffefaf8>
    1d34:	55456593          	ori	a1,a0,1364
    1d38:	30b22623          	sw	a1,780(tp) # 30c <offset+0x2a4>

00001d3c <inst_218>:

inst_218:
// rs1_val==-46340 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0xffff4afc, -0xb504, 0x0, x4, 784, x5)
    1d3c:	ffff5537          	lui	a0,0xffff5
    1d40:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffefaf8>
    1d44:	00056593          	ori	a1,a0,0
    1d48:	30b22823          	sw	a1,784(tp) # 310 <offset+0x2a8>

00001d4c <inst_219>:

inst_219:
// rs1_val==-46340 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0xffff4afc, -0xb504, 0x4, x4, 788, x5)
    1d4c:	ffff5537          	lui	a0,0xffff5
    1d50:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffefaf8>
    1d54:	00456593          	ori	a1,a0,4
    1d58:	30b22a23          	sw	a1,788(tp) # 314 <offset+0x2ac>

00001d5c <inst_220>:

inst_220:
// rs1_val==-46340 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0xffff4bfe, -0xb504, 0x332, x4, 792, x5)
    1d5c:	ffff5537          	lui	a0,0xffff5
    1d60:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffefaf8>
    1d64:	33256593          	ori	a1,a0,818
    1d68:	30b22c23          	sw	a1,792(tp) # 318 <offset+0x2b0>

00001d6c <inst_221>:

inst_221:
// rs1_val==-46340 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0xffff4efd, -0xb504, 0x665, x4, 796, x5)
    1d6c:	ffff5537          	lui	a0,0xffff5
    1d70:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffefaf8>
    1d74:	66556593          	ori	a1,a0,1637
    1d78:	30b22e23          	sw	a1,796(tp) # 31c <offset+0x2b4>

00001d7c <inst_222>:

inst_222:
// rs1_val==-46340 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0xffff4afc, -0xb504, 0x2c, x4, 800, x5)
    1d7c:	ffff5537          	lui	a0,0xffff5
    1d80:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffefaf8>
    1d84:	02c56593          	ori	a1,a0,44
    1d88:	32b22023          	sw	a1,800(tp) # 320 <offset+0x2b8>

00001d8c <inst_223>:

inst_223:
// rs1_val==-46340 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0xffff4ffe, -0xb504, 0x556, x4, 804, x5)
    1d8c:	ffff5537          	lui	a0,0xffff5
    1d90:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffefaf8>
    1d94:	55656593          	ori	a1,a0,1366
    1d98:	32b22223          	sw	a1,804(tp) # 324 <offset+0x2bc>

00001d9c <inst_224>:

inst_224:
// rs1_val==-46340 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffaff, -0xb504, -0x555, x4, 808, x5)
    1d9c:	ffff5537          	lui	a0,0xffff5
    1da0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffefaf8>
    1da4:	aab56593          	ori	a1,a0,-1365
    1da8:	32b22423          	sw	a1,808(tp) # 328 <offset+0x2c0>

00001dac <inst_225>:

inst_225:
// rs1_val==-46340 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0xffff4afe, -0xb504, 0x6, x4, 812, x5)
    1dac:	ffff5537          	lui	a0,0xffff5
    1db0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffefaf8>
    1db4:	00656593          	ori	a1,a0,6
    1db8:	32b22623          	sw	a1,812(tp) # 32c <offset+0x2c4>

00001dbc <inst_226>:

inst_226:
// rs1_val==-46340 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0xffff4bfc, -0xb504, 0x334, x4, 816, x5)
    1dbc:	ffff5537          	lui	a0,0xffff5
    1dc0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffefaf8>
    1dc4:	33456593          	ori	a1,a0,820
    1dc8:	32b22823          	sw	a1,816(tp) # 330 <offset+0x2c8>

00001dcc <inst_227>:

inst_227:
// rs1_val==-46340 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0xffff4eff, -0xb504, 0x667, x4, 820, x5)
    1dcc:	ffff5537          	lui	a0,0xffff5
    1dd0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffefaf8>
    1dd4:	66756593          	ori	a1,a0,1639
    1dd8:	32b22a23          	sw	a1,820(tp) # 334 <offset+0x2cc>

00001ddc <inst_228>:

inst_228:
// rs1_val==-46340 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xfffffffc, -0xb504, -0x2c, x4, 824, x5)
    1ddc:	ffff5537          	lui	a0,0xffff5
    1de0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffefaf8>
    1de4:	fd456593          	ori	a1,a0,-44
    1de8:	32b22c23          	sw	a1,824(tp) # 338 <offset+0x2d0>

00001dec <inst_229>:

inst_229:
// rs1_val==-46340 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0xffff4afe, -0xb504, 0x2e, x4, 828, x5)
    1dec:	ffff5537          	lui	a0,0xffff5
    1df0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xfffefaf8>
    1df4:	02e56593          	ori	a1,a0,46
    1df8:	32b22e23          	sw	a1,828(tp) # 33c <offset+0x2d4>

00001dfc <inst_230>:

inst_230:
// rs1_val==46340 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0xb507, 0xb504, 0x3, x4, 832, x5)
    1dfc:	0000b537          	lui	a0,0xb
    1e00:	50450513          	addi	a0,a0,1284 # b504 <_end+0x6500>
    1e04:	00356593          	ori	a1,a0,3
    1e08:	34b22023          	sw	a1,832(tp) # 340 <offset+0x2d8>

00001e0c <inst_231>:

inst_231:
// rs1_val==46340 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0xb555, 0xb504, 0x555, x4, 836, x5)
    1e0c:	0000b537          	lui	a0,0xb
    1e10:	50450513          	addi	a0,a0,1284 # b504 <_end+0x6500>
    1e14:	55556593          	ori	a1,a0,1365
    1e18:	34b22223          	sw	a1,836(tp) # 344 <offset+0x2dc>

00001e1c <inst_232>:

inst_232:
// rs1_val==46340 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xffffffae, 0xb504, -0x556, x4, 840, x5)
    1e1c:	0000b537          	lui	a0,0xb
    1e20:	50450513          	addi	a0,a0,1284 # b504 <_end+0x6500>
    1e24:	aaa56593          	ori	a1,a0,-1366
    1e28:	34b22423          	sw	a1,840(tp) # 348 <offset+0x2e0>

00001e2c <inst_233>:

inst_233:
// rs1_val==46340 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0xb505, 0xb504, 0x5, x4, 844, x5)
    1e2c:	0000b537          	lui	a0,0xb
    1e30:	50450513          	addi	a0,a0,1284 # b504 <_end+0x6500>
    1e34:	00556593          	ori	a1,a0,5
    1e38:	34b22623          	sw	a1,844(tp) # 34c <offset+0x2e4>

00001e3c <inst_234>:

inst_234:
// rs1_val==46340 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0xb737, 0xb504, 0x333, x4, 848, x5)
    1e3c:	0000b537          	lui	a0,0xb
    1e40:	50450513          	addi	a0,a0,1284 # b504 <_end+0x6500>
    1e44:	33356593          	ori	a1,a0,819
    1e48:	34b22823          	sw	a1,848(tp) # 350 <offset+0x2e8>

00001e4c <inst_235>:

inst_235:
// rs1_val==46340 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0xb766, 0xb504, 0x666, x4, 852, x5)
    1e4c:	0000b537          	lui	a0,0xb
    1e50:	50450513          	addi	a0,a0,1284 # b504 <_end+0x6500>
    1e54:	66656593          	ori	a1,a0,1638
    1e58:	34b22a23          	sw	a1,852(tp) # 354 <offset+0x2ec>

00001e5c <inst_236>:

inst_236:
// rs1_val==46340 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd7, 0xb504, -0x2d, x4, 856, x5)
    1e5c:	0000b537          	lui	a0,0xb
    1e60:	50450513          	addi	a0,a0,1284 # b504 <_end+0x6500>
    1e64:	fd356593          	ori	a1,a0,-45
    1e68:	34b22c23          	sw	a1,856(tp) # 358 <offset+0x2f0>

00001e6c <inst_237>:

inst_237:
// rs1_val==46340 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0xb52d, 0xb504, 0x2d, x4, 860, x5)
    1e6c:	0000b537          	lui	a0,0xb
    1e70:	50450513          	addi	a0,a0,1284 # b504 <_end+0x6500>
    1e74:	02d56593          	ori	a1,a0,45
    1e78:	34b22e23          	sw	a1,860(tp) # 35c <offset+0x2f4>

00001e7c <inst_238>:

inst_238:
// rs1_val==46340 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0xb506, 0xb504, 0x2, x4, 864, x5)
    1e7c:	0000b537          	lui	a0,0xb
    1e80:	50450513          	addi	a0,a0,1284 # b504 <_end+0x6500>
    1e84:	00256593          	ori	a1,a0,2
    1e88:	36b22023          	sw	a1,864(tp) # 360 <offset+0x2f8>

00001e8c <inst_239>:

inst_239:
// rs1_val==46340 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0xb554, 0xb504, 0x554, x4, 868, x5)
    1e8c:	0000b537          	lui	a0,0xb
    1e90:	50450513          	addi	a0,a0,1284 # b504 <_end+0x6500>
    1e94:	55456593          	ori	a1,a0,1364
    1e98:	36b22223          	sw	a1,868(tp) # 364 <offset+0x2fc>

00001e9c <inst_240>:

inst_240:
// rs1_val==46340 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0xb504, 0xb504, 0x0, x4, 872, x5)
    1e9c:	0000b537          	lui	a0,0xb
    1ea0:	50450513          	addi	a0,a0,1284 # b504 <_end+0x6500>
    1ea4:	00056593          	ori	a1,a0,0
    1ea8:	36b22423          	sw	a1,872(tp) # 368 <offset+0x300>

00001eac <inst_241>:

inst_241:
// rs1_val==46340 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0xb504, 0xb504, 0x4, x4, 876, x5)
    1eac:	0000b537          	lui	a0,0xb
    1eb0:	50450513          	addi	a0,a0,1284 # b504 <_end+0x6500>
    1eb4:	00456593          	ori	a1,a0,4
    1eb8:	36b22623          	sw	a1,876(tp) # 36c <offset+0x304>

00001ebc <inst_242>:

inst_242:
// rs1_val==46340 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0xb736, 0xb504, 0x332, x4, 880, x5)
    1ebc:	0000b537          	lui	a0,0xb
    1ec0:	50450513          	addi	a0,a0,1284 # b504 <_end+0x6500>
    1ec4:	33256593          	ori	a1,a0,818
    1ec8:	36b22823          	sw	a1,880(tp) # 370 <offset+0x308>

00001ecc <inst_243>:

inst_243:
// rs1_val==46340 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0xb765, 0xb504, 0x665, x4, 884, x5)
    1ecc:	0000b537          	lui	a0,0xb
    1ed0:	50450513          	addi	a0,a0,1284 # b504 <_end+0x6500>
    1ed4:	66556593          	ori	a1,a0,1637
    1ed8:	36b22a23          	sw	a1,884(tp) # 374 <offset+0x30c>

00001edc <inst_244>:

inst_244:
// rs1_val==46340 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0xb52c, 0xb504, 0x2c, x4, 888, x5)
    1edc:	0000b537          	lui	a0,0xb
    1ee0:	50450513          	addi	a0,a0,1284 # b504 <_end+0x6500>
    1ee4:	02c56593          	ori	a1,a0,44
    1ee8:	36b22c23          	sw	a1,888(tp) # 378 <offset+0x310>

00001eec <inst_245>:

inst_245:
// rs1_val==46340 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0xb556, 0xb504, 0x556, x4, 892, x5)
    1eec:	0000b537          	lui	a0,0xb
    1ef0:	50450513          	addi	a0,a0,1284 # b504 <_end+0x6500>
    1ef4:	55656593          	ori	a1,a0,1366
    1ef8:	36b22e23          	sw	a1,892(tp) # 37c <offset+0x314>

00001efc <inst_246>:

inst_246:
// rs1_val==46340 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xffffffaf, 0xb504, -0x555, x4, 896, x5)
    1efc:	0000b537          	lui	a0,0xb
    1f00:	50450513          	addi	a0,a0,1284 # b504 <_end+0x6500>
    1f04:	aab56593          	ori	a1,a0,-1365
    1f08:	38b22023          	sw	a1,896(tp) # 380 <offset+0x318>

00001f0c <inst_247>:

inst_247:
// rs1_val==46340 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0xb506, 0xb504, 0x6, x4, 900, x5)
    1f0c:	0000b537          	lui	a0,0xb
    1f10:	50450513          	addi	a0,a0,1284 # b504 <_end+0x6500>
    1f14:	00656593          	ori	a1,a0,6
    1f18:	38b22223          	sw	a1,900(tp) # 384 <offset+0x31c>

00001f1c <inst_248>:

inst_248:
// rs1_val==46340 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0xb734, 0xb504, 0x334, x4, 904, x5)
    1f1c:	0000b537          	lui	a0,0xb
    1f20:	50450513          	addi	a0,a0,1284 # b504 <_end+0x6500>
    1f24:	33456593          	ori	a1,a0,820
    1f28:	38b22423          	sw	a1,904(tp) # 388 <offset+0x320>

00001f2c <inst_249>:

inst_249:
// rs1_val==46340 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0xb767, 0xb504, 0x667, x4, 908, x5)
    1f2c:	0000b537          	lui	a0,0xb
    1f30:	50450513          	addi	a0,a0,1284 # b504 <_end+0x6500>
    1f34:	66756593          	ori	a1,a0,1639
    1f38:	38b22623          	sw	a1,908(tp) # 38c <offset+0x324>

00001f3c <inst_250>:

inst_250:
// rs1_val==46340 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd4, 0xb504, -0x2c, x4, 912, x5)
    1f3c:	0000b537          	lui	a0,0xb
    1f40:	50450513          	addi	a0,a0,1284 # b504 <_end+0x6500>
    1f44:	fd456593          	ori	a1,a0,-44
    1f48:	38b22823          	sw	a1,912(tp) # 390 <offset+0x328>

00001f4c <inst_251>:

inst_251:
// rs1_val==46340 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0xb52e, 0xb504, 0x2e, x4, 916, x5)
    1f4c:	0000b537          	lui	a0,0xb
    1f50:	50450513          	addi	a0,a0,1284 # b504 <_end+0x6500>
    1f54:	02e56593          	ori	a1,a0,46
    1f58:	38b22a23          	sw	a1,916(tp) # 394 <offset+0x32c>

00001f5c <inst_252>:

inst_252:
// rs1_val==2 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x3, 0x2, 0x3, x4, 920, x5)
    1f5c:	00200513          	li	a0,2
    1f60:	00356593          	ori	a1,a0,3
    1f64:	38b22c23          	sw	a1,920(tp) # 398 <offset+0x330>

00001f68 <inst_253>:

inst_253:
// rs1_val==2 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x557, 0x2, 0x555, x4, 924, x5)
    1f68:	00200513          	li	a0,2
    1f6c:	55556593          	ori	a1,a0,1365
    1f70:	38b22e23          	sw	a1,924(tp) # 39c <offset+0x334>

00001f74 <inst_254>:

inst_254:
// rs1_val==2 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffaaa, 0x2, -0x556, x4, 928, x5)
    1f74:	00200513          	li	a0,2
    1f78:	aaa56593          	ori	a1,a0,-1366
    1f7c:	3ab22023          	sw	a1,928(tp) # 3a0 <offset+0x338>

00001f80 <inst_255>:

inst_255:
// rs1_val==2 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x7, 0x2, 0x5, x4, 932, x5)
    1f80:	00200513          	li	a0,2
    1f84:	00556593          	ori	a1,a0,5
    1f88:	3ab22223          	sw	a1,932(tp) # 3a4 <offset+0x33c>

00001f8c <inst_256>:

inst_256:
// rs1_val==2 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x333, 0x2, 0x333, x4, 936, x5)
    1f8c:	00200513          	li	a0,2
    1f90:	33356593          	ori	a1,a0,819
    1f94:	3ab22423          	sw	a1,936(tp) # 3a8 <offset+0x340>

00001f98 <inst_257>:

inst_257:
// rs1_val==2 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x666, 0x2, 0x666, x4, 940, x5)
    1f98:	00200513          	li	a0,2
    1f9c:	66656593          	ori	a1,a0,1638
    1fa0:	3ab22623          	sw	a1,940(tp) # 3ac <offset+0x344>

00001fa4 <inst_258>:

inst_258:
// rs1_val==2 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd3, 0x2, -0x2d, x4, 944, x5)
    1fa4:	00200513          	li	a0,2
    1fa8:	fd356593          	ori	a1,a0,-45
    1fac:	3ab22823          	sw	a1,944(tp) # 3b0 <offset+0x348>

00001fb0 <inst_259>:

inst_259:
// rs1_val==2 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x2f, 0x2, 0x2d, x4, 948, x5)
    1fb0:	00200513          	li	a0,2
    1fb4:	02d56593          	ori	a1,a0,45
    1fb8:	3ab22a23          	sw	a1,948(tp) # 3b4 <offset+0x34c>

00001fbc <inst_260>:

inst_260:
// rs1_val==2 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x2, 0x2, 0x2, x4, 952, x5)
    1fbc:	00200513          	li	a0,2
    1fc0:	00256593          	ori	a1,a0,2
    1fc4:	3ab22c23          	sw	a1,952(tp) # 3b8 <offset+0x350>

00001fc8 <inst_261>:

inst_261:
// rs1_val==2 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x556, 0x2, 0x554, x4, 956, x5)
    1fc8:	00200513          	li	a0,2
    1fcc:	55456593          	ori	a1,a0,1364
    1fd0:	3ab22e23          	sw	a1,956(tp) # 3bc <offset+0x354>

00001fd4 <inst_262>:

inst_262:
// rs1_val==2 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x2, 0x2, 0x0, x4, 960, x5)
    1fd4:	00200513          	li	a0,2
    1fd8:	00056593          	ori	a1,a0,0
    1fdc:	3cb22023          	sw	a1,960(tp) # 3c0 <offset+0x358>

00001fe0 <inst_263>:

inst_263:
// rs1_val==2 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x6, 0x2, 0x4, x4, 964, x5)
    1fe0:	00200513          	li	a0,2
    1fe4:	00456593          	ori	a1,a0,4
    1fe8:	3cb22223          	sw	a1,964(tp) # 3c4 <offset+0x35c>

00001fec <inst_264>:

inst_264:
// rs1_val==2 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x332, 0x2, 0x332, x4, 968, x5)
    1fec:	00200513          	li	a0,2
    1ff0:	33256593          	ori	a1,a0,818
    1ff4:	3cb22423          	sw	a1,968(tp) # 3c8 <offset+0x360>

00001ff8 <inst_265>:

inst_265:
// rs1_val==2 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x667, 0x2, 0x665, x4, 972, x5)
    1ff8:	00200513          	li	a0,2
    1ffc:	66556593          	ori	a1,a0,1637
    2000:	3cb22623          	sw	a1,972(tp) # 3cc <offset+0x364>

00002004 <inst_266>:

inst_266:
// rs1_val==2 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x2e, 0x2, 0x2c, x4, 976, x5)
    2004:	00200513          	li	a0,2
    2008:	02c56593          	ori	a1,a0,44
    200c:	3cb22823          	sw	a1,976(tp) # 3d0 <offset+0x368>

00002010 <inst_267>:

inst_267:
// rs1_val==2 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x556, 0x2, 0x556, x4, 980, x5)
    2010:	00200513          	li	a0,2
    2014:	55656593          	ori	a1,a0,1366
    2018:	3cb22a23          	sw	a1,980(tp) # 3d4 <offset+0x36c>

0000201c <inst_268>:

inst_268:
// rs1_val==2 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffaab, 0x2, -0x555, x4, 984, x5)
    201c:	00200513          	li	a0,2
    2020:	aab56593          	ori	a1,a0,-1365
    2024:	3cb22c23          	sw	a1,984(tp) # 3d8 <offset+0x370>

00002028 <inst_269>:

inst_269:
// rs1_val==2 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x6, 0x2, 0x6, x4, 988, x5)
    2028:	00200513          	li	a0,2
    202c:	00656593          	ori	a1,a0,6
    2030:	3cb22e23          	sw	a1,988(tp) # 3dc <offset+0x374>

00002034 <inst_270>:

inst_270:
// rs1_val==2 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x336, 0x2, 0x334, x4, 992, x5)
    2034:	00200513          	li	a0,2
    2038:	33456593          	ori	a1,a0,820
    203c:	3eb22023          	sw	a1,992(tp) # 3e0 <offset+0x378>

00002040 <inst_271>:

inst_271:
// rs1_val==2 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x667, 0x2, 0x667, x4, 996, x5)
    2040:	00200513          	li	a0,2
    2044:	66756593          	ori	a1,a0,1639
    2048:	3eb22223          	sw	a1,996(tp) # 3e4 <offset+0x37c>

0000204c <inst_272>:

inst_272:
// rs1_val==2 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd6, 0x2, -0x2c, x4, 1000, x5)
    204c:	00200513          	li	a0,2
    2050:	fd456593          	ori	a1,a0,-44
    2054:	3eb22423          	sw	a1,1000(tp) # 3e8 <offset+0x380>

00002058 <inst_273>:

inst_273:
// rs1_val==2 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x2e, 0x2, 0x2e, x4, 1004, x5)
    2058:	00200513          	li	a0,2
    205c:	02e56593          	ori	a1,a0,46
    2060:	3eb22623          	sw	a1,1004(tp) # 3ec <offset+0x384>

00002064 <inst_274>:

inst_274:
// rs1_val==1431655764 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x55555557, 0x55555554, 0x3, x4, 1008, x5)
    2064:	55555537          	lui	a0,0x55555
    2068:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x55550550>
    206c:	00356593          	ori	a1,a0,3
    2070:	3eb22823          	sw	a1,1008(tp) # 3f0 <offset+0x388>

00002074 <inst_275>:

inst_275:
// rs1_val==1431655764 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x55555555, 0x55555554, 0x555, x4, 1012, x5)
    2074:	55555537          	lui	a0,0x55555
    2078:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x55550550>
    207c:	55556593          	ori	a1,a0,1365
    2080:	3eb22a23          	sw	a1,1012(tp) # 3f4 <offset+0x38c>

00002084 <inst_276>:

inst_276:
// rs1_val==1431655764 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffffe, 0x55555554, -0x556, x4, 1016, x5)
    2084:	55555537          	lui	a0,0x55555
    2088:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x55550550>
    208c:	aaa56593          	ori	a1,a0,-1366
    2090:	3eb22c23          	sw	a1,1016(tp) # 3f8 <offset+0x390>

00002094 <inst_277>:

inst_277:
// rs1_val==1431655764 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x55555555, 0x55555554, 0x5, x4, 1020, x5)
    2094:	55555537          	lui	a0,0x55555
    2098:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x55550550>
    209c:	00556593          	ori	a1,a0,5
    20a0:	3eb22e23          	sw	a1,1020(tp) # 3fc <offset+0x394>

000020a4 <inst_278>:

inst_278:
// rs1_val==1431655764 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x55555777, 0x55555554, 0x333, x4, 1024, x5)
    20a4:	55555537          	lui	a0,0x55555
    20a8:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x55550550>
    20ac:	33356593          	ori	a1,a0,819
    20b0:	40b22023          	sw	a1,1024(tp) # 400 <offset+0x398>

000020b4 <inst_279>:

inst_279:
// rs1_val==1431655764 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x55555776, 0x55555554, 0x666, x4, 1028, x5)
    20b4:	55555537          	lui	a0,0x55555
    20b8:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x55550550>
    20bc:	66656593          	ori	a1,a0,1638
    20c0:	40b22223          	sw	a1,1028(tp) # 404 <offset+0x39c>

000020c4 <inst_280>:

inst_280:
// rs1_val==1431655764 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd7, 0x55555554, -0x2d, x4, 1032, x5)
    20c4:	55555537          	lui	a0,0x55555
    20c8:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x55550550>
    20cc:	fd356593          	ori	a1,a0,-45
    20d0:	40b22423          	sw	a1,1032(tp) # 408 <offset+0x3a0>

000020d4 <inst_281>:

inst_281:
// rs1_val==1431655764 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x5555557d, 0x55555554, 0x2d, x4, 1036, x5)
    20d4:	55555537          	lui	a0,0x55555
    20d8:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x55550550>
    20dc:	02d56593          	ori	a1,a0,45
    20e0:	40b22623          	sw	a1,1036(tp) # 40c <offset+0x3a4>

000020e4 <inst_282>:

inst_282:
// rs1_val==1431655764 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x55555556, 0x55555554, 0x2, x4, 1040, x5)
    20e4:	55555537          	lui	a0,0x55555
    20e8:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x55550550>
    20ec:	00256593          	ori	a1,a0,2
    20f0:	40b22823          	sw	a1,1040(tp) # 410 <offset+0x3a8>

000020f4 <inst_283>:

inst_283:
// rs1_val==1431655764 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x55555554, 0x55555554, 0x554, x4, 1044, x5)
    20f4:	55555537          	lui	a0,0x55555
    20f8:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x55550550>
    20fc:	55456593          	ori	a1,a0,1364
    2100:	40b22a23          	sw	a1,1044(tp) # 414 <offset+0x3ac>

00002104 <inst_284>:

inst_284:
// rs1_val==1431655764 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x55555554, 0x55555554, 0x0, x4, 1048, x5)
    2104:	55555537          	lui	a0,0x55555
    2108:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x55550550>
    210c:	00056593          	ori	a1,a0,0
    2110:	40b22c23          	sw	a1,1048(tp) # 418 <offset+0x3b0>

00002114 <inst_285>:

inst_285:
// rs1_val==1431655764 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x55555554, 0x55555554, 0x4, x4, 1052, x5)
    2114:	55555537          	lui	a0,0x55555
    2118:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x55550550>
    211c:	00456593          	ori	a1,a0,4
    2120:	40b22e23          	sw	a1,1052(tp) # 41c <offset+0x3b4>

00002124 <inst_286>:

inst_286:
// rs1_val==1431655764 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x55555776, 0x55555554, 0x332, x4, 1056, x5)
    2124:	55555537          	lui	a0,0x55555
    2128:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x55550550>
    212c:	33256593          	ori	a1,a0,818
    2130:	42b22023          	sw	a1,1056(tp) # 420 <offset+0x3b8>

00002134 <inst_287>:

inst_287:
// rs1_val==1431655764 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x55555775, 0x55555554, 0x665, x4, 1060, x5)
    2134:	55555537          	lui	a0,0x55555
    2138:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x55550550>
    213c:	66556593          	ori	a1,a0,1637
    2140:	42b22223          	sw	a1,1060(tp) # 424 <offset+0x3bc>

00002144 <inst_288>:

inst_288:
// rs1_val==1431655764 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x5555557c, 0x55555554, 0x2c, x4, 1064, x5)
    2144:	55555537          	lui	a0,0x55555
    2148:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x55550550>
    214c:	02c56593          	ori	a1,a0,44
    2150:	42b22423          	sw	a1,1064(tp) # 428 <offset+0x3c0>

00002154 <inst_289>:

inst_289:
// rs1_val==1431655764 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x55555556, 0x55555554, 0x556, x4, 1068, x5)
    2154:	55555537          	lui	a0,0x55555
    2158:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x55550550>
    215c:	55656593          	ori	a1,a0,1366
    2160:	42b22623          	sw	a1,1068(tp) # 42c <offset+0x3c4>

00002164 <inst_290>:

inst_290:
// rs1_val==1431655764 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xffffffff, 0x55555554, -0x555, x4, 1072, x5)
    2164:	55555537          	lui	a0,0x55555
    2168:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x55550550>
    216c:	aab56593          	ori	a1,a0,-1365
    2170:	42b22823          	sw	a1,1072(tp) # 430 <offset+0x3c8>

00002174 <inst_291>:

inst_291:
// rs1_val==1431655764 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x55555556, 0x55555554, 0x6, x4, 1076, x5)
    2174:	55555537          	lui	a0,0x55555
    2178:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x55550550>
    217c:	00656593          	ori	a1,a0,6
    2180:	42b22a23          	sw	a1,1076(tp) # 434 <offset+0x3cc>

00002184 <inst_292>:

inst_292:
// rs1_val==1431655764 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x55555774, 0x55555554, 0x334, x4, 1080, x5)
    2184:	55555537          	lui	a0,0x55555
    2188:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x55550550>
    218c:	33456593          	ori	a1,a0,820
    2190:	42b22c23          	sw	a1,1080(tp) # 438 <offset+0x3d0>

00002194 <inst_293>:

inst_293:
// rs1_val==1431655764 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x55555777, 0x55555554, 0x667, x4, 1084, x5)
    2194:	55555537          	lui	a0,0x55555
    2198:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x55550550>
    219c:	66756593          	ori	a1,a0,1639
    21a0:	42b22e23          	sw	a1,1084(tp) # 43c <offset+0x3d4>

000021a4 <inst_294>:

inst_294:
// rs1_val==1431655764 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd4, 0x55555554, -0x2c, x4, 1088, x5)
    21a4:	55555537          	lui	a0,0x55555
    21a8:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x55550550>
    21ac:	fd456593          	ori	a1,a0,-44
    21b0:	44b22023          	sw	a1,1088(tp) # 440 <offset+0x3d8>

000021b4 <inst_295>:

inst_295:
// rs1_val==1431655764 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x5555557e, 0x55555554, 0x2e, x4, 1092, x5)
    21b4:	55555537          	lui	a0,0x55555
    21b8:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x55550550>
    21bc:	02e56593          	ori	a1,a0,46
    21c0:	44b22223          	sw	a1,1092(tp) # 444 <offset+0x3dc>

000021c4 <inst_296>:

inst_296:
// rs1_val==0 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x3, 0x0, 0x3, x4, 1096, x5)
    21c4:	00000513          	li	a0,0
    21c8:	00356593          	ori	a1,a0,3
    21cc:	44b22423          	sw	a1,1096(tp) # 448 <offset+0x3e0>

000021d0 <inst_297>:

inst_297:
// rs1_val==0 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x555, 0x0, 0x555, x4, 1100, x5)
    21d0:	00000513          	li	a0,0
    21d4:	55556593          	ori	a1,a0,1365
    21d8:	44b22623          	sw	a1,1100(tp) # 44c <offset+0x3e4>

000021dc <inst_298>:

inst_298:
// rs1_val==0 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffaaa, 0x0, -0x556, x4, 1104, x5)
    21dc:	00000513          	li	a0,0
    21e0:	aaa56593          	ori	a1,a0,-1366
    21e4:	44b22823          	sw	a1,1104(tp) # 450 <offset+0x3e8>

000021e8 <inst_299>:

inst_299:
// rs1_val==0 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x5, 0x0, 0x5, x4, 1108, x5)
    21e8:	00000513          	li	a0,0
    21ec:	00556593          	ori	a1,a0,5
    21f0:	44b22a23          	sw	a1,1108(tp) # 454 <offset+0x3ec>

000021f4 <inst_300>:

inst_300:
// rs1_val==0 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x333, 0x0, 0x333, x4, 1112, x5)
    21f4:	00000513          	li	a0,0
    21f8:	33356593          	ori	a1,a0,819
    21fc:	44b22c23          	sw	a1,1112(tp) # 458 <offset+0x3f0>

00002200 <inst_301>:

inst_301:
// rs1_val==0 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x666, 0x0, 0x666, x4, 1116, x5)
    2200:	00000513          	li	a0,0
    2204:	66656593          	ori	a1,a0,1638
    2208:	44b22e23          	sw	a1,1116(tp) # 45c <offset+0x3f4>

0000220c <inst_302>:

inst_302:
// rs1_val==0 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd3, 0x0, -0x2d, x4, 1120, x5)
    220c:	00000513          	li	a0,0
    2210:	fd356593          	ori	a1,a0,-45
    2214:	46b22023          	sw	a1,1120(tp) # 460 <offset+0x3f8>

00002218 <inst_303>:

inst_303:
// rs1_val==858993460 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x33333336, 0x33333334, 0x332, x4, 1124, x5)
    2218:	33333537          	lui	a0,0x33333
    221c:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332e330>
    2220:	33256593          	ori	a1,a0,818
    2224:	46b22223          	sw	a1,1124(tp) # 464 <offset+0x3fc>

00002228 <inst_304>:

inst_304:
// rs1_val==858993460 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x33333775, 0x33333334, 0x665, x4, 1128, x5)
    2228:	33333537          	lui	a0,0x33333
    222c:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332e330>
    2230:	66556593          	ori	a1,a0,1637
    2234:	46b22423          	sw	a1,1128(tp) # 468 <offset+0x400>

00002238 <inst_305>:

inst_305:
// rs1_val==858993460 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x3333333c, 0x33333334, 0x2c, x4, 1132, x5)
    2238:	33333537          	lui	a0,0x33333
    223c:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332e330>
    2240:	02c56593          	ori	a1,a0,44
    2244:	46b22623          	sw	a1,1132(tp) # 46c <offset+0x404>

00002248 <inst_306>:

inst_306:
// rs1_val==858993460 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x33333776, 0x33333334, 0x556, x4, 1136, x5)
    2248:	33333537          	lui	a0,0x33333
    224c:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332e330>
    2250:	55656593          	ori	a1,a0,1366
    2254:	46b22823          	sw	a1,1136(tp) # 470 <offset+0x408>

00002258 <inst_307>:

inst_307:
// rs1_val==858993460 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffbbf, 0x33333334, -0x555, x4, 1140, x5)
    2258:	33333537          	lui	a0,0x33333
    225c:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332e330>
    2260:	aab56593          	ori	a1,a0,-1365
    2264:	46b22a23          	sw	a1,1140(tp) # 474 <offset+0x40c>

00002268 <inst_308>:

inst_308:
// rs1_val==858993460 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x33333336, 0x33333334, 0x6, x4, 1144, x5)
    2268:	33333537          	lui	a0,0x33333
    226c:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332e330>
    2270:	00656593          	ori	a1,a0,6
    2274:	46b22c23          	sw	a1,1144(tp) # 478 <offset+0x410>

00002278 <inst_309>:

inst_309:
// rs1_val==858993460 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x33333334, 0x33333334, 0x334, x4, 1148, x5)
    2278:	33333537          	lui	a0,0x33333
    227c:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332e330>
    2280:	33456593          	ori	a1,a0,820
    2284:	46b22e23          	sw	a1,1148(tp) # 47c <offset+0x414>

00002288 <inst_310>:

inst_310:
// rs1_val==858993460 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x33333777, 0x33333334, 0x667, x4, 1152, x5)
    2288:	33333537          	lui	a0,0x33333
    228c:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332e330>
    2290:	66756593          	ori	a1,a0,1639
    2294:	48b22023          	sw	a1,1152(tp) # 480 <offset+0x418>

00002298 <inst_311>:

inst_311:
// rs1_val==858993460 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xfffffff4, 0x33333334, -0x2c, x4, 1156, x5)
    2298:	33333537          	lui	a0,0x33333
    229c:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332e330>
    22a0:	fd456593          	ori	a1,a0,-44
    22a4:	48b22223          	sw	a1,1156(tp) # 484 <offset+0x41c>

000022a8 <inst_312>:

inst_312:
// rs1_val==858993460 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x3333333e, 0x33333334, 0x2e, x4, 1160, x5)
    22a8:	33333537          	lui	a0,0x33333
    22ac:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332e330>
    22b0:	02e56593          	ori	a1,a0,46
    22b4:	48b22423          	sw	a1,1160(tp) # 488 <offset+0x420>

000022b8 <inst_313>:

inst_313:
// rs1_val==1717986919 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666667, 0x3, x4, 1164, x5)
    22b8:	66666537          	lui	a0,0x66666
    22bc:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66661663>
    22c0:	00356593          	ori	a1,a0,3
    22c4:	48b22623          	sw	a1,1164(tp) # 48c <offset+0x424>

000022c8 <inst_314>:

inst_314:
// rs1_val==1717986919 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x66666777, 0x66666667, 0x555, x4, 1168, x5)
    22c8:	66666537          	lui	a0,0x66666
    22cc:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66661663>
    22d0:	55556593          	ori	a1,a0,1365
    22d4:	48b22823          	sw	a1,1168(tp) # 490 <offset+0x428>

000022d8 <inst_315>:

inst_315:
// rs1_val==1717986919 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffeef, 0x66666667, -0x556, x4, 1172, x5)
    22d8:	66666537          	lui	a0,0x66666
    22dc:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66661663>
    22e0:	aaa56593          	ori	a1,a0,-1366
    22e4:	48b22a23          	sw	a1,1172(tp) # 494 <offset+0x42c>

000022e8 <inst_316>:

inst_316:
// rs1_val==1717986919 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666667, 0x5, x4, 1176, x5)
    22e8:	66666537          	lui	a0,0x66666
    22ec:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66661663>
    22f0:	00556593          	ori	a1,a0,5
    22f4:	48b22c23          	sw	a1,1176(tp) # 498 <offset+0x430>

000022f8 <inst_317>:

inst_317:
// rs1_val==1717986919 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x66666777, 0x66666667, 0x333, x4, 1180, x5)
    22f8:	66666537          	lui	a0,0x66666
    22fc:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66661663>
    2300:	33356593          	ori	a1,a0,819
    2304:	48b22e23          	sw	a1,1180(tp) # 49c <offset+0x434>

00002308 <inst_318>:

inst_318:
// rs1_val==1717986919 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666667, 0x666, x4, 1184, x5)
    2308:	66666537          	lui	a0,0x66666
    230c:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66661663>
    2310:	66656593          	ori	a1,a0,1638
    2314:	4ab22023          	sw	a1,1184(tp) # 4a0 <offset+0x438>

00002318 <inst_319>:

inst_319:
// rs1_val==1717986919 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xfffffff7, 0x66666667, -0x2d, x4, 1188, x5)
    2318:	66666537          	lui	a0,0x66666
    231c:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66661663>
    2320:	fd356593          	ori	a1,a0,-45
    2324:	4ab22223          	sw	a1,1188(tp) # 4a4 <offset+0x43c>

00002328 <inst_320>:

inst_320:
// rs1_val==1717986919 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x6666666f, 0x66666667, 0x2d, x4, 1192, x5)
    2328:	66666537          	lui	a0,0x66666
    232c:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66661663>
    2330:	02d56593          	ori	a1,a0,45
    2334:	4ab22423          	sw	a1,1192(tp) # 4a8 <offset+0x440>

00002338 <inst_321>:

inst_321:
// rs1_val==1717986919 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666667, 0x2, x4, 1196, x5)
    2338:	66666537          	lui	a0,0x66666
    233c:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66661663>
    2340:	00256593          	ori	a1,a0,2
    2344:	4ab22623          	sw	a1,1196(tp) # 4ac <offset+0x444>

00002348 <inst_322>:

inst_322:
// rs1_val==1717986919 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x66666777, 0x66666667, 0x554, x4, 1200, x5)
    2348:	66666537          	lui	a0,0x66666
    234c:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66661663>
    2350:	55456593          	ori	a1,a0,1364
    2354:	4ab22823          	sw	a1,1200(tp) # 4b0 <offset+0x448>

00002358 <inst_323>:

inst_323:
// rs1_val==1717986919 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666667, 0x0, x4, 1204, x5)
    2358:	66666537          	lui	a0,0x66666
    235c:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66661663>
    2360:	00056593          	ori	a1,a0,0
    2364:	4ab22a23          	sw	a1,1204(tp) # 4b4 <offset+0x44c>

00002368 <inst_324>:

inst_324:
// rs1_val==1717986919 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666667, 0x4, x4, 1208, x5)
    2368:	66666537          	lui	a0,0x66666
    236c:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66661663>
    2370:	00456593          	ori	a1,a0,4
    2374:	4ab22c23          	sw	a1,1208(tp) # 4b8 <offset+0x450>

00002378 <inst_325>:

inst_325:
// rs1_val==1717986919 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x66666777, 0x66666667, 0x332, x4, 1212, x5)
    2378:	66666537          	lui	a0,0x66666
    237c:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66661663>
    2380:	33256593          	ori	a1,a0,818
    2384:	4ab22e23          	sw	a1,1212(tp) # 4bc <offset+0x454>

00002388 <inst_326>:

inst_326:
// rs1_val==1717986919 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666667, 0x665, x4, 1216, x5)
    2388:	66666537          	lui	a0,0x66666
    238c:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66661663>
    2390:	66556593          	ori	a1,a0,1637
    2394:	4cb22023          	sw	a1,1216(tp) # 4c0 <offset+0x458>

00002398 <inst_327>:

inst_327:
// rs1_val==1717986919 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x6666666f, 0x66666667, 0x2c, x4, 1220, x5)
    2398:	66666537          	lui	a0,0x66666
    239c:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66661663>
    23a0:	02c56593          	ori	a1,a0,44
    23a4:	4cb22223          	sw	a1,1220(tp) # 4c4 <offset+0x45c>

000023a8 <inst_328>:

inst_328:
// rs1_val==1717986919 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x66666777, 0x66666667, 0x556, x4, 1224, x5)
    23a8:	66666537          	lui	a0,0x66666
    23ac:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66661663>
    23b0:	55656593          	ori	a1,a0,1366
    23b4:	4cb22423          	sw	a1,1224(tp) # 4c8 <offset+0x460>

000023b8 <inst_329>:

inst_329:
// rs1_val==1717986919 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffeef, 0x66666667, -0x555, x4, 1228, x5)
    23b8:	66666537          	lui	a0,0x66666
    23bc:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66661663>
    23c0:	aab56593          	ori	a1,a0,-1365
    23c4:	4cb22623          	sw	a1,1228(tp) # 4cc <offset+0x464>

000023c8 <inst_330>:

inst_330:
// rs1_val==1717986919 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666667, 0x6, x4, 1232, x5)
    23c8:	66666537          	lui	a0,0x66666
    23cc:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66661663>
    23d0:	00656593          	ori	a1,a0,6
    23d4:	4cb22823          	sw	a1,1232(tp) # 4d0 <offset+0x468>

000023d8 <inst_331>:

inst_331:
// rs1_val==1717986919 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x66666777, 0x66666667, 0x334, x4, 1236, x5)
    23d8:	66666537          	lui	a0,0x66666
    23dc:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66661663>
    23e0:	33456593          	ori	a1,a0,820
    23e4:	4cb22a23          	sw	a1,1236(tp) # 4d4 <offset+0x46c>

000023e8 <inst_332>:

inst_332:
// rs1_val==1717986919 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666667, 0x667, x4, 1240, x5)
    23e8:	66666537          	lui	a0,0x66666
    23ec:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66661663>
    23f0:	66756593          	ori	a1,a0,1639
    23f4:	4cb22c23          	sw	a1,1240(tp) # 4d8 <offset+0x470>

000023f8 <inst_333>:

inst_333:
// rs1_val==1717986919 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xfffffff7, 0x66666667, -0x2c, x4, 1244, x5)
    23f8:	66666537          	lui	a0,0x66666
    23fc:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66661663>
    2400:	fd456593          	ori	a1,a0,-44
    2404:	4cb22e23          	sw	a1,1244(tp) # 4dc <offset+0x474>

00002408 <inst_334>:

inst_334:
// rs1_val==1717986919 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x6666666f, 0x66666667, 0x2e, x4, 1248, x5)
    2408:	66666537          	lui	a0,0x66666
    240c:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66661663>
    2410:	02e56593          	ori	a1,a0,46
    2414:	4eb22023          	sw	a1,1248(tp) # 4e0 <offset+0x478>

00002418 <inst_335>:

inst_335:
// rs1_val==-46339 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0xffff4aff, -0xb503, 0x3, x4, 1252, x5)
    2418:	ffff5537          	lui	a0,0xffff5
    241c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffefaf9>
    2420:	00356593          	ori	a1,a0,3
    2424:	4eb22223          	sw	a1,1252(tp) # 4e4 <offset+0x47c>

00002428 <inst_336>:

inst_336:
// rs1_val==-46339 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0xffff4ffd, -0xb503, 0x555, x4, 1256, x5)
    2428:	ffff5537          	lui	a0,0xffff5
    242c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffefaf9>
    2430:	55556593          	ori	a1,a0,1365
    2434:	4eb22423          	sw	a1,1256(tp) # 4e8 <offset+0x480>

00002438 <inst_337>:

inst_337:
// rs1_val==-46339 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffaff, -0xb503, -0x556, x4, 1260, x5)
    2438:	ffff5537          	lui	a0,0xffff5
    243c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffefaf9>
    2440:	aaa56593          	ori	a1,a0,-1366
    2444:	4eb22623          	sw	a1,1260(tp) # 4ec <offset+0x484>

00002448 <inst_338>:

inst_338:
// rs1_val==-46339 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0xffff4afd, -0xb503, 0x5, x4, 1264, x5)
    2448:	ffff5537          	lui	a0,0xffff5
    244c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffefaf9>
    2450:	00556593          	ori	a1,a0,5
    2454:	4eb22823          	sw	a1,1264(tp) # 4f0 <offset+0x488>

00002458 <inst_339>:

inst_339:
// rs1_val==-46339 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0xffff4bff, -0xb503, 0x333, x4, 1268, x5)
    2458:	ffff5537          	lui	a0,0xffff5
    245c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffefaf9>
    2460:	33356593          	ori	a1,a0,819
    2464:	4eb22a23          	sw	a1,1268(tp) # 4f4 <offset+0x48c>

00002468 <inst_340>:

inst_340:
// rs1_val==-46339 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0xffff4eff, -0xb503, 0x666, x4, 1272, x5)
    2468:	ffff5537          	lui	a0,0xffff5
    246c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffefaf9>
    2470:	66656593          	ori	a1,a0,1638
    2474:	4eb22c23          	sw	a1,1272(tp) # 4f8 <offset+0x490>

00002478 <inst_341>:

inst_341:
// rs1_val==-46339 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0xb503, -0x2d, x4, 1276, x5)
    2478:	ffff5537          	lui	a0,0xffff5
    247c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffefaf9>
    2480:	fd356593          	ori	a1,a0,-45
    2484:	4eb22e23          	sw	a1,1276(tp) # 4fc <offset+0x494>

00002488 <inst_342>:

inst_342:
// rs1_val==-46339 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0xffff4afd, -0xb503, 0x2d, x4, 1280, x5)
    2488:	ffff5537          	lui	a0,0xffff5
    248c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffefaf9>
    2490:	02d56593          	ori	a1,a0,45
    2494:	50b22023          	sw	a1,1280(tp) # 500 <offset+0x498>

00002498 <inst_343>:

inst_343:
// rs1_val==-46339 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0xffff4aff, -0xb503, 0x2, x4, 1284, x5)
    2498:	ffff5537          	lui	a0,0xffff5
    249c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffefaf9>
    24a0:	00256593          	ori	a1,a0,2
    24a4:	50b22223          	sw	a1,1284(tp) # 504 <offset+0x49c>

000024a8 <inst_344>:

inst_344:
// rs1_val==-46339 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0xffff4ffd, -0xb503, 0x554, x4, 1288, x5)
    24a8:	ffff5537          	lui	a0,0xffff5
    24ac:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffefaf9>
    24b0:	55456593          	ori	a1,a0,1364
    24b4:	50b22423          	sw	a1,1288(tp) # 508 <offset+0x4a0>

000024b8 <inst_345>:

inst_345:
// rs1_val==-46339 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0xffff4afd, -0xb503, 0x0, x4, 1292, x5)
    24b8:	ffff5537          	lui	a0,0xffff5
    24bc:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffefaf9>
    24c0:	00056593          	ori	a1,a0,0
    24c4:	50b22623          	sw	a1,1292(tp) # 50c <offset+0x4a4>

000024c8 <inst_346>:

inst_346:
// rs1_val==-46339 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0xffff4afd, -0xb503, 0x4, x4, 1296, x5)
    24c8:	ffff5537          	lui	a0,0xffff5
    24cc:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffefaf9>
    24d0:	00456593          	ori	a1,a0,4
    24d4:	50b22823          	sw	a1,1296(tp) # 510 <offset+0x4a8>

000024d8 <inst_347>:

inst_347:
// rs1_val==-46339 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0xffff4bff, -0xb503, 0x332, x4, 1300, x5)
    24d8:	ffff5537          	lui	a0,0xffff5
    24dc:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffefaf9>
    24e0:	33256593          	ori	a1,a0,818
    24e4:	50b22a23          	sw	a1,1300(tp) # 514 <offset+0x4ac>

000024e8 <inst_348>:

inst_348:
// rs1_val==-46339 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0xffff4efd, -0xb503, 0x665, x4, 1304, x5)
    24e8:	ffff5537          	lui	a0,0xffff5
    24ec:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffefaf9>
    24f0:	66556593          	ori	a1,a0,1637
    24f4:	50b22c23          	sw	a1,1304(tp) # 518 <offset+0x4b0>

000024f8 <inst_349>:

inst_349:
// rs1_val==-46339 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0xffff4afd, -0xb503, 0x2c, x4, 1308, x5)
    24f8:	ffff5537          	lui	a0,0xffff5
    24fc:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffefaf9>
    2500:	02c56593          	ori	a1,a0,44
    2504:	50b22e23          	sw	a1,1308(tp) # 51c <offset+0x4b4>

00002508 <inst_350>:

inst_350:
// rs1_val==-46339 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0xffff4fff, -0xb503, 0x556, x4, 1312, x5)
    2508:	ffff5537          	lui	a0,0xffff5
    250c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffefaf9>
    2510:	55656593          	ori	a1,a0,1366
    2514:	52b22023          	sw	a1,1312(tp) # 520 <offset+0x4b8>

00002518 <inst_351>:

inst_351:
// rs1_val==-46339 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffaff, -0xb503, -0x555, x4, 1316, x5)
    2518:	ffff5537          	lui	a0,0xffff5
    251c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffefaf9>
    2520:	aab56593          	ori	a1,a0,-1365
    2524:	52b22223          	sw	a1,1316(tp) # 524 <offset+0x4bc>

00002528 <inst_352>:

inst_352:
// rs1_val==-46339 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0xffff4aff, -0xb503, 0x6, x4, 1320, x5)
    2528:	ffff5537          	lui	a0,0xffff5
    252c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffefaf9>
    2530:	00656593          	ori	a1,a0,6
    2534:	52b22423          	sw	a1,1320(tp) # 528 <offset+0x4c0>

00002538 <inst_353>:

inst_353:
// rs1_val==-46339 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0xffff4bfd, -0xb503, 0x334, x4, 1324, x5)
    2538:	ffff5537          	lui	a0,0xffff5
    253c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffefaf9>
    2540:	33456593          	ori	a1,a0,820
    2544:	52b22623          	sw	a1,1324(tp) # 52c <offset+0x4c4>

00002548 <inst_354>:

inst_354:
// rs1_val==-46339 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0xffff4eff, -0xb503, 0x667, x4, 1328, x5)
    2548:	ffff5537          	lui	a0,0xffff5
    254c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffefaf9>
    2550:	66756593          	ori	a1,a0,1639
    2554:	52b22823          	sw	a1,1328(tp) # 530 <offset+0x4c8>

00002558 <inst_355>:

inst_355:
// rs1_val==-46339 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xfffffffd, -0xb503, -0x2c, x4, 1332, x5)
    2558:	ffff5537          	lui	a0,0xffff5
    255c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffefaf9>
    2560:	fd456593          	ori	a1,a0,-44
    2564:	52b22a23          	sw	a1,1332(tp) # 534 <offset+0x4cc>

00002568 <inst_356>:

inst_356:
// rs1_val==-46339 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0xffff4aff, -0xb503, 0x2e, x4, 1336, x5)
    2568:	ffff5537          	lui	a0,0xffff5
    256c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xfffefaf9>
    2570:	02e56593          	ori	a1,a0,46
    2574:	52b22c23          	sw	a1,1336(tp) # 538 <offset+0x4d0>

00002578 <inst_357>:

inst_357:
// rs1_val==46341 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0xb507, 0xb505, 0x3, x4, 1340, x5)
    2578:	0000b537          	lui	a0,0xb
    257c:	50550513          	addi	a0,a0,1285 # b505 <_end+0x6501>
    2580:	00356593          	ori	a1,a0,3
    2584:	52b22e23          	sw	a1,1340(tp) # 53c <offset+0x4d4>

00002588 <inst_358>:

inst_358:
// rs1_val==46341 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0xb555, 0xb505, 0x555, x4, 1344, x5)
    2588:	0000b537          	lui	a0,0xb
    258c:	50550513          	addi	a0,a0,1285 # b505 <_end+0x6501>
    2590:	55556593          	ori	a1,a0,1365
    2594:	54b22023          	sw	a1,1344(tp) # 540 <offset+0x4d8>

00002598 <inst_359>:

inst_359:
// rs1_val==46341 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xffffffaf, 0xb505, -0x556, x4, 1348, x5)
    2598:	0000b537          	lui	a0,0xb
    259c:	50550513          	addi	a0,a0,1285 # b505 <_end+0x6501>
    25a0:	aaa56593          	ori	a1,a0,-1366
    25a4:	54b22223          	sw	a1,1348(tp) # 544 <offset+0x4dc>

000025a8 <inst_360>:

inst_360:
// rs1_val==46341 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0xb505, 0xb505, 0x5, x4, 1352, x5)
    25a8:	0000b537          	lui	a0,0xb
    25ac:	50550513          	addi	a0,a0,1285 # b505 <_end+0x6501>
    25b0:	00556593          	ori	a1,a0,5
    25b4:	54b22423          	sw	a1,1352(tp) # 548 <offset+0x4e0>

000025b8 <inst_361>:

inst_361:
// rs1_val==46341 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0xb737, 0xb505, 0x333, x4, 1356, x5)
    25b8:	0000b537          	lui	a0,0xb
    25bc:	50550513          	addi	a0,a0,1285 # b505 <_end+0x6501>
    25c0:	33356593          	ori	a1,a0,819
    25c4:	54b22623          	sw	a1,1356(tp) # 54c <offset+0x4e4>

000025c8 <inst_362>:

inst_362:
// rs1_val==46341 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0xb767, 0xb505, 0x666, x4, 1360, x5)
    25c8:	0000b537          	lui	a0,0xb
    25cc:	50550513          	addi	a0,a0,1285 # b505 <_end+0x6501>
    25d0:	66656593          	ori	a1,a0,1638
    25d4:	54b22823          	sw	a1,1360(tp) # 550 <offset+0x4e8>

000025d8 <inst_363>:

inst_363:
// rs1_val==46341 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd7, 0xb505, -0x2d, x4, 1364, x5)
    25d8:	0000b537          	lui	a0,0xb
    25dc:	50550513          	addi	a0,a0,1285 # b505 <_end+0x6501>
    25e0:	fd356593          	ori	a1,a0,-45
    25e4:	54b22a23          	sw	a1,1364(tp) # 554 <offset+0x4ec>

000025e8 <inst_364>:

inst_364:
// rs1_val==46341 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0xb52d, 0xb505, 0x2d, x4, 1368, x5)
    25e8:	0000b537          	lui	a0,0xb
    25ec:	50550513          	addi	a0,a0,1285 # b505 <_end+0x6501>
    25f0:	02d56593          	ori	a1,a0,45
    25f4:	54b22c23          	sw	a1,1368(tp) # 558 <offset+0x4f0>

000025f8 <inst_365>:

inst_365:
// rs1_val==46341 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0xb507, 0xb505, 0x2, x4, 1372, x5)
    25f8:	0000b537          	lui	a0,0xb
    25fc:	50550513          	addi	a0,a0,1285 # b505 <_end+0x6501>
    2600:	00256593          	ori	a1,a0,2
    2604:	54b22e23          	sw	a1,1372(tp) # 55c <offset+0x4f4>

00002608 <inst_366>:

inst_366:
// rs1_val==46341 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0xb555, 0xb505, 0x554, x4, 1376, x5)
    2608:	0000b537          	lui	a0,0xb
    260c:	50550513          	addi	a0,a0,1285 # b505 <_end+0x6501>
    2610:	55456593          	ori	a1,a0,1364
    2614:	56b22023          	sw	a1,1376(tp) # 560 <offset+0x4f8>

00002618 <inst_367>:

inst_367:
// rs1_val==46341 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0xb505, 0xb505, 0x0, x4, 1380, x5)
    2618:	0000b537          	lui	a0,0xb
    261c:	50550513          	addi	a0,a0,1285 # b505 <_end+0x6501>
    2620:	00056593          	ori	a1,a0,0
    2624:	56b22223          	sw	a1,1380(tp) # 564 <offset+0x4fc>

00002628 <inst_368>:

inst_368:
// rs1_val==46341 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0xb505, 0xb505, 0x4, x4, 1384, x5)
    2628:	0000b537          	lui	a0,0xb
    262c:	50550513          	addi	a0,a0,1285 # b505 <_end+0x6501>
    2630:	00456593          	ori	a1,a0,4
    2634:	56b22423          	sw	a1,1384(tp) # 568 <offset+0x500>

00002638 <inst_369>:

inst_369:
// rs1_val==46341 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0xb737, 0xb505, 0x332, x4, 1388, x5)
    2638:	0000b537          	lui	a0,0xb
    263c:	50550513          	addi	a0,a0,1285 # b505 <_end+0x6501>
    2640:	33256593          	ori	a1,a0,818
    2644:	56b22623          	sw	a1,1388(tp) # 56c <offset+0x504>

00002648 <inst_370>:

inst_370:
// rs1_val==46341 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0xb765, 0xb505, 0x665, x4, 1392, x5)
    2648:	0000b537          	lui	a0,0xb
    264c:	50550513          	addi	a0,a0,1285 # b505 <_end+0x6501>
    2650:	66556593          	ori	a1,a0,1637
    2654:	56b22823          	sw	a1,1392(tp) # 570 <offset+0x508>

00002658 <inst_371>:

inst_371:
// rs1_val==46341 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0xb52d, 0xb505, 0x2c, x4, 1396, x5)
    2658:	0000b537          	lui	a0,0xb
    265c:	50550513          	addi	a0,a0,1285 # b505 <_end+0x6501>
    2660:	02c56593          	ori	a1,a0,44
    2664:	56b22a23          	sw	a1,1396(tp) # 574 <offset+0x50c>

00002668 <inst_372>:

inst_372:
// rs1_val==46341 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0xb557, 0xb505, 0x556, x4, 1400, x5)
    2668:	0000b537          	lui	a0,0xb
    266c:	50550513          	addi	a0,a0,1285 # b505 <_end+0x6501>
    2670:	55656593          	ori	a1,a0,1366
    2674:	56b22c23          	sw	a1,1400(tp) # 578 <offset+0x510>

00002678 <inst_373>:

inst_373:
// rs1_val==46341 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xffffffaf, 0xb505, -0x555, x4, 1404, x5)
    2678:	0000b537          	lui	a0,0xb
    267c:	50550513          	addi	a0,a0,1285 # b505 <_end+0x6501>
    2680:	aab56593          	ori	a1,a0,-1365
    2684:	56b22e23          	sw	a1,1404(tp) # 57c <offset+0x514>

00002688 <inst_374>:

inst_374:
// rs1_val==46341 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0xb507, 0xb505, 0x6, x4, 1408, x5)
    2688:	0000b537          	lui	a0,0xb
    268c:	50550513          	addi	a0,a0,1285 # b505 <_end+0x6501>
    2690:	00656593          	ori	a1,a0,6
    2694:	58b22023          	sw	a1,1408(tp) # 580 <offset+0x518>

00002698 <inst_375>:

inst_375:
// rs1_val==46341 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0xb735, 0xb505, 0x334, x4, 1412, x5)
    2698:	0000b537          	lui	a0,0xb
    269c:	50550513          	addi	a0,a0,1285 # b505 <_end+0x6501>
    26a0:	33456593          	ori	a1,a0,820
    26a4:	58b22223          	sw	a1,1412(tp) # 584 <offset+0x51c>

000026a8 <inst_376>:

inst_376:
// rs1_val==46341 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0xb767, 0xb505, 0x667, x4, 1416, x5)
    26a8:	0000b537          	lui	a0,0xb
    26ac:	50550513          	addi	a0,a0,1285 # b505 <_end+0x6501>
    26b0:	66756593          	ori	a1,a0,1639
    26b4:	58b22423          	sw	a1,1416(tp) # 588 <offset+0x520>

000026b8 <inst_377>:

inst_377:
// rs1_val==46341 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd5, 0xb505, -0x2c, x4, 1420, x5)
    26b8:	0000b537          	lui	a0,0xb
    26bc:	50550513          	addi	a0,a0,1285 # b505 <_end+0x6501>
    26c0:	fd456593          	ori	a1,a0,-44
    26c4:	58b22623          	sw	a1,1420(tp) # 58c <offset+0x524>

000026c8 <inst_378>:

inst_378:
// rs1_val==46341 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0xb52f, 0xb505, 0x2e, x4, 1424, x5)
    26c8:	0000b537          	lui	a0,0xb
    26cc:	50550513          	addi	a0,a0,1285 # b505 <_end+0x6501>
    26d0:	02e56593          	ori	a1,a0,46
    26d4:	58b22823          	sw	a1,1424(tp) # 590 <offset+0x528>

000026d8 <inst_379>:

inst_379:
// rs1_val==0 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x2d, 0x0, 0x2d, x4, 1428, x5)
    26d8:	00000513          	li	a0,0
    26dc:	02d56593          	ori	a1,a0,45
    26e0:	58b22a23          	sw	a1,1428(tp) # 594 <offset+0x52c>

000026e4 <inst_380>:

inst_380:
// rs1_val==0 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x2, 0x0, 0x2, x4, 1432, x5)
    26e4:	00000513          	li	a0,0
    26e8:	00256593          	ori	a1,a0,2
    26ec:	58b22c23          	sw	a1,1432(tp) # 598 <offset+0x530>

000026f0 <inst_381>:

inst_381:
// rs1_val==0 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x554, 0x0, 0x554, x4, 1436, x5)
    26f0:	00000513          	li	a0,0
    26f4:	55456593          	ori	a1,a0,1364
    26f8:	58b22e23          	sw	a1,1436(tp) # 59c <offset+0x534>

000026fc <inst_382>:

inst_382:
// rs1_val==0 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x4, 0x0, 0x4, x4, 1440, x5)
    26fc:	00000513          	li	a0,0
    2700:	00456593          	ori	a1,a0,4
    2704:	5ab22023          	sw	a1,1440(tp) # 5a0 <offset+0x538>

00002708 <inst_383>:

inst_383:
// rs1_val==0 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x332, 0x0, 0x332, x4, 1444, x5)
    2708:	00000513          	li	a0,0
    270c:	33256593          	ori	a1,a0,818
    2710:	5ab22223          	sw	a1,1444(tp) # 5a4 <offset+0x53c>

00002714 <inst_384>:

inst_384:
// rs1_val==0 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x665, 0x0, 0x665, x4, 1448, x5)
    2714:	00000513          	li	a0,0
    2718:	66556593          	ori	a1,a0,1637
    271c:	5ab22423          	sw	a1,1448(tp) # 5a8 <offset+0x540>

00002720 <inst_385>:

inst_385:
// rs1_val==0 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x2c, 0x0, 0x2c, x4, 1452, x5)
    2720:	00000513          	li	a0,0
    2724:	02c56593          	ori	a1,a0,44
    2728:	5ab22623          	sw	a1,1452(tp) # 5ac <offset+0x544>

0000272c <inst_386>:

inst_386:
// rs1_val==0 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x556, 0x0, 0x556, x4, 1456, x5)
    272c:	00000513          	li	a0,0
    2730:	55656593          	ori	a1,a0,1366
    2734:	5ab22823          	sw	a1,1456(tp) # 5b0 <offset+0x548>

00002738 <inst_387>:

inst_387:
// rs1_val==0 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffaab, 0x0, -0x555, x4, 1460, x5)
    2738:	00000513          	li	a0,0
    273c:	aab56593          	ori	a1,a0,-1365
    2740:	5ab22a23          	sw	a1,1460(tp) # 5b4 <offset+0x54c>

00002744 <inst_388>:

inst_388:
// rs1_val==0 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x6, 0x0, 0x6, x4, 1464, x5)
    2744:	00000513          	li	a0,0
    2748:	00656593          	ori	a1,a0,6
    274c:	5ab22c23          	sw	a1,1464(tp) # 5b8 <offset+0x550>

00002750 <inst_389>:

inst_389:
// rs1_val==0 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x334, 0x0, 0x334, x4, 1468, x5)
    2750:	00000513          	li	a0,0
    2754:	33456593          	ori	a1,a0,820
    2758:	5ab22e23          	sw	a1,1468(tp) # 5bc <offset+0x554>

0000275c <inst_390>:

inst_390:
// rs1_val==0 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x667, 0x0, 0x667, x4, 1472, x5)
    275c:	00000513          	li	a0,0
    2760:	66756593          	ori	a1,a0,1639
    2764:	5cb22023          	sw	a1,1472(tp) # 5c0 <offset+0x558>

00002768 <inst_391>:

inst_391:
// rs1_val==0 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd4, 0x0, -0x2c, x4, 1476, x5)
    2768:	00000513          	li	a0,0
    276c:	fd456593          	ori	a1,a0,-44
    2770:	5cb22223          	sw	a1,1476(tp) # 5c4 <offset+0x55c>

00002774 <inst_392>:

inst_392:
// rs1_val==0 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x2e, 0x0, 0x2e, x4, 1480, x5)
    2774:	00000513          	li	a0,0
    2778:	02e56593          	ori	a1,a0,46
    277c:	5cb22423          	sw	a1,1480(tp) # 5c8 <offset+0x560>

00002780 <inst_393>:

inst_393:
// rs1_val==4 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x7, 0x4, 0x3, x4, 1484, x5)
    2780:	00400513          	li	a0,4
    2784:	00356593          	ori	a1,a0,3
    2788:	5cb22623          	sw	a1,1484(tp) # 5cc <offset+0x564>

0000278c <inst_394>:

inst_394:
// rs1_val==4 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x555, 0x4, 0x555, x4, 1488, x5)
    278c:	00400513          	li	a0,4
    2790:	55556593          	ori	a1,a0,1365
    2794:	5cb22823          	sw	a1,1488(tp) # 5d0 <offset+0x568>

00002798 <inst_395>:

inst_395:
// rs1_val==4 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffaae, 0x4, -0x556, x4, 1492, x5)
    2798:	00400513          	li	a0,4
    279c:	aaa56593          	ori	a1,a0,-1366
    27a0:	5cb22a23          	sw	a1,1492(tp) # 5d4 <offset+0x56c>

000027a4 <inst_396>:

inst_396:
// rs1_val==4 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x337, 0x4, 0x333, x4, 1496, x5)
    27a4:	00400513          	li	a0,4
    27a8:	33356593          	ori	a1,a0,819
    27ac:	5cb22c23          	sw	a1,1496(tp) # 5d8 <offset+0x570>

000027b0 <inst_397>:

inst_397:
// rs1_val==4 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x666, 0x4, 0x666, x4, 1500, x5)
    27b0:	00400513          	li	a0,4
    27b4:	66656593          	ori	a1,a0,1638
    27b8:	5cb22e23          	sw	a1,1500(tp) # 5dc <offset+0x574>

000027bc <inst_398>:

inst_398:
// rs1_val==4 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd7, 0x4, -0x2d, x4, 1504, x5)
    27bc:	00400513          	li	a0,4
    27c0:	fd356593          	ori	a1,a0,-45
    27c4:	5eb22023          	sw	a1,1504(tp) # 5e0 <offset+0x578>

000027c8 <inst_399>:

inst_399:
// rs1_val==4 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x2d, 0x4, 0x2d, x4, 1508, x5)
    27c8:	00400513          	li	a0,4
    27cc:	02d56593          	ori	a1,a0,45
    27d0:	5eb22223          	sw	a1,1508(tp) # 5e4 <offset+0x57c>

000027d4 <inst_400>:

inst_400:
// rs1_val==4 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x6, 0x4, 0x2, x4, 1512, x5)
    27d4:	00400513          	li	a0,4
    27d8:	00256593          	ori	a1,a0,2
    27dc:	5eb22423          	sw	a1,1512(tp) # 5e8 <offset+0x580>

000027e0 <inst_401>:

inst_401:
// rs1_val==4 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x554, 0x4, 0x554, x4, 1516, x5)
    27e0:	00400513          	li	a0,4
    27e4:	55456593          	ori	a1,a0,1364
    27e8:	5eb22623          	sw	a1,1516(tp) # 5ec <offset+0x584>

000027ec <inst_402>:

inst_402:
// rs1_val==4 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x4, 0x4, 0x0, x4, 1520, x5)
    27ec:	00400513          	li	a0,4
    27f0:	00056593          	ori	a1,a0,0
    27f4:	5eb22823          	sw	a1,1520(tp) # 5f0 <offset+0x588>

000027f8 <inst_403>:

inst_403:
// rs1_val==4 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x4, 0x4, 0x4, x4, 1524, x5)
    27f8:	00400513          	li	a0,4
    27fc:	00456593          	ori	a1,a0,4
    2800:	5eb22a23          	sw	a1,1524(tp) # 5f4 <offset+0x58c>

00002804 <inst_404>:

inst_404:
// rs1_val==4 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x336, 0x4, 0x332, x4, 1528, x5)
    2804:	00400513          	li	a0,4
    2808:	33256593          	ori	a1,a0,818
    280c:	5eb22c23          	sw	a1,1528(tp) # 5f8 <offset+0x590>

00002810 <inst_405>:

inst_405:
// rs1_val==4 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x665, 0x4, 0x665, x4, 1532, x5)
    2810:	00400513          	li	a0,4
    2814:	66556593          	ori	a1,a0,1637
    2818:	5eb22e23          	sw	a1,1532(tp) # 5fc <offset+0x594>

0000281c <inst_406>:

inst_406:
// rs1_val==4 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x2c, 0x4, 0x2c, x4, 1536, x5)
    281c:	00400513          	li	a0,4
    2820:	02c56593          	ori	a1,a0,44
    2824:	60b22023          	sw	a1,1536(tp) # 600 <offset+0x598>

00002828 <inst_407>:

inst_407:
// rs1_val==4 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x556, 0x4, 0x556, x4, 1540, x5)
    2828:	00400513          	li	a0,4
    282c:	55656593          	ori	a1,a0,1366
    2830:	60b22223          	sw	a1,1540(tp) # 604 <offset+0x59c>

00002834 <inst_408>:

inst_408:
// rs1_val==4 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffaaf, 0x4, -0x555, x4, 1544, x5)
    2834:	00400513          	li	a0,4
    2838:	aab56593          	ori	a1,a0,-1365
    283c:	60b22423          	sw	a1,1544(tp) # 608 <offset+0x5a0>

00002840 <inst_409>:

inst_409:
// rs1_val==4 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x6, 0x4, 0x6, x4, 1548, x5)
    2840:	00400513          	li	a0,4
    2844:	00656593          	ori	a1,a0,6
    2848:	60b22623          	sw	a1,1548(tp) # 60c <offset+0x5a4>

0000284c <inst_410>:

inst_410:
// rs1_val==4 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x334, 0x4, 0x334, x4, 1552, x5)
    284c:	00400513          	li	a0,4
    2850:	33456593          	ori	a1,a0,820
    2854:	60b22823          	sw	a1,1552(tp) # 610 <offset+0x5a8>

00002858 <inst_411>:

inst_411:
// rs1_val==4 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x667, 0x4, 0x667, x4, 1556, x5)
    2858:	00400513          	li	a0,4
    285c:	66756593          	ori	a1,a0,1639
    2860:	60b22a23          	sw	a1,1556(tp) # 614 <offset+0x5ac>

00002864 <inst_412>:

inst_412:
// rs1_val==4 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd4, 0x4, -0x2c, x4, 1560, x5)
    2864:	00400513          	li	a0,4
    2868:	fd456593          	ori	a1,a0,-44
    286c:	60b22c23          	sw	a1,1560(tp) # 618 <offset+0x5b0>

00002870 <inst_413>:

inst_413:
// rs1_val==4 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x2e, 0x4, 0x2e, x4, 1564, x5)
    2870:	00400513          	li	a0,4
    2874:	02e56593          	ori	a1,a0,46
    2878:	60b22e23          	sw	a1,1564(tp) # 61c <offset+0x5b4>

0000287c <inst_414>:

inst_414:
// rs1_val==858993458 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x33333333, 0x33333332, 0x3, x4, 1568, x5)
    287c:	33333537          	lui	a0,0x33333
    2880:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332e32e>
    2884:	00356593          	ori	a1,a0,3
    2888:	62b22023          	sw	a1,1568(tp) # 620 <offset+0x5b8>

0000288c <inst_415>:

inst_415:
// rs1_val==858993458 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x33333777, 0x33333332, 0x555, x4, 1572, x5)
    288c:	33333537          	lui	a0,0x33333
    2890:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332e32e>
    2894:	55556593          	ori	a1,a0,1365
    2898:	62b22223          	sw	a1,1572(tp) # 624 <offset+0x5bc>

0000289c <inst_416>:

inst_416:
// rs1_val==858993458 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffbba, 0x33333332, -0x556, x4, 1576, x5)
    289c:	33333537          	lui	a0,0x33333
    28a0:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332e32e>
    28a4:	aaa56593          	ori	a1,a0,-1366
    28a8:	62b22423          	sw	a1,1576(tp) # 628 <offset+0x5c0>

000028ac <inst_417>:

inst_417:
// rs1_val==858993458 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x33333337, 0x33333332, 0x5, x4, 1580, x5)
    28ac:	33333537          	lui	a0,0x33333
    28b0:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332e32e>
    28b4:	00556593          	ori	a1,a0,5
    28b8:	62b22623          	sw	a1,1580(tp) # 62c <offset+0x5c4>

000028bc <inst_418>:

inst_418:
// rs1_val==858993458 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x33333333, 0x33333332, 0x333, x4, 1584, x5)
    28bc:	33333537          	lui	a0,0x33333
    28c0:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332e32e>
    28c4:	33356593          	ori	a1,a0,819
    28c8:	62b22823          	sw	a1,1584(tp) # 630 <offset+0x5c8>

000028cc <inst_419>:

inst_419:
// rs1_val==858993458 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x33333776, 0x33333332, 0x666, x4, 1588, x5)
    28cc:	33333537          	lui	a0,0x33333
    28d0:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332e32e>
    28d4:	66656593          	ori	a1,a0,1638
    28d8:	62b22a23          	sw	a1,1588(tp) # 634 <offset+0x5cc>

000028dc <inst_420>:

inst_420:
// rs1_val==858993458 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xfffffff3, 0x33333332, -0x2d, x4, 1592, x5)
    28dc:	33333537          	lui	a0,0x33333
    28e0:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332e32e>
    28e4:	fd356593          	ori	a1,a0,-45
    28e8:	62b22c23          	sw	a1,1592(tp) # 638 <offset+0x5d0>

000028ec <inst_421>:

inst_421:
// rs1_val==858993458 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x3333333f, 0x33333332, 0x2d, x4, 1596, x5)
    28ec:	33333537          	lui	a0,0x33333
    28f0:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332e32e>
    28f4:	02d56593          	ori	a1,a0,45
    28f8:	62b22e23          	sw	a1,1596(tp) # 63c <offset+0x5d4>

000028fc <inst_422>:

inst_422:
// rs1_val==858993458 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x33333332, 0x33333332, 0x2, x4, 1600, x5)
    28fc:	33333537          	lui	a0,0x33333
    2900:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332e32e>
    2904:	00256593          	ori	a1,a0,2
    2908:	64b22023          	sw	a1,1600(tp) # 640 <offset+0x5d8>

0000290c <inst_423>:

inst_423:
// rs1_val==858993458 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x33333776, 0x33333332, 0x554, x4, 1604, x5)
    290c:	33333537          	lui	a0,0x33333
    2910:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332e32e>
    2914:	55456593          	ori	a1,a0,1364
    2918:	64b22223          	sw	a1,1604(tp) # 644 <offset+0x5dc>

0000291c <inst_424>:

inst_424:
// rs1_val==858993458 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x33333332, 0x33333332, 0x0, x4, 1608, x5)
    291c:	33333537          	lui	a0,0x33333
    2920:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332e32e>
    2924:	00056593          	ori	a1,a0,0
    2928:	64b22423          	sw	a1,1608(tp) # 648 <offset+0x5e0>

0000292c <inst_425>:

inst_425:
// rs1_val==858993458 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x33333336, 0x33333332, 0x4, x4, 1612, x5)
    292c:	33333537          	lui	a0,0x33333
    2930:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332e32e>
    2934:	00456593          	ori	a1,a0,4
    2938:	64b22623          	sw	a1,1612(tp) # 64c <offset+0x5e4>

0000293c <inst_426>:

inst_426:
// rs1_val==858993458 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x33333332, 0x33333332, 0x332, x4, 1616, x5)
    293c:	33333537          	lui	a0,0x33333
    2940:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332e32e>
    2944:	33256593          	ori	a1,a0,818
    2948:	64b22823          	sw	a1,1616(tp) # 650 <offset+0x5e8>

0000294c <inst_427>:

inst_427:
// rs1_val==858993458 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x33333777, 0x33333332, 0x665, x4, 1620, x5)
    294c:	33333537          	lui	a0,0x33333
    2950:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332e32e>
    2954:	66556593          	ori	a1,a0,1637
    2958:	64b22a23          	sw	a1,1620(tp) # 654 <offset+0x5ec>

0000295c <inst_428>:

inst_428:
// rs1_val==858993458 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x3333333e, 0x33333332, 0x2c, x4, 1624, x5)
    295c:	33333537          	lui	a0,0x33333
    2960:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332e32e>
    2964:	02c56593          	ori	a1,a0,44
    2968:	64b22c23          	sw	a1,1624(tp) # 658 <offset+0x5f0>

0000296c <inst_429>:

inst_429:
// rs1_val==858993458 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x33333776, 0x33333332, 0x556, x4, 1628, x5)
    296c:	33333537          	lui	a0,0x33333
    2970:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332e32e>
    2974:	55656593          	ori	a1,a0,1366
    2978:	64b22e23          	sw	a1,1628(tp) # 65c <offset+0x5f4>

0000297c <inst_430>:

inst_430:
// rs1_val==858993458 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffbbb, 0x33333332, -0x555, x4, 1632, x5)
    297c:	33333537          	lui	a0,0x33333
    2980:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332e32e>
    2984:	aab56593          	ori	a1,a0,-1365
    2988:	66b22023          	sw	a1,1632(tp) # 660 <offset+0x5f8>

0000298c <inst_431>:

inst_431:
// rs1_val==858993458 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x33333336, 0x33333332, 0x6, x4, 1636, x5)
    298c:	33333537          	lui	a0,0x33333
    2990:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332e32e>
    2994:	00656593          	ori	a1,a0,6
    2998:	66b22223          	sw	a1,1636(tp) # 664 <offset+0x5fc>

0000299c <inst_432>:

inst_432:
// rs1_val==858993458 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x33333336, 0x33333332, 0x334, x4, 1640, x5)
    299c:	33333537          	lui	a0,0x33333
    29a0:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332e32e>
    29a4:	33456593          	ori	a1,a0,820
    29a8:	66b22423          	sw	a1,1640(tp) # 668 <offset+0x600>

000029ac <inst_433>:

inst_433:
// rs1_val==858993458 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x33333777, 0x33333332, 0x667, x4, 1644, x5)
    29ac:	33333537          	lui	a0,0x33333
    29b0:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332e32e>
    29b4:	66756593          	ori	a1,a0,1639
    29b8:	66b22623          	sw	a1,1644(tp) # 66c <offset+0x604>

000029bc <inst_434>:

inst_434:
// rs1_val==858993458 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xfffffff6, 0x33333332, -0x2c, x4, 1648, x5)
    29bc:	33333537          	lui	a0,0x33333
    29c0:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332e32e>
    29c4:	fd456593          	ori	a1,a0,-44
    29c8:	66b22823          	sw	a1,1648(tp) # 670 <offset+0x608>

000029cc <inst_435>:

inst_435:
// rs1_val==858993458 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x3333333e, 0x33333332, 0x2e, x4, 1652, x5)
    29cc:	33333537          	lui	a0,0x33333
    29d0:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332e32e>
    29d4:	02e56593          	ori	a1,a0,46
    29d8:	66b22a23          	sw	a1,1652(tp) # 674 <offset+0x60c>

000029dc <inst_436>:

inst_436:
// rs1_val==1717986917 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666665, 0x3, x4, 1656, x5)
    29dc:	66666537          	lui	a0,0x66666
    29e0:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66661661>
    29e4:	00356593          	ori	a1,a0,3
    29e8:	66b22c23          	sw	a1,1656(tp) # 678 <offset+0x610>

000029ec <inst_437>:

inst_437:
// rs1_val==1717986917 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x66666775, 0x66666665, 0x555, x4, 1660, x5)
    29ec:	66666537          	lui	a0,0x66666
    29f0:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66661661>
    29f4:	55556593          	ori	a1,a0,1365
    29f8:	66b22e23          	sw	a1,1660(tp) # 67c <offset+0x614>

000029fc <inst_438>:

inst_438:
// rs1_val==1717986917 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffeef, 0x66666665, -0x556, x4, 1664, x5)
    29fc:	66666537          	lui	a0,0x66666
    2a00:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66661661>
    2a04:	aaa56593          	ori	a1,a0,-1366
    2a08:	68b22023          	sw	a1,1664(tp) # 680 <offset+0x618>

00002a0c <inst_439>:

inst_439:
// rs1_val==1717986917 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x66666665, 0x66666665, 0x5, x4, 1668, x5)
    2a0c:	66666537          	lui	a0,0x66666
    2a10:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66661661>
    2a14:	00556593          	ori	a1,a0,5
    2a18:	68b22223          	sw	a1,1668(tp) # 684 <offset+0x61c>

00002a1c <inst_440>:

inst_440:
// rs1_val==1717986917 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x66666777, 0x66666665, 0x333, x4, 1672, x5)
    2a1c:	66666537          	lui	a0,0x66666
    2a20:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66661661>
    2a24:	33356593          	ori	a1,a0,819
    2a28:	68b22423          	sw	a1,1672(tp) # 688 <offset+0x620>

00002a2c <inst_441>:

inst_441:
// rs1_val==1717986917 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666665, 0x666, x4, 1676, x5)
    2a2c:	66666537          	lui	a0,0x66666
    2a30:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66661661>
    2a34:	66656593          	ori	a1,a0,1638
    2a38:	68b22623          	sw	a1,1676(tp) # 68c <offset+0x624>

00002a3c <inst_442>:

inst_442:
// rs1_val==1717986917 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xfffffff7, 0x66666665, -0x2d, x4, 1680, x5)
    2a3c:	66666537          	lui	a0,0x66666
    2a40:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66661661>
    2a44:	fd356593          	ori	a1,a0,-45
    2a48:	68b22823          	sw	a1,1680(tp) # 690 <offset+0x628>

00002a4c <inst_443>:

inst_443:
// rs1_val==1717986917 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x6666666d, 0x66666665, 0x2d, x4, 1684, x5)
    2a4c:	66666537          	lui	a0,0x66666
    2a50:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66661661>
    2a54:	02d56593          	ori	a1,a0,45
    2a58:	68b22a23          	sw	a1,1684(tp) # 694 <offset+0x62c>

00002a5c <inst_444>:

inst_444:
// rs1_val==1717986917 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666665, 0x2, x4, 1688, x5)
    2a5c:	66666537          	lui	a0,0x66666
    2a60:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66661661>
    2a64:	00256593          	ori	a1,a0,2
    2a68:	68b22c23          	sw	a1,1688(tp) # 698 <offset+0x630>

00002a6c <inst_445>:

inst_445:
// rs1_val==1717986917 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x66666775, 0x66666665, 0x554, x4, 1692, x5)
    2a6c:	66666537          	lui	a0,0x66666
    2a70:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66661661>
    2a74:	55456593          	ori	a1,a0,1364
    2a78:	68b22e23          	sw	a1,1692(tp) # 69c <offset+0x634>

00002a7c <inst_446>:

inst_446:
// rs1_val==1717986917 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x66666665, 0x66666665, 0x0, x4, 1696, x5)
    2a7c:	66666537          	lui	a0,0x66666
    2a80:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66661661>
    2a84:	00056593          	ori	a1,a0,0
    2a88:	6ab22023          	sw	a1,1696(tp) # 6a0 <offset+0x638>

00002a8c <inst_447>:

inst_447:
// rs1_val==1717986917 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x66666665, 0x66666665, 0x4, x4, 1700, x5)
    2a8c:	66666537          	lui	a0,0x66666
    2a90:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66661661>
    2a94:	00456593          	ori	a1,a0,4
    2a98:	6ab22223          	sw	a1,1700(tp) # 6a4 <offset+0x63c>

00002a9c <inst_448>:

inst_448:
// rs1_val==1717986917 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x66666777, 0x66666665, 0x332, x4, 1704, x5)
    2a9c:	66666537          	lui	a0,0x66666
    2aa0:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66661661>
    2aa4:	33256593          	ori	a1,a0,818
    2aa8:	6ab22423          	sw	a1,1704(tp) # 6a8 <offset+0x640>

00002aac <inst_449>:

inst_449:
// rs1_val==1717986917 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x66666665, 0x66666665, 0x665, x4, 1708, x5)
    2aac:	66666537          	lui	a0,0x66666
    2ab0:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66661661>
    2ab4:	66556593          	ori	a1,a0,1637
    2ab8:	6ab22623          	sw	a1,1708(tp) # 6ac <offset+0x644>

00002abc <inst_450>:

inst_450:
// rs1_val==1717986917 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x6666666d, 0x66666665, 0x2c, x4, 1712, x5)
    2abc:	66666537          	lui	a0,0x66666
    2ac0:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66661661>
    2ac4:	02c56593          	ori	a1,a0,44
    2ac8:	6ab22823          	sw	a1,1712(tp) # 6b0 <offset+0x648>

00002acc <inst_451>:

inst_451:
// rs1_val==1717986917 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x66666777, 0x66666665, 0x556, x4, 1716, x5)
    2acc:	66666537          	lui	a0,0x66666
    2ad0:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66661661>
    2ad4:	55656593          	ori	a1,a0,1366
    2ad8:	6ab22a23          	sw	a1,1716(tp) # 6b4 <offset+0x64c>

00002adc <inst_452>:

inst_452:
// rs1_val==1717986917 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffeef, 0x66666665, -0x555, x4, 1720, x5)
    2adc:	66666537          	lui	a0,0x66666
    2ae0:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66661661>
    2ae4:	aab56593          	ori	a1,a0,-1365
    2ae8:	6ab22c23          	sw	a1,1720(tp) # 6b8 <offset+0x650>

00002aec <inst_453>:

inst_453:
// rs1_val==1717986917 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666665, 0x6, x4, 1724, x5)
    2aec:	66666537          	lui	a0,0x66666
    2af0:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66661661>
    2af4:	00656593          	ori	a1,a0,6
    2af8:	6ab22e23          	sw	a1,1724(tp) # 6bc <offset+0x654>

00002afc <inst_454>:

inst_454:
// rs1_val==1717986917 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x66666775, 0x66666665, 0x334, x4, 1728, x5)
    2afc:	66666537          	lui	a0,0x66666
    2b00:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66661661>
    2b04:	33456593          	ori	a1,a0,820
    2b08:	6cb22023          	sw	a1,1728(tp) # 6c0 <offset+0x658>

00002b0c <inst_455>:

inst_455:
// rs1_val==1717986917 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666665, 0x667, x4, 1732, x5)
    2b0c:	66666537          	lui	a0,0x66666
    2b10:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66661661>
    2b14:	66756593          	ori	a1,a0,1639
    2b18:	6cb22223          	sw	a1,1732(tp) # 6c4 <offset+0x65c>

00002b1c <inst_456>:

inst_456:
// rs1_val==1717986917 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xfffffff5, 0x66666665, -0x2c, x4, 1736, x5)
    2b1c:	66666537          	lui	a0,0x66666
    2b20:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66661661>
    2b24:	fd456593          	ori	a1,a0,-44
    2b28:	6cb22423          	sw	a1,1736(tp) # 6c8 <offset+0x660>

00002b2c <inst_457>:

inst_457:
// rs1_val==1717986917 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x6666666f, 0x66666665, 0x2e, x4, 1740, x5)
    2b2c:	66666537          	lui	a0,0x66666
    2b30:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66661661>
    2b34:	02e56593          	ori	a1,a0,46
    2b38:	6cb22623          	sw	a1,1740(tp) # 6cc <offset+0x664>

00002b3c <inst_458>:

inst_458:
// rs1_val==46339 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0xb503, 0xb503, 0x3, x4, 1744, x5)
    2b3c:	0000b537          	lui	a0,0xb
    2b40:	50350513          	addi	a0,a0,1283 # b503 <_end+0x64ff>
    2b44:	00356593          	ori	a1,a0,3
    2b48:	6cb22823          	sw	a1,1744(tp) # 6d0 <offset+0x668>

00002b4c <inst_459>:

inst_459:
// rs1_val==46339 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0xb557, 0xb503, 0x555, x4, 1748, x5)
    2b4c:	0000b537          	lui	a0,0xb
    2b50:	50350513          	addi	a0,a0,1283 # b503 <_end+0x64ff>
    2b54:	55556593          	ori	a1,a0,1365
    2b58:	6cb22a23          	sw	a1,1748(tp) # 6d4 <offset+0x66c>

00002b5c <inst_460>:

inst_460:
// rs1_val==46339 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xffffffab, 0xb503, -0x556, x4, 1752, x5)
    2b5c:	0000b537          	lui	a0,0xb
    2b60:	50350513          	addi	a0,a0,1283 # b503 <_end+0x64ff>
    2b64:	aaa56593          	ori	a1,a0,-1366
    2b68:	6cb22c23          	sw	a1,1752(tp) # 6d8 <offset+0x670>

00002b6c <inst_461>:

inst_461:
// rs1_val==46339 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0xb507, 0xb503, 0x5, x4, 1756, x5)
    2b6c:	0000b537          	lui	a0,0xb
    2b70:	50350513          	addi	a0,a0,1283 # b503 <_end+0x64ff>
    2b74:	00556593          	ori	a1,a0,5
    2b78:	6cb22e23          	sw	a1,1756(tp) # 6dc <offset+0x674>

00002b7c <inst_462>:

inst_462:
// rs1_val==46339 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0xb733, 0xb503, 0x333, x4, 1760, x5)
    2b7c:	0000b537          	lui	a0,0xb
    2b80:	50350513          	addi	a0,a0,1283 # b503 <_end+0x64ff>
    2b84:	33356593          	ori	a1,a0,819
    2b88:	6eb22023          	sw	a1,1760(tp) # 6e0 <offset+0x678>

00002b8c <inst_463>:

inst_463:
// rs1_val==46339 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0xb767, 0xb503, 0x666, x4, 1764, x5)
    2b8c:	0000b537          	lui	a0,0xb
    2b90:	50350513          	addi	a0,a0,1283 # b503 <_end+0x64ff>
    2b94:	66656593          	ori	a1,a0,1638
    2b98:	6eb22223          	sw	a1,1764(tp) # 6e4 <offset+0x67c>

00002b9c <inst_464>:

inst_464:
// rs1_val==46339 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd3, 0xb503, -0x2d, x4, 1768, x5)
    2b9c:	0000b537          	lui	a0,0xb
    2ba0:	50350513          	addi	a0,a0,1283 # b503 <_end+0x64ff>
    2ba4:	fd356593          	ori	a1,a0,-45
    2ba8:	6eb22423          	sw	a1,1768(tp) # 6e8 <offset+0x680>

00002bac <inst_465>:

inst_465:
// rs1_val==46339 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0xb52f, 0xb503, 0x2d, x4, 1772, x5)
    2bac:	0000b537          	lui	a0,0xb
    2bb0:	50350513          	addi	a0,a0,1283 # b503 <_end+0x64ff>
    2bb4:	02d56593          	ori	a1,a0,45
    2bb8:	6eb22623          	sw	a1,1772(tp) # 6ec <offset+0x684>

00002bbc <inst_466>:

inst_466:
// rs1_val==46339 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0xb503, 0xb503, 0x2, x4, 1776, x5)
    2bbc:	0000b537          	lui	a0,0xb
    2bc0:	50350513          	addi	a0,a0,1283 # b503 <_end+0x64ff>
    2bc4:	00256593          	ori	a1,a0,2
    2bc8:	6eb22823          	sw	a1,1776(tp) # 6f0 <offset+0x688>

00002bcc <inst_467>:

inst_467:
// rs1_val==46339 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0xb557, 0xb503, 0x554, x4, 1780, x5)
    2bcc:	0000b537          	lui	a0,0xb
    2bd0:	50350513          	addi	a0,a0,1283 # b503 <_end+0x64ff>
    2bd4:	55456593          	ori	a1,a0,1364
    2bd8:	6eb22a23          	sw	a1,1780(tp) # 6f4 <offset+0x68c>

00002bdc <inst_468>:

inst_468:
// rs1_val==46339 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0xb503, 0xb503, 0x0, x4, 1784, x5)
    2bdc:	0000b537          	lui	a0,0xb
    2be0:	50350513          	addi	a0,a0,1283 # b503 <_end+0x64ff>
    2be4:	00056593          	ori	a1,a0,0
    2be8:	6eb22c23          	sw	a1,1784(tp) # 6f8 <offset+0x690>

00002bec <inst_469>:

inst_469:
// rs1_val==46339 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0xb507, 0xb503, 0x4, x4, 1788, x5)
    2bec:	0000b537          	lui	a0,0xb
    2bf0:	50350513          	addi	a0,a0,1283 # b503 <_end+0x64ff>
    2bf4:	00456593          	ori	a1,a0,4
    2bf8:	6eb22e23          	sw	a1,1788(tp) # 6fc <offset+0x694>

00002bfc <inst_470>:

inst_470:
// rs1_val==46339 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0xb733, 0xb503, 0x332, x4, 1792, x5)
    2bfc:	0000b537          	lui	a0,0xb
    2c00:	50350513          	addi	a0,a0,1283 # b503 <_end+0x64ff>
    2c04:	33256593          	ori	a1,a0,818
    2c08:	70b22023          	sw	a1,1792(tp) # 700 <offset+0x698>

00002c0c <inst_471>:

inst_471:
// rs1_val==46339 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0xb767, 0xb503, 0x665, x4, 1796, x5)
    2c0c:	0000b537          	lui	a0,0xb
    2c10:	50350513          	addi	a0,a0,1283 # b503 <_end+0x64ff>
    2c14:	66556593          	ori	a1,a0,1637
    2c18:	70b22223          	sw	a1,1796(tp) # 704 <offset+0x69c>

00002c1c <inst_472>:

inst_472:
// rs1_val==46339 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0xb52f, 0xb503, 0x2c, x4, 1800, x5)
    2c1c:	0000b537          	lui	a0,0xb
    2c20:	50350513          	addi	a0,a0,1283 # b503 <_end+0x64ff>
    2c24:	02c56593          	ori	a1,a0,44
    2c28:	70b22423          	sw	a1,1800(tp) # 708 <offset+0x6a0>

00002c2c <inst_473>:

inst_473:
// rs1_val==46339 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0xb557, 0xb503, 0x556, x4, 1804, x5)
    2c2c:	0000b537          	lui	a0,0xb
    2c30:	50350513          	addi	a0,a0,1283 # b503 <_end+0x64ff>
    2c34:	55656593          	ori	a1,a0,1366
    2c38:	70b22623          	sw	a1,1804(tp) # 70c <offset+0x6a4>

00002c3c <inst_474>:

inst_474:
// rs1_val==46339 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xffffffab, 0xb503, -0x555, x4, 1808, x5)
    2c3c:	0000b537          	lui	a0,0xb
    2c40:	50350513          	addi	a0,a0,1283 # b503 <_end+0x64ff>
    2c44:	aab56593          	ori	a1,a0,-1365
    2c48:	70b22823          	sw	a1,1808(tp) # 710 <offset+0x6a8>

00002c4c <inst_475>:

inst_475:
// rs1_val==46339 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0xb507, 0xb503, 0x6, x4, 1812, x5)
    2c4c:	0000b537          	lui	a0,0xb
    2c50:	50350513          	addi	a0,a0,1283 # b503 <_end+0x64ff>
    2c54:	00656593          	ori	a1,a0,6
    2c58:	70b22a23          	sw	a1,1812(tp) # 714 <offset+0x6ac>

00002c5c <inst_476>:

inst_476:
// rs1_val==46339 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0xb737, 0xb503, 0x334, x4, 1816, x5)
    2c5c:	0000b537          	lui	a0,0xb
    2c60:	50350513          	addi	a0,a0,1283 # b503 <_end+0x64ff>
    2c64:	33456593          	ori	a1,a0,820
    2c68:	70b22c23          	sw	a1,1816(tp) # 718 <offset+0x6b0>

00002c6c <inst_477>:

inst_477:
// rs1_val==46339 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0xb767, 0xb503, 0x667, x4, 1820, x5)
    2c6c:	0000b537          	lui	a0,0xb
    2c70:	50350513          	addi	a0,a0,1283 # b503 <_end+0x64ff>
    2c74:	66756593          	ori	a1,a0,1639
    2c78:	70b22e23          	sw	a1,1820(tp) # 71c <offset+0x6b4>

00002c7c <inst_478>:

inst_478:
// rs1_val==46339 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd7, 0xb503, -0x2c, x4, 1824, x5)
    2c7c:	0000b537          	lui	a0,0xb
    2c80:	50350513          	addi	a0,a0,1283 # b503 <_end+0x64ff>
    2c84:	fd456593          	ori	a1,a0,-44
    2c88:	72b22023          	sw	a1,1824(tp) # 720 <offset+0x6b8>

00002c8c <inst_479>:

inst_479:
// rs1_val==46339 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0xb52f, 0xb503, 0x2e, x4, 1828, x5)
    2c8c:	0000b537          	lui	a0,0xb
    2c90:	50350513          	addi	a0,a0,1283 # b503 <_end+0x64ff>
    2c94:	02e56593          	ori	a1,a0,46
    2c98:	72b22223          	sw	a1,1828(tp) # 724 <offset+0x6bc>

00002c9c <inst_480>:

inst_480:
// rs1_val==1431655766 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x55555557, 0x55555556, 0x3, x4, 1832, x5)
    2c9c:	55555537          	lui	a0,0x55555
    2ca0:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x55550552>
    2ca4:	00356593          	ori	a1,a0,3
    2ca8:	72b22423          	sw	a1,1832(tp) # 728 <offset+0x6c0>

00002cac <inst_481>:

inst_481:
// rs1_val==1431655766 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x55555557, 0x55555556, 0x555, x4, 1836, x5)
    2cac:	55555537          	lui	a0,0x55555
    2cb0:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x55550552>
    2cb4:	55556593          	ori	a1,a0,1365
    2cb8:	72b22623          	sw	a1,1836(tp) # 72c <offset+0x6c4>

00002cbc <inst_482>:

inst_482:
// rs1_val==1431655766 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffffe, 0x55555556, -0x556, x4, 1840, x5)
    2cbc:	55555537          	lui	a0,0x55555
    2cc0:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x55550552>
    2cc4:	aaa56593          	ori	a1,a0,-1366
    2cc8:	72b22823          	sw	a1,1840(tp) # 730 <offset+0x6c8>

00002ccc <inst_483>:

inst_483:
// rs1_val==1431655766 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x55555557, 0x55555556, 0x5, x4, 1844, x5)
    2ccc:	55555537          	lui	a0,0x55555
    2cd0:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x55550552>
    2cd4:	00556593          	ori	a1,a0,5
    2cd8:	72b22a23          	sw	a1,1844(tp) # 734 <offset+0x6cc>

00002cdc <inst_484>:

inst_484:
// rs1_val==1431655766 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x55555777, 0x55555556, 0x333, x4, 1848, x5)
    2cdc:	55555537          	lui	a0,0x55555
    2ce0:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x55550552>
    2ce4:	33356593          	ori	a1,a0,819
    2ce8:	72b22c23          	sw	a1,1848(tp) # 738 <offset+0x6d0>

00002cec <inst_485>:

inst_485:
// rs1_val==1431655766 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x55555776, 0x55555556, 0x666, x4, 1852, x5)
    2cec:	55555537          	lui	a0,0x55555
    2cf0:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x55550552>
    2cf4:	66656593          	ori	a1,a0,1638
    2cf8:	72b22e23          	sw	a1,1852(tp) # 73c <offset+0x6d4>

00002cfc <inst_486>:

inst_486:
// rs1_val==1431655766 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd7, 0x55555556, -0x2d, x4, 1856, x5)
    2cfc:	55555537          	lui	a0,0x55555
    2d00:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x55550552>
    2d04:	fd356593          	ori	a1,a0,-45
    2d08:	74b22023          	sw	a1,1856(tp) # 740 <offset+0x6d8>

00002d0c <inst_487>:

inst_487:
// rs1_val==1431655766 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x5555557f, 0x55555556, 0x2d, x4, 1860, x5)
    2d0c:	55555537          	lui	a0,0x55555
    2d10:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x55550552>
    2d14:	02d56593          	ori	a1,a0,45
    2d18:	74b22223          	sw	a1,1860(tp) # 744 <offset+0x6dc>

00002d1c <inst_488>:

inst_488:
// rs1_val==1431655766 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x55555556, 0x55555556, 0x2, x4, 1864, x5)
    2d1c:	55555537          	lui	a0,0x55555
    2d20:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x55550552>
    2d24:	00256593          	ori	a1,a0,2
    2d28:	74b22423          	sw	a1,1864(tp) # 748 <offset+0x6e0>

00002d2c <inst_489>:

inst_489:
// rs1_val==1431655766 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x55555556, 0x55555556, 0x554, x4, 1868, x5)
    2d2c:	55555537          	lui	a0,0x55555
    2d30:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x55550552>
    2d34:	55456593          	ori	a1,a0,1364
    2d38:	74b22623          	sw	a1,1868(tp) # 74c <offset+0x6e4>

00002d3c <inst_490>:

inst_490:
// rs1_val==1431655766 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x55555556, 0x55555556, 0x0, x4, 1872, x5)
    2d3c:	55555537          	lui	a0,0x55555
    2d40:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x55550552>
    2d44:	00056593          	ori	a1,a0,0
    2d48:	74b22823          	sw	a1,1872(tp) # 750 <offset+0x6e8>

00002d4c <inst_491>:

inst_491:
// rs1_val==1431655766 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x55555556, 0x55555556, 0x4, x4, 1876, x5)
    2d4c:	55555537          	lui	a0,0x55555
    2d50:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x55550552>
    2d54:	00456593          	ori	a1,a0,4
    2d58:	74b22a23          	sw	a1,1876(tp) # 754 <offset+0x6ec>

00002d5c <inst_492>:

inst_492:
// rs1_val==1431655766 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x55555776, 0x55555556, 0x332, x4, 1880, x5)
    2d5c:	55555537          	lui	a0,0x55555
    2d60:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x55550552>
    2d64:	33256593          	ori	a1,a0,818
    2d68:	74b22c23          	sw	a1,1880(tp) # 758 <offset+0x6f0>

00002d6c <inst_493>:

inst_493:
// rs1_val==1431655766 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x55555777, 0x55555556, 0x665, x4, 1884, x5)
    2d6c:	55555537          	lui	a0,0x55555
    2d70:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x55550552>
    2d74:	66556593          	ori	a1,a0,1637
    2d78:	74b22e23          	sw	a1,1884(tp) # 75c <offset+0x6f4>

00002d7c <inst_494>:

inst_494:
// rs1_val==1431655766 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x5555557e, 0x55555556, 0x2c, x4, 1888, x5)
    2d7c:	55555537          	lui	a0,0x55555
    2d80:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x55550552>
    2d84:	02c56593          	ori	a1,a0,44
    2d88:	76b22023          	sw	a1,1888(tp) # 760 <offset+0x6f8>

00002d8c <inst_495>:

inst_495:
// rs1_val==1431655766 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x55555556, 0x55555556, 0x556, x4, 1892, x5)
    2d8c:	55555537          	lui	a0,0x55555
    2d90:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x55550552>
    2d94:	55656593          	ori	a1,a0,1366
    2d98:	76b22223          	sw	a1,1892(tp) # 764 <offset+0x6fc>

00002d9c <inst_496>:

inst_496:
// rs1_val==1431655766 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xffffffff, 0x55555556, -0x555, x4, 1896, x5)
    2d9c:	55555537          	lui	a0,0x55555
    2da0:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x55550552>
    2da4:	aab56593          	ori	a1,a0,-1365
    2da8:	76b22423          	sw	a1,1896(tp) # 768 <offset+0x700>

00002dac <inst_497>:

inst_497:
// rs1_val==1431655766 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x55555556, 0x55555556, 0x6, x4, 1900, x5)
    2dac:	55555537          	lui	a0,0x55555
    2db0:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x55550552>
    2db4:	00656593          	ori	a1,a0,6
    2db8:	76b22623          	sw	a1,1900(tp) # 76c <offset+0x704>

00002dbc <inst_498>:

inst_498:
// rs1_val==1431655766 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x55555776, 0x55555556, 0x334, x4, 1904, x5)
    2dbc:	55555537          	lui	a0,0x55555
    2dc0:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x55550552>
    2dc4:	33456593          	ori	a1,a0,820
    2dc8:	76b22823          	sw	a1,1904(tp) # 770 <offset+0x708>

00002dcc <inst_499>:

inst_499:
// rs1_val==1431655766 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x55555777, 0x55555556, 0x667, x4, 1908, x5)
    2dcc:	55555537          	lui	a0,0x55555
    2dd0:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x55550552>
    2dd4:	66756593          	ori	a1,a0,1639
    2dd8:	76b22a23          	sw	a1,1908(tp) # 774 <offset+0x70c>

00002ddc <inst_500>:

inst_500:
// rs1_val==1431655766 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd6, 0x55555556, -0x2c, x4, 1912, x5)
    2ddc:	55555537          	lui	a0,0x55555
    2de0:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x55550552>
    2de4:	fd456593          	ori	a1,a0,-44
    2de8:	76b22c23          	sw	a1,1912(tp) # 778 <offset+0x710>

00002dec <inst_501>:

inst_501:
// rs1_val==1431655766 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x5555557e, 0x55555556, 0x2e, x4, 1916, x5)
    2dec:	55555537          	lui	a0,0x55555
    2df0:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x55550552>
    2df4:	02e56593          	ori	a1,a0,46
    2df8:	76b22e23          	sw	a1,1916(tp) # 77c <offset+0x714>

00002dfc <inst_502>:

inst_502:
// rs1_val==-1431655765 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaab, -0x55555555, 0x3, x4, 1920, x5)
    2dfc:	aaaab537          	lui	a0,0xaaaab
    2e00:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa5aa7>
    2e04:	00356593          	ori	a1,a0,3
    2e08:	78b22023          	sw	a1,1920(tp) # 780 <offset+0x718>

00002e0c <inst_503>:

inst_503:
// rs1_val==-1431655765 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0xaaaaafff, -0x55555555, 0x555, x4, 1924, x5)
    2e0c:	aaaab537          	lui	a0,0xaaaab
    2e10:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa5aa7>
    2e14:	55556593          	ori	a1,a0,1365
    2e18:	78b22223          	sw	a1,1924(tp) # 784 <offset+0x71c>

00002e1c <inst_504>:

inst_504:
// rs1_val==-1431655765 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffaab, -0x55555555, -0x556, x4, 1928, x5)
    2e1c:	aaaab537          	lui	a0,0xaaaab
    2e20:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa5aa7>
    2e24:	aaa56593          	ori	a1,a0,-1366
    2e28:	78b22423          	sw	a1,1928(tp) # 788 <offset+0x720>

00002e2c <inst_505>:

inst_505:
// rs1_val==-1431655765 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaaf, -0x55555555, 0x5, x4, 1932, x5)
    2e2c:	aaaab537          	lui	a0,0xaaaab
    2e30:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa5aa7>
    2e34:	00556593          	ori	a1,a0,5
    2e38:	78b22623          	sw	a1,1932(tp) # 78c <offset+0x724>

00002e3c <inst_506>:

inst_506:
// rs1_val==-1431655765 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0xaaaaabbb, -0x55555555, 0x333, x4, 1936, x5)
    2e3c:	aaaab537          	lui	a0,0xaaaab
    2e40:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa5aa7>
    2e44:	33356593          	ori	a1,a0,819
    2e48:	78b22823          	sw	a1,1936(tp) # 790 <offset+0x728>

00002e4c <inst_507>:

inst_507:
// rs1_val==-1431655765 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0xaaaaaeef, -0x55555555, 0x666, x4, 1940, x5)
    2e4c:	aaaab537          	lui	a0,0xaaaab
    2e50:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa5aa7>
    2e54:	66656593          	ori	a1,a0,1638
    2e58:	78b22a23          	sw	a1,1940(tp) # 794 <offset+0x72c>

00002e5c <inst_508>:

inst_508:
// rs1_val==-1431655765 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xfffffffb, -0x55555555, -0x2d, x4, 1944, x5)
    2e5c:	aaaab537          	lui	a0,0xaaaab
    2e60:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa5aa7>
    2e64:	fd356593          	ori	a1,a0,-45
    2e68:	78b22c23          	sw	a1,1944(tp) # 798 <offset+0x730>

00002e6c <inst_509>:

inst_509:
// rs1_val==-1431655765 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaaf, -0x55555555, 0x2d, x4, 1948, x5)
    2e6c:	aaaab537          	lui	a0,0xaaaab
    2e70:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa5aa7>
    2e74:	02d56593          	ori	a1,a0,45
    2e78:	78b22e23          	sw	a1,1948(tp) # 79c <offset+0x734>

00002e7c <inst_510>:

inst_510:
// rs1_val==-1431655765 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaab, -0x55555555, 0x2, x4, 1952, x5)
    2e7c:	aaaab537          	lui	a0,0xaaaab
    2e80:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa5aa7>
    2e84:	00256593          	ori	a1,a0,2
    2e88:	7ab22023          	sw	a1,1952(tp) # 7a0 <offset+0x738>

00002e8c <inst_511>:

inst_511:
// rs1_val==-1431655765 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0xaaaaafff, -0x55555555, 0x554, x4, 1956, x5)
    2e8c:	aaaab537          	lui	a0,0xaaaab
    2e90:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa5aa7>
    2e94:	55456593          	ori	a1,a0,1364
    2e98:	7ab22223          	sw	a1,1956(tp) # 7a4 <offset+0x73c>

00002e9c <inst_512>:

inst_512:
// rs1_val==-1431655765 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaab, -0x55555555, 0x0, x4, 1960, x5)
    2e9c:	aaaab537          	lui	a0,0xaaaab
    2ea0:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa5aa7>
    2ea4:	00056593          	ori	a1,a0,0
    2ea8:	7ab22423          	sw	a1,1960(tp) # 7a8 <offset+0x740>

00002eac <inst_513>:

inst_513:
// rs1_val==-1431655765 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaaf, -0x55555555, 0x4, x4, 1964, x5)
    2eac:	aaaab537          	lui	a0,0xaaaab
    2eb0:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa5aa7>
    2eb4:	00456593          	ori	a1,a0,4
    2eb8:	7ab22623          	sw	a1,1964(tp) # 7ac <offset+0x744>

00002ebc <inst_514>:

inst_514:
// rs1_val==-1431655765 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0xaaaaabbb, -0x55555555, 0x332, x4, 1968, x5)
    2ebc:	aaaab537          	lui	a0,0xaaaab
    2ec0:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa5aa7>
    2ec4:	33256593          	ori	a1,a0,818
    2ec8:	7ab22823          	sw	a1,1968(tp) # 7b0 <offset+0x748>

00002ecc <inst_515>:

inst_515:
// rs1_val==-1431655765 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0xaaaaaeef, -0x55555555, 0x665, x4, 1972, x5)
    2ecc:	aaaab537          	lui	a0,0xaaaab
    2ed0:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa5aa7>
    2ed4:	66556593          	ori	a1,a0,1637
    2ed8:	7ab22a23          	sw	a1,1972(tp) # 7b4 <offset+0x74c>

00002edc <inst_516>:

inst_516:
// rs1_val==-1431655765 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaaf, -0x55555555, 0x2c, x4, 1976, x5)
    2edc:	aaaab537          	lui	a0,0xaaaab
    2ee0:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa5aa7>
    2ee4:	02c56593          	ori	a1,a0,44
    2ee8:	7ab22c23          	sw	a1,1976(tp) # 7b8 <offset+0x750>

00002eec <inst_517>:

inst_517:
// rs1_val==-1431655765 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0xaaaaafff, -0x55555555, 0x556, x4, 1980, x5)
    2eec:	aaaab537          	lui	a0,0xaaaab
    2ef0:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa5aa7>
    2ef4:	55656593          	ori	a1,a0,1366
    2ef8:	7ab22e23          	sw	a1,1980(tp) # 7bc <offset+0x754>

00002efc <inst_518>:

inst_518:
// rs1_val==-1431655765 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffaab, -0x55555555, -0x555, x4, 1984, x5)
    2efc:	aaaab537          	lui	a0,0xaaaab
    2f00:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa5aa7>
    2f04:	aab56593          	ori	a1,a0,-1365
    2f08:	7cb22023          	sw	a1,1984(tp) # 7c0 <offset+0x758>

00002f0c <inst_519>:

inst_519:
// rs1_val==-1431655765 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaaf, -0x55555555, 0x6, x4, 1988, x5)
    2f0c:	aaaab537          	lui	a0,0xaaaab
    2f10:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa5aa7>
    2f14:	00656593          	ori	a1,a0,6
    2f18:	7cb22223          	sw	a1,1988(tp) # 7c4 <offset+0x75c>

00002f1c <inst_520>:

inst_520:
// rs1_val==-1431655765 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0xaaaaabbf, -0x55555555, 0x334, x4, 1992, x5)
    2f1c:	aaaab537          	lui	a0,0xaaaab
    2f20:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa5aa7>
    2f24:	33456593          	ori	a1,a0,820
    2f28:	7cb22423          	sw	a1,1992(tp) # 7c8 <offset+0x760>

00002f2c <inst_521>:

inst_521:
// rs1_val==-1431655765 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0xaaaaaeef, -0x55555555, 0x667, x4, 1996, x5)
    2f2c:	aaaab537          	lui	a0,0xaaaab
    2f30:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa5aa7>
    2f34:	66756593          	ori	a1,a0,1639
    2f38:	7cb22623          	sw	a1,1996(tp) # 7cc <offset+0x764>

00002f3c <inst_522>:

inst_522:
// rs1_val==-1431655765 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x55555555, -0x2c, x4, 2000, x5)
    2f3c:	aaaab537          	lui	a0,0xaaaab
    2f40:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa5aa7>
    2f44:	fd456593          	ori	a1,a0,-44
    2f48:	7cb22823          	sw	a1,2000(tp) # 7d0 <offset+0x768>

00002f4c <inst_523>:

inst_523:
// rs1_val==-1431655765 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaaf, -0x55555555, 0x2e, x4, 2004, x5)
    2f4c:	aaaab537          	lui	a0,0xaaaab
    2f50:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa5aa7>
    2f54:	02e56593          	ori	a1,a0,46
    2f58:	7cb22a23          	sw	a1,2004(tp) # 7d4 <offset+0x76c>

00002f5c <inst_524>:

inst_524:
// rs1_val==6 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x7, 0x6, 0x3, x4, 2008, x5)
    2f5c:	00600513          	li	a0,6
    2f60:	00356593          	ori	a1,a0,3
    2f64:	7cb22c23          	sw	a1,2008(tp) # 7d8 <offset+0x770>

00002f68 <inst_525>:

inst_525:
// rs1_val==6 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x557, 0x6, 0x555, x4, 2012, x5)
    2f68:	00600513          	li	a0,6
    2f6c:	55556593          	ori	a1,a0,1365
    2f70:	7cb22e23          	sw	a1,2012(tp) # 7dc <offset+0x774>

00002f74 <inst_526>:

inst_526:
// rs1_val==6 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffaae, 0x6, -0x556, x4, 2016, x5)
    2f74:	00600513          	li	a0,6
    2f78:	aaa56593          	ori	a1,a0,-1366
    2f7c:	7eb22023          	sw	a1,2016(tp) # 7e0 <offset+0x778>

00002f80 <inst_527>:

inst_527:
// rs1_val==6 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x7, 0x6, 0x5, x4, 2020, x5)
    2f80:	00600513          	li	a0,6
    2f84:	00556593          	ori	a1,a0,5
    2f88:	7eb22223          	sw	a1,2020(tp) # 7e4 <offset+0x77c>

00002f8c <inst_528>:

inst_528:
// rs1_val==6 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x337, 0x6, 0x333, x4, 2024, x5)
    2f8c:	00600513          	li	a0,6
    2f90:	33356593          	ori	a1,a0,819
    2f94:	7eb22423          	sw	a1,2024(tp) # 7e8 <offset+0x780>

00002f98 <inst_529>:

inst_529:
// rs1_val==6 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x666, 0x6, 0x666, x4, 2028, x5)
    2f98:	00600513          	li	a0,6
    2f9c:	66656593          	ori	a1,a0,1638
    2fa0:	7eb22623          	sw	a1,2028(tp) # 7ec <offset+0x784>

00002fa4 <inst_530>:

inst_530:
// rs1_val==6 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd7, 0x6, -0x2d, x4, 2032, x5)
    2fa4:	00600513          	li	a0,6
    2fa8:	fd356593          	ori	a1,a0,-45
    2fac:	7eb22823          	sw	a1,2032(tp) # 7f0 <offset+0x788>

00002fb0 <inst_531>:

inst_531:
// rs1_val==6 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x2f, 0x6, 0x2d, x4, 2036, x5)
    2fb0:	00600513          	li	a0,6
    2fb4:	02d56593          	ori	a1,a0,45
    2fb8:	7eb22a23          	sw	a1,2036(tp) # 7f4 <offset+0x78c>

00002fbc <inst_532>:

inst_532:
// rs1_val==6 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x6, 0x6, 0x2, x4, 2040, x5)
    2fbc:	00600513          	li	a0,6
    2fc0:	00256593          	ori	a1,a0,2
    2fc4:	7eb22c23          	sw	a1,2040(tp) # 7f8 <offset+0x790>

00002fc8 <inst_533>:

inst_533:
// rs1_val==6 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x556, 0x6, 0x554, x4, 2044, x5)
    2fc8:	00600513          	li	a0,6
    2fcc:	55456593          	ori	a1,a0,1364
    2fd0:	7eb22e23          	sw	a1,2044(tp) # 7fc <offset+0x794>
RVTEST_SIGBASE( x4,signature_x4_1)
    2fd4:	00002217          	auipc	tp,0x2
    2fd8:	89420213          	addi	tp,tp,-1900 # 4868 <signature_x4_1>

00002fdc <inst_534>:

inst_534:
// rs1_val==6 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x6, 0x6, 0x0, x4, 0, x5)
    2fdc:	00600513          	li	a0,6
    2fe0:	00056593          	ori	a1,a0,0
    2fe4:	00b22023          	sw	a1,0(tp) # 0 <offset-0x68>

00002fe8 <inst_535>:

inst_535:
// rs1_val==6 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x6, 0x6, 0x4, x4, 4, x5)
    2fe8:	00600513          	li	a0,6
    2fec:	00456593          	ori	a1,a0,4
    2ff0:	00b22223          	sw	a1,4(tp) # 4 <offset-0x64>

00002ff4 <inst_536>:

inst_536:
// rs1_val==6 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x336, 0x6, 0x332, x4, 8, x5)
    2ff4:	00600513          	li	a0,6
    2ff8:	33256593          	ori	a1,a0,818
    2ffc:	00b22423          	sw	a1,8(tp) # 8 <offset-0x60>

00003000 <inst_537>:

inst_537:
// rs1_val==6 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x667, 0x6, 0x665, x4, 12, x5)
    3000:	00600513          	li	a0,6
    3004:	66556593          	ori	a1,a0,1637
    3008:	00b22623          	sw	a1,12(tp) # c <offset-0x5c>

0000300c <inst_538>:

inst_538:
// rs1_val==6 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x2e, 0x6, 0x2c, x4, 16, x5)
    300c:	00600513          	li	a0,6
    3010:	02c56593          	ori	a1,a0,44
    3014:	00b22823          	sw	a1,16(tp) # 10 <offset-0x58>

00003018 <inst_539>:

inst_539:
// rs1_val==6 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x556, 0x6, 0x556, x4, 20, x5)
    3018:	00600513          	li	a0,6
    301c:	55656593          	ori	a1,a0,1366
    3020:	00b22a23          	sw	a1,20(tp) # 14 <offset-0x54>

00003024 <inst_540>:

inst_540:
// rs1_val==6 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffaaf, 0x6, -0x555, x4, 24, x5)
    3024:	00600513          	li	a0,6
    3028:	aab56593          	ori	a1,a0,-1365
    302c:	00b22c23          	sw	a1,24(tp) # 18 <offset-0x50>

00003030 <inst_541>:

inst_541:
// rs1_val==6 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x6, 0x6, 0x6, x4, 28, x5)
    3030:	00600513          	li	a0,6
    3034:	00656593          	ori	a1,a0,6
    3038:	00b22e23          	sw	a1,28(tp) # 1c <offset-0x4c>

0000303c <inst_542>:

inst_542:
// rs1_val==6 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x336, 0x6, 0x334, x4, 32, x5)
    303c:	00600513          	li	a0,6
    3040:	33456593          	ori	a1,a0,820
    3044:	02b22023          	sw	a1,32(tp) # 20 <offset-0x48>

00003048 <inst_543>:

inst_543:
// rs1_val==6 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x667, 0x6, 0x667, x4, 36, x5)
    3048:	00600513          	li	a0,6
    304c:	66756593          	ori	a1,a0,1639
    3050:	02b22223          	sw	a1,36(tp) # 24 <offset-0x44>

00003054 <inst_544>:

inst_544:
// rs1_val==6 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd6, 0x6, -0x2c, x4, 40, x5)
    3054:	00600513          	li	a0,6
    3058:	fd456593          	ori	a1,a0,-44
    305c:	02b22423          	sw	a1,40(tp) # 28 <offset-0x40>

00003060 <inst_545>:

inst_545:
// rs1_val==6 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x2e, 0x6, 0x2e, x4, 44, x5)
    3060:	00600513          	li	a0,6
    3064:	02e56593          	ori	a1,a0,46
    3068:	02b22623          	sw	a1,44(tp) # 2c <offset-0x3c>

0000306c <inst_546>:

inst_546:
// rs1_val==858993460 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x33333337, 0x33333334, 0x3, x4, 48, x5)
    306c:	33333537          	lui	a0,0x33333
    3070:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332e330>
    3074:	00356593          	ori	a1,a0,3
    3078:	02b22823          	sw	a1,48(tp) # 30 <offset-0x38>

0000307c <inst_547>:

inst_547:
// rs1_val==858993460 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x33333775, 0x33333334, 0x555, x4, 52, x5)
    307c:	33333537          	lui	a0,0x33333
    3080:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332e330>
    3084:	55556593          	ori	a1,a0,1365
    3088:	02b22a23          	sw	a1,52(tp) # 34 <offset-0x34>

0000308c <inst_548>:

inst_548:
// rs1_val==858993460 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffbbe, 0x33333334, -0x556, x4, 56, x5)
    308c:	33333537          	lui	a0,0x33333
    3090:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332e330>
    3094:	aaa56593          	ori	a1,a0,-1366
    3098:	02b22c23          	sw	a1,56(tp) # 38 <offset-0x30>

0000309c <inst_549>:

inst_549:
// rs1_val==858993460 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x33333335, 0x33333334, 0x5, x4, 60, x5)
    309c:	33333537          	lui	a0,0x33333
    30a0:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332e330>
    30a4:	00556593          	ori	a1,a0,5
    30a8:	02b22e23          	sw	a1,60(tp) # 3c <offset-0x2c>

000030ac <inst_550>:

inst_550:
// rs1_val==858993460 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x33333337, 0x33333334, 0x333, x4, 64, x5)
    30ac:	33333537          	lui	a0,0x33333
    30b0:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332e330>
    30b4:	33356593          	ori	a1,a0,819
    30b8:	04b22023          	sw	a1,64(tp) # 40 <offset-0x28>

000030bc <inst_551>:

inst_551:
// rs1_val==858993460 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x33333776, 0x33333334, 0x666, x4, 68, x5)
    30bc:	33333537          	lui	a0,0x33333
    30c0:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332e330>
    30c4:	66656593          	ori	a1,a0,1638
    30c8:	04b22223          	sw	a1,68(tp) # 44 <offset-0x24>

000030cc <inst_552>:

inst_552:
// rs1_val==858993460 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xfffffff7, 0x33333334, -0x2d, x4, 72, x5)
    30cc:	33333537          	lui	a0,0x33333
    30d0:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332e330>
    30d4:	fd356593          	ori	a1,a0,-45
    30d8:	04b22423          	sw	a1,72(tp) # 48 <offset-0x20>

000030dc <inst_553>:

inst_553:
// rs1_val==858993460 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x3333333d, 0x33333334, 0x2d, x4, 76, x5)
    30dc:	33333537          	lui	a0,0x33333
    30e0:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332e330>
    30e4:	02d56593          	ori	a1,a0,45
    30e8:	04b22623          	sw	a1,76(tp) # 4c <offset-0x1c>

000030ec <inst_554>:

inst_554:
// rs1_val==858993460 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x33333336, 0x33333334, 0x2, x4, 80, x5)
    30ec:	33333537          	lui	a0,0x33333
    30f0:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332e330>
    30f4:	00256593          	ori	a1,a0,2
    30f8:	04b22823          	sw	a1,80(tp) # 50 <offset-0x18>

000030fc <inst_555>:

inst_555:
// rs1_val==858993460 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x33333774, 0x33333334, 0x554, x4, 84, x5)
    30fc:	33333537          	lui	a0,0x33333
    3100:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332e330>
    3104:	55456593          	ori	a1,a0,1364
    3108:	04b22a23          	sw	a1,84(tp) # 54 <offset-0x14>

0000310c <inst_556>:

inst_556:
// rs1_val==858993460 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x33333334, 0x33333334, 0x0, x4, 88, x5)
    310c:	33333537          	lui	a0,0x33333
    3110:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332e330>
    3114:	00056593          	ori	a1,a0,0
    3118:	04b22c23          	sw	a1,88(tp) # 58 <offset-0x10>

0000311c <inst_557>:

inst_557:
// rs1_val==858993460 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x33333334, 0x33333334, 0x4, x4, 92, x5)
    311c:	33333537          	lui	a0,0x33333
    3120:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332e330>
    3124:	00456593          	ori	a1,a0,4
    3128:	04b22e23          	sw	a1,92(tp) # 5c <offset-0xc>

0000312c <inst_558>:

inst_558:
// imm_val == 1024, rs1_val == -1073741825
// opcode: ori ; op1:x10; dest:x11; op1val:-0x40000001;  immval:0x400
TEST_IMM_OP( ori, x11, x10, 0xbfffffff, -0x40000001, 0x400, x4, 96, x5)
    312c:	c0000537          	lui	a0,0xc0000
    3130:	fff50513          	addi	a0,a0,-1 # bfffffff <_end+0xbfffaffb>
    3134:	40056593          	ori	a1,a0,1024
    3138:	06b22023          	sw	a1,96(tp) # 60 <offset-0x8>

0000313c <inst_559>:

inst_559:
// imm_val == -17, rs1_val == -16385
// opcode: ori ; op1:x10; dest:x11; op1val:-0x4001;  immval:-0x11
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x4001, -0x11, x4, 100, x5)
    313c:	ffffc537          	lui	a0,0xffffc
    3140:	fff50513          	addi	a0,a0,-1 # ffffbfff <_end+0xffff6ffb>
    3144:	fef56593          	ori	a1,a0,-17
    3148:	06b22223          	sw	a1,100(tp) # 64 <offset-0x4>
    314c:	00000013          	nop

00003150 <rvtest_code_end>:
#endif


RVTEST_CODE_END
RVMODEL_HALT
    3150:	babed0b7          	lui	ra,0xbabed
    3154:	afe08093          	addi	ra,ra,-1282 # babecafe <_end+0xbabe7afa>

00003158 <write_tohost>:
    3158:	00002017          	auipc	zero,0x2
    315c:	ea102423          	sw	ra,-344(zero) # fffffea8 <_end+0xffffaea4>

00003160 <loop>:
    3160:	0000006f          	j	3160 <loop>
	...
