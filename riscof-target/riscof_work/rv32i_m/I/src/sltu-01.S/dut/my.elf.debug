
my.elf:     file format elf32-littleriscv


Disassembly of section .text:

00001000 <rvtest_entry_point>:

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN
    1000:	feedc0b7          	lui	ra,0xfeedc
    1004:	ead08093          	addi	ra,ra,-339 # feedbead <_end+0xfeed5ea9>
    1008:	ff76e137          	lui	sp,0xff76e
    100c:	f5610113          	addi	sp,sp,-170 # ff76df56 <_end+0xff767f52>
    1010:	7fbb71b7          	lui	gp,0x7fbb7
    1014:	fab18193          	addi	gp,gp,-85 # 7fbb6fab <_end+0x7fbb0fa7>
    1018:	bfddb237          	lui	tp,0xbfddb
    101c:	7d520213          	addi	tp,tp,2005 # bfddb7d5 <_end+0xbfdd57d1>
    1020:	00000297          	auipc	t0,0x0
    1024:	0d828293          	addi	t0,t0,216 # 10f8 <rvtest_code_begin>
    1028:	00004317          	auipc	t1,0x4
    102c:	fd830313          	addi	t1,t1,-40 # 5000 <rvtest_data_begin>
    1030:	b7fbb3b7          	lui	t2,0xb7fbb
    1034:	6fa38393          	addi	t2,t2,1786 # b7fbb6fa <_end+0xb7fb56f6>
    1038:	5bfde437          	lui	s0,0x5bfde
    103c:	b7d40413          	addi	s0,s0,-1155 # 5bfddb7d <_end+0x5bfd7b79>
    1040:	adfef4b7          	lui	s1,0xadfef
    1044:	dbe48493          	addi	s1,s1,-578 # adfeedbe <_end+0xadfe8dba>
    1048:	56ff7537          	lui	a0,0x56ff7
    104c:	6df50513          	addi	a0,a0,1759 # 56ff76df <_end+0x56ff16db>
    1050:	ab7fc5b7          	lui	a1,0xab7fc
    1054:	b6f58593          	addi	a1,a1,-1169 # ab7fbb6f <_end+0xab7f5b6b>
    1058:	d5bfe637          	lui	a2,0xd5bfe
    105c:	db760613          	addi	a2,a2,-585 # d5bfddb7 <_end+0xd5bf7db3>
    1060:	eadff6b7          	lui	a3,0xeadff
    1064:	edb68693          	addi	a3,a3,-293 # eadfeedb <_end+0xeadf8ed7>
    1068:	f56ff737          	lui	a4,0xf56ff
    106c:	76d70713          	addi	a4,a4,1901 # f56ff76d <_end+0xf56f9769>
    1070:	fab807b7          	lui	a5,0xfab80
    1074:	bb678793          	addi	a5,a5,-1098 # fab7fbb6 <_end+0xfab79bb2>
    1078:	7d5c0837          	lui	a6,0x7d5c0
    107c:	ddb80813          	addi	a6,a6,-549 # 7d5bfddb <_end+0x7d5b9dd7>
    1080:	beae08b7          	lui	a7,0xbeae0
    1084:	eed88893          	addi	a7,a7,-275 # beadfeed <_end+0xbead9ee9>
    1088:	df570937          	lui	s2,0xdf570
    108c:	f7690913          	addi	s2,s2,-138 # df56ff76 <_end+0xdf569f72>
    1090:	6fab89b7          	lui	s3,0x6fab8
    1094:	fbb98993          	addi	s3,s3,-69 # 6fab7fbb <_end+0x6fab1fb7>
    1098:	b7d5ca37          	lui	s4,0xb7d5c
    109c:	fdda0a13          	addi	s4,s4,-35 # b7d5bfdd <_end+0xb7d55fd9>
    10a0:	dbeaeab7          	lui	s5,0xdbeae
    10a4:	feea8a93          	addi	s5,s5,-18 # dbeadfee <_end+0xdbea7fea>
    10a8:	6df57b37          	lui	s6,0x6df57
    10ac:	ff7b0b13          	addi	s6,s6,-9 # 6df56ff7 <_end+0x6df50ff3>
    10b0:	b6fabbb7          	lui	s7,0xb6fab
    10b4:	7fbb8b93          	addi	s7,s7,2043 # b6fab7fb <_end+0xb6fa57f7>
    10b8:	db7d6c37          	lui	s8,0xdb7d6
    10bc:	bfdc0c13          	addi	s8,s8,-1027 # db7d5bfd <_end+0xdb7cfbf9>
    10c0:	edbebcb7          	lui	s9,0xedbeb
    10c4:	dfec8c93          	addi	s9,s9,-514 # edbeadfe <_end+0xedbe4dfa>
    10c8:	76df5d37          	lui	s10,0x76df5
    10cc:	6ffd0d13          	addi	s10,s10,1791 # 76df56ff <_end+0x76def6fb>
    10d0:	bb6fbdb7          	lui	s11,0xbb6fb
    10d4:	b7fd8d93          	addi	s11,s11,-1153 # bb6fab7f <_end+0xbb6f4b7b>
    10d8:	ddb7de37          	lui	t3,0xddb7d
    10dc:	5bfe0e13          	addi	t3,t3,1471 # ddb7d5bf <_end+0xddb775bb>
    10e0:	eedbfeb7          	lui	t4,0xeedbf
    10e4:	adfe8e93          	addi	t4,t4,-1313 # eedbeadf <_end+0xeedb8adb>
    10e8:	f76dff37          	lui	t5,0xf76df
    10ec:	56ff0f13          	addi	t5,t5,1391 # f76df56f <_end+0xf76d956b>
    10f0:	fbb70fb7          	lui	t6,0xfbb70
    10f4:	ab7f8f93          	addi	t6,t6,-1353 # fbb6fab7 <_end+0xfbb69ab3>

000010f8 <rvtest_code_begin>:

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*);def TEST_CASE_1=True;",sltu)

RVTEST_SIGBASE( x9,signature_x9_1)
    10f8:	00004497          	auipc	s1,0x4
    10fc:	f1848493          	addi	s1,s1,-232 # 5010 <begin_signature>

00001100 <inst_0>:

inst_0:
// rs2 == rd != rs1, rs1==x0, rs2==x31, rd==x31, rs1_val > 0 and rs2_val > 0, rs2_val == 4294967294, rs1_val != rs2_val and rs1_val > 0 and rs2_val > 0, rs1_val == 2048
// opcode: sltu ; op1:x0; op2:x31; dest:x31; op1val:0x0;  op2val:0xfffffffe
TEST_RR_OP(sltu, x31, x0, x31, 0x1, 0x0, 0xfffffffe, x9, 0, x7)
    1100:	00000013          	nop
    1104:	ffe00f93          	li	t6,-2
    1108:	01f03fb3          	snez	t6,t6
    110c:	01f4a023          	sw	t6,0(s1)

00001110 <inst_1>:

inst_1:
// rs1 == rs2 != rd, rs1==x19, rs2==x19, rd==x5, rs1_val == rs2_val and rs1_val > 0 and rs2_val > 0, rs2_val == 1048576, rs1_val == 1048576
// opcode: sltu ; op1:x19; op2:x19; dest:x5; op1val:0x100000;  op2val:0x100000
TEST_RR_OP(sltu, x5, x19, x19, 0x0, 0x100000, 0x100000, x9, 4, x7)
    1110:	001009b7          	lui	s3,0x100
    1114:	001009b7          	lui	s3,0x100
    1118:	0139b2b3          	sltu	t0,s3,s3
    111c:	0054a223          	sw	t0,4(s1)

00001120 <inst_2>:

inst_2:
// rs1 == rs2 == rd, rs1==x25, rs2==x25, rd==x25, rs2_val == 0, rs1_val == 1073741824
// opcode: sltu ; op1:x25; op2:x25; dest:x25; op1val:0x40000000;  op2val:0x40000000
TEST_RR_OP(sltu, x25, x25, x25, 0x0, 0x40000000, 0x40000000, x9, 8, x7)
    1120:	40000cb7          	lui	s9,0x40000
    1124:	40000cb7          	lui	s9,0x40000
    1128:	019cbcb3          	sltu	s9,s9,s9
    112c:	0194a423          	sw	s9,8(s1)

00001130 <inst_3>:

inst_3:
// rs1 == rd != rs2, rs1==x14, rs2==x24, rd==x14, rs2_val == (2**(xlen)-1), rs1_val == 4294967294
// opcode: sltu ; op1:x14; op2:x24; dest:x14; op1val:0xfffffffe;  op2val:0xffffffff
TEST_RR_OP(sltu, x14, x14, x24, 0x1, 0xfffffffe, 0xffffffff, x9, 12, x7)
    1130:	ffe00713          	li	a4,-2
    1134:	fff00c13          	li	s8,-1
    1138:	01873733          	sltu	a4,a4,s8
    113c:	00e4a623          	sw	a4,12(s1)

00001140 <inst_4>:

inst_4:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x17, rs2==x13, rd==x12, rs2_val == 1, rs1_val == 1, rs1_val==1 and rs2_val==1
// opcode: sltu ; op1:x17; op2:x13; dest:x12; op1val:0x1;  op2val:0x1
TEST_RR_OP(sltu, x12, x17, x13, 0x0, 0x1, 0x1, x9, 16, x7)
    1140:	00100893          	li	a7,1
    1144:	00100693          	li	a3,1
    1148:	00d8b633          	sltu	a2,a7,a3
    114c:	00c4a823          	sw	a2,16(s1)

00001150 <inst_5>:

inst_5:
// rs1==x26, rs2==x18, rd==x24, rs1_val == 0, 
// opcode: sltu ; op1:x26; op2:x18; dest:x24; op1val:0x0;  op2val:0xb
TEST_RR_OP(sltu, x24, x26, x18, 0x1, 0x0, 0xb, x9, 20, x7)
    1150:	00000d13          	li	s10,0
    1154:	00b00913          	li	s2,11
    1158:	012d3c33          	sltu	s8,s10,s2
    115c:	0184aa23          	sw	s8,20(s1)

00001160 <inst_6>:

inst_6:
// rs1==x5, rs2==x14, rd==x19, rs1_val == (2**(xlen)-1), 
// opcode: sltu ; op1:x5; op2:x14; dest:x19; op1val:0xffffffff;  op2val:0x0
TEST_RR_OP(sltu, x19, x5, x14, 0x0, 0xffffffff, 0x0, x9, 24, x7)
    1160:	fff00293          	li	t0,-1
    1164:	00000713          	li	a4,0
    1168:	00e2b9b3          	sltu	s3,t0,a4
    116c:	0134ac23          	sw	s3,24(s1)

00001170 <inst_7>:

inst_7:
// rs1==x3, rs2==x22, rd==x0, rs2_val == 2, rs1_val==4 and rs2_val==2, rs1_val == 4
// opcode: sltu ; op1:x3; op2:x22; dest:x0; op1val:0x4;  op2val:0x2
TEST_RR_OP(sltu, x0, x3, x22, 0, 0x4, 0x2, x9, 28, x7)
    1170:	00400193          	li	gp,4
    1174:	00200b13          	li	s6,2
    1178:	0161b033          	sltu	zero,gp,s6
    117c:	0004ae23          	sw	zero,28(s1)

00001180 <inst_8>:

inst_8:
// rs1==x23, rs2==x29, rd==x20, rs2_val == 4, rs1_val == 4160749567
// opcode: sltu ; op1:x23; op2:x29; dest:x20; op1val:0xf7ffffff;  op2val:0x4
TEST_RR_OP(sltu, x20, x23, x29, 0x0, 0xf7ffffff, 0x4, x9, 32, x7)
    1180:	f8000bb7          	lui	s7,0xf8000
    1184:	fffb8b93          	addi	s7,s7,-1 # f7ffffff <_end+0xf7ff9ffb>
    1188:	00400e93          	li	t4,4
    118c:	01dbba33          	sltu	s4,s7,t4
    1190:	0344a023          	sw	s4,32(s1)

00001194 <inst_9>:

inst_9:
// rs1==x4, rs2==x6, rd==x10, rs2_val == 8, 
// opcode: sltu ; op1:x4; op2:x6; dest:x10; op1val:0x11;  op2val:0x8
TEST_RR_OP(sltu, x10, x4, x6, 0x0, 0x11, 0x8, x9, 36, x7)
    1194:	01100213          	li	tp,17
    1198:	00800313          	li	t1,8
    119c:	00623533          	sltu	a0,tp,t1
    11a0:	02a4a223          	sw	a0,36(s1)

000011a4 <inst_10>:

inst_10:
// rs1==x12, rs2==x17, rd==x1, rs2_val == 16, rs1_val == 2147483647
// opcode: sltu ; op1:x12; op2:x17; dest:x1; op1val:0x7fffffff;  op2val:0x10
TEST_RR_OP(sltu, x1, x12, x17, 0x0, 0x7fffffff, 0x10, x9, 40, x7)
    11a4:	80000637          	lui	a2,0x80000
    11a8:	fff60613          	addi	a2,a2,-1 # 7fffffff <_end+0x7fff9ffb>
    11ac:	01000893          	li	a7,16
    11b0:	011630b3          	sltu	ra,a2,a7
    11b4:	0214a423          	sw	ra,40(s1)

000011b8 <inst_11>:

inst_11:
// rs1==x30, rs2==x8, rd==x6, rs2_val == 32, rs1_val == 33554432
// opcode: sltu ; op1:x30; op2:x8; dest:x6; op1val:0x2000000;  op2val:0x20
TEST_RR_OP(sltu, x6, x30, x8, 0x0, 0x2000000, 0x20, x9, 44, x7)
    11b8:	02000f37          	lui	t5,0x2000
    11bc:	02000413          	li	s0,32
    11c0:	008f3333          	sltu	t1,t5,s0
    11c4:	0264a623          	sw	t1,44(s1)

000011c8 <inst_12>:

inst_12:
// rs1==x21, rs2==x16, rd==x3, rs2_val == 64, rs1_val == 4294965247
// opcode: sltu ; op1:x21; op2:x16; dest:x3; op1val:0xfffff7ff;  op2val:0x40
TEST_RR_OP(sltu, x3, x21, x16, 0x0, 0xfffff7ff, 0x40, x9, 48, x7)
    11c8:	fffffab7          	lui	s5,0xfffff
    11cc:	7ffa8a93          	addi	s5,s5,2047 # fffff7ff <_end+0xffff97fb>
    11d0:	04000813          	li	a6,64
    11d4:	010ab1b3          	sltu	gp,s5,a6
    11d8:	0234a823          	sw	gp,48(s1)

000011dc <inst_13>:

inst_13:
// rs1==x29, rs2==x26, rd==x17, rs2_val == 128, rs1_val == 1024
// opcode: sltu ; op1:x29; op2:x26; dest:x17; op1val:0x400;  op2val:0x80
TEST_RR_OP(sltu, x17, x29, x26, 0x0, 0x400, 0x80, x9, 52, x7)
    11dc:	40000e93          	li	t4,1024
    11e0:	08000d13          	li	s10,128
    11e4:	01aeb8b3          	sltu	a7,t4,s10
    11e8:	0314aa23          	sw	a7,52(s1)

000011ec <inst_14>:

inst_14:
// rs1==x18, rs2==x10, rd==x28, rs2_val == 256, 
// opcode: sltu ; op1:x18; op2:x10; dest:x28; op1val:0xd;  op2val:0x100
TEST_RR_OP(sltu, x28, x18, x10, 0x1, 0xd, 0x100, x9, 56, x7)
    11ec:	00d00913          	li	s2,13
    11f0:	10000513          	li	a0,256
    11f4:	00a93e33          	sltu	t3,s2,a0
    11f8:	03c4ac23          	sw	t3,56(s1)

000011fc <inst_15>:

inst_15:
// rs1==x2, rs2==x28, rd==x11, rs2_val == 512, 
// opcode: sltu ; op1:x2; op2:x28; dest:x11; op1val:0x4;  op2val:0x200
TEST_RR_OP(sltu, x11, x2, x28, 0x1, 0x4, 0x200, x9, 60, x7)
    11fc:	00400113          	li	sp,4
    1200:	20000e13          	li	t3,512
    1204:	01c135b3          	sltu	a1,sp,t3
    1208:	02b4ae23          	sw	a1,60(s1)

0000120c <inst_16>:

inst_16:
// rs1==x8, rs2==x30, rd==x29, rs2_val == 1024, rs1_val == 4294967231
// opcode: sltu ; op1:x8; op2:x30; dest:x29; op1val:0xffffffbf;  op2val:0x400
TEST_RR_OP(sltu, x29, x8, x30, 0x0, 0xffffffbf, 0x400, x9, 64, x17)
    120c:	fbf00413          	li	s0,-65
    1210:	40000f13          	li	t5,1024
    1214:	01e43eb3          	sltu	t4,s0,t5
    1218:	05d4a023          	sw	t4,64(s1)

0000121c <inst_17>:

inst_17:
// rs1==x22, rs2==x11, rd==x7, rs2_val == 2048, rs1_val == 128
// opcode: sltu ; op1:x22; op2:x11; dest:x7; op1val:0x80;  op2val:0x800
TEST_RR_OP(sltu, x7, x22, x11, 0x1, 0x80, 0x800, x9, 68, x17)
    121c:	08000b13          	li	s6,128
    1220:	000015b7          	lui	a1,0x1
    1224:	80058593          	addi	a1,a1,-2048 # 800 <offset+0x500>
    1228:	00bb33b3          	sltu	t2,s6,a1
    122c:	0474a223          	sw	t2,68(s1)
RVTEST_SIGBASE( x14,signature_x14_0)
    1230:	00004717          	auipc	a4,0x4
    1234:	e2870713          	addi	a4,a4,-472 # 5058 <signature_x14_0>

00001238 <inst_18>:

inst_18:
// rs1==x15, rs2==x4, rd==x9, rs2_val == 4096, rs1_val == 2097152
// opcode: sltu ; op1:x15; op2:x4; dest:x9; op1val:0x200000;  op2val:0x1000
TEST_RR_OP(sltu, x9, x15, x4, 0x0, 0x200000, 0x1000, x14, 0, x17)
    1238:	002007b7          	lui	a5,0x200
    123c:	00001237          	lui	tp,0x1
    1240:	0047b4b3          	sltu	s1,a5,tp
    1244:	00972023          	sw	s1,0(a4)

00001248 <inst_19>:

inst_19:
// rs1==x28, rs2==x12, rd==x13, rs2_val == 8192, 
// opcode: sltu ; op1:x28; op2:x12; dest:x13; op1val:0x80;  op2val:0x2000
TEST_RR_OP(sltu, x13, x28, x12, 0x1, 0x80, 0x2000, x14, 4, x17)
    1248:	08000e13          	li	t3,128
    124c:	00002637          	lui	a2,0x2
    1250:	00ce36b3          	sltu	a3,t3,a2
    1254:	00d72223          	sw	a3,4(a4)

00001258 <inst_20>:

inst_20:
// rs1==x31, rs2==x20, rd==x26, rs2_val == 16384, rs1_val == 8388608
// opcode: sltu ; op1:x31; op2:x20; dest:x26; op1val:0x800000;  op2val:0x4000
TEST_RR_OP(sltu, x26, x31, x20, 0x0, 0x800000, 0x4000, x14, 8, x17)
    1258:	00800fb7          	lui	t6,0x800
    125c:	00004a37          	lui	s4,0x4
    1260:	014fbd33          	sltu	s10,t6,s4
    1264:	01a72423          	sw	s10,8(a4)

00001268 <inst_21>:

inst_21:
// rs1==x27, rs2==x5, rd==x16, rs2_val == 32768, rs1_val == 32768
// opcode: sltu ; op1:x27; op2:x5; dest:x16; op1val:0x8000;  op2val:0x8000
TEST_RR_OP(sltu, x16, x27, x5, 0x0, 0x8000, 0x8000, x14, 12, x17)
    1268:	00008db7          	lui	s11,0x8
    126c:	000082b7          	lui	t0,0x8
    1270:	005db833          	sltu	a6,s11,t0
    1274:	01072623          	sw	a6,12(a4)

00001278 <inst_22>:

inst_22:
// rs1==x16, rs2==x0, rd==x2, rs2_val == 65536, rs1_val == 3758096383
// opcode: sltu ; op1:x16; op2:x0; dest:x2; op1val:0xdfffffff;  op2val:0x0
TEST_RR_OP(sltu, x2, x16, x0, 0x0, 0xdfffffff, 0x0, x14, 16, x17)
    1278:	e0000837          	lui	a6,0xe0000
    127c:	fff80813          	addi	a6,a6,-1 # dfffffff <_end+0xdfff9ffb>
    1280:	00000013          	nop
    1284:	00083133          	sltu	sp,a6,zero
    1288:	00272823          	sw	sp,16(a4)

0000128c <inst_23>:

inst_23:
// rs1==x11, rs2==x9, rd==x23, rs2_val == 131072, 
// opcode: sltu ; op1:x11; op2:x9; dest:x23; op1val:0x3;  op2val:0x20000
TEST_RR_OP(sltu, x23, x11, x9, 0x1, 0x3, 0x20000, x14, 20, x17)
    128c:	00300593          	li	a1,3
    1290:	000204b7          	lui	s1,0x20
    1294:	0095bbb3          	sltu	s7,a1,s1
    1298:	01772a23          	sw	s7,20(a4)

0000129c <inst_24>:

inst_24:
// rs1==x20, rs2==x21, rd==x4, rs2_val == 262144, rs1_val == 2147483648
// opcode: sltu ; op1:x20; op2:x21; dest:x4; op1val:0x80000000;  op2val:0x40000
TEST_RR_OP(sltu, x4, x20, x21, 0x0, 0x80000000, 0x40000, x14, 24, x17)
    129c:	80000a37          	lui	s4,0x80000
    12a0:	00040ab7          	lui	s5,0x40
    12a4:	015a3233          	sltu	tp,s4,s5
    12a8:	00472c23          	sw	tp,24(a4)

000012ac <inst_25>:

inst_25:
// rs1==x13, rs2==x7, rd==x27, rs2_val == 524288, rs1_val == 536870912
// opcode: sltu ; op1:x13; op2:x7; dest:x27; op1val:0x20000000;  op2val:0x80000
TEST_RR_OP(sltu, x27, x13, x7, 0x0, 0x20000000, 0x80000, x14, 28, x17)
    12ac:	200006b7          	lui	a3,0x20000
    12b0:	000803b7          	lui	t2,0x80
    12b4:	0076bdb3          	sltu	s11,a3,t2
    12b8:	01b72e23          	sw	s11,28(a4)

000012bc <inst_26>:

inst_26:
// rs1==x7, rs2==x1, rd==x18, rs2_val == 2097152, rs1_val == 8
// opcode: sltu ; op1:x7; op2:x1; dest:x18; op1val:0x8;  op2val:0x200000
TEST_RR_OP(sltu, x18, x7, x1, 0x1, 0x8, 0x200000, x14, 32, x17)
    12bc:	00800393          	li	t2,8
    12c0:	002000b7          	lui	ra,0x200
    12c4:	0013b933          	sltu	s2,t2,ra
    12c8:	03272023          	sw	s2,32(a4)

000012cc <inst_27>:

inst_27:
// rs1==x1, rs2==x27, rd==x22, rs2_val == 4194304, rs1_val == 4293918719
// opcode: sltu ; op1:x1; op2:x27; dest:x22; op1val:0xffefffff;  op2val:0x400000
TEST_RR_OP(sltu, x22, x1, x27, 0x0, 0xffefffff, 0x400000, x14, 36, x17)
    12cc:	fff000b7          	lui	ra,0xfff00
    12d0:	fff08093          	addi	ra,ra,-1 # ffefffff <_end+0xffef9ffb>
    12d4:	00400db7          	lui	s11,0x400
    12d8:	01b0bb33          	sltu	s6,ra,s11
    12dc:	03672223          	sw	s6,36(a4)

000012e0 <inst_28>:

inst_28:
// rs1==x9, rs2==x23, rd==x21, rs2_val == 8388608, rs1_val == 2863311530
// opcode: sltu ; op1:x9; op2:x23; dest:x21; op1val:0xaaaaaaaa;  op2val:0x800000
TEST_RR_OP(sltu, x21, x9, x23, 0x0, 0xaaaaaaaa, 0x800000, x14, 40, x17)
    12e0:	aaaab4b7          	lui	s1,0xaaaab
    12e4:	aaa48493          	addi	s1,s1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    12e8:	00800bb7          	lui	s7,0x800
    12ec:	0174bab3          	sltu	s5,s1,s7
    12f0:	03572423          	sw	s5,40(a4)

000012f4 <inst_29>:

inst_29:
// rs1==x6, rs2==x2, rd==x30, rs2_val == 16777216, 
// opcode: sltu ; op1:x6; op2:x2; dest:x30; op1val:0x66666667;  op2val:0x1000000
TEST_RR_OP(sltu, x30, x6, x2, 0x0, 0x66666667, 0x1000000, x14, 44, x17)
    12f4:	66666337          	lui	t1,0x66666
    12f8:	66730313          	addi	t1,t1,1639 # 66666667 <_end+0x66660663>
    12fc:	01000137          	lui	sp,0x1000
    1300:	00233f33          	sltu	t5,t1,sp
    1304:	03e72623          	sw	t5,44(a4)

00001308 <inst_30>:

inst_30:
// rs1==x10, rs2==x3, rd==x15, rs2_val == 33554432, rs1_val == 4227858431
// opcode: sltu ; op1:x10; op2:x3; dest:x15; op1val:0xfbffffff;  op2val:0x2000000
TEST_RR_OP(sltu, x15, x10, x3, 0x0, 0xfbffffff, 0x2000000, x14, 48, x17)
    1308:	fc000537          	lui	a0,0xfc000
    130c:	fff50513          	addi	a0,a0,-1 # fbffffff <_end+0xfbff9ffb>
    1310:	020001b7          	lui	gp,0x2000
    1314:	003537b3          	sltu	a5,a0,gp
    1318:	02f72823          	sw	a5,48(a4)

0000131c <inst_31>:

inst_31:
// rs1==x24, rs2==x15, rd==x8, rs2_val == 67108864, rs1_val == 256
// opcode: sltu ; op1:x24; op2:x15; dest:x8; op1val:0x100;  op2val:0x4000000
TEST_RR_OP(sltu, x8, x24, x15, 0x1, 0x100, 0x4000000, x14, 52, x17)
    131c:	10000c13          	li	s8,256
    1320:	040007b7          	lui	a5,0x4000
    1324:	00fc3433          	sltu	s0,s8,a5
    1328:	02872a23          	sw	s0,52(a4)

0000132c <inst_32>:

inst_32:
// rs2_val == 134217728, rs1_val == 4294959103
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffffdfff;  op2val:0x8000000
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xffffdfff, 0x8000000, x14, 56, x1)
    132c:	ffffe537          	lui	a0,0xffffe
    1330:	fff50513          	addi	a0,a0,-1 # ffffdfff <_end+0xffff7ffb>
    1334:	080005b7          	lui	a1,0x8000
    1338:	00b53633          	sltu	a2,a0,a1
    133c:	02c72c23          	sw	a2,56(a4)

00001340 <inst_33>:

inst_33:
// rs2_val == 268435456, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x40000000;  op2val:0x10000000
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x40000000, 0x10000000, x14, 60, x1)
    1340:	40000537          	lui	a0,0x40000
    1344:	100005b7          	lui	a1,0x10000
    1348:	00b53633          	sltu	a2,a0,a1
    134c:	02c72e23          	sw	a2,60(a4)

00001350 <inst_34>:

inst_34:
// rs2_val == 536870912, rs1_val == 4278190079
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfeffffff;  op2val:0x20000000
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xfeffffff, 0x20000000, x14, 64, x1)
    1350:	ff000537          	lui	a0,0xff000
    1354:	fff50513          	addi	a0,a0,-1 # feffffff <_end+0xfeff9ffb>
    1358:	200005b7          	lui	a1,0x20000
    135c:	00b53633          	sltu	a2,a0,a1
    1360:	04c72023          	sw	a2,64(a4)

00001364 <inst_35>:

inst_35:
// rs2_val == 1073741824, rs1_val == 268435456
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000000;  op2val:0x40000000
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x10000000, 0x40000000, x14, 68, x1)
    1364:	10000537          	lui	a0,0x10000
    1368:	400005b7          	lui	a1,0x40000
    136c:	00b53633          	sltu	a2,a0,a1
    1370:	04c72223          	sw	a2,68(a4)

00001374 <inst_36>:

inst_36:
// rs2_val == 2147483648, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x40000000;  op2val:0x80000000
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x40000000, 0x80000000, x14, 72, x1)
    1374:	40000537          	lui	a0,0x40000
    1378:	800005b7          	lui	a1,0x80000
    137c:	00b53633          	sltu	a2,a0,a1
    1380:	04c72423          	sw	a2,72(a4)

00001384 <inst_37>:

inst_37:
// rs2_val == 4294967293, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0xfffffffd
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333333, 0xfffffffd, x14, 76, x1)
    1384:	33333537          	lui	a0,0x33333
    1388:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    138c:	ffd00593          	li	a1,-3
    1390:	00b53633          	sltu	a2,a0,a1
    1394:	04c72623          	sw	a2,76(a4)

00001398 <inst_38>:

inst_38:
// rs2_val == 4294967291, rs1_val == 262144
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x40000;  op2val:0xfffffffb
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x40000, 0xfffffffb, x14, 80, x1)
    1398:	00040537          	lui	a0,0x40
    139c:	ffb00593          	li	a1,-5
    13a0:	00b53633          	sltu	a2,a0,a1
    13a4:	04c72823          	sw	a2,80(a4)

000013a8 <inst_39>:

inst_39:
// rs2_val == 4294967287, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0xfffffff7
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x66666666, 0xfffffff7, x14, 84, x1)
    13a8:	66666537          	lui	a0,0x66666
    13ac:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    13b0:	ff700593          	li	a1,-9
    13b4:	00b53633          	sltu	a2,a0,a1
    13b8:	04c72a23          	sw	a2,84(a4)

000013bc <inst_40>:

inst_40:
// rs2_val == 4294967279, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0xffffffef
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x3, 0xffffffef, x14, 88, x1)
    13bc:	00300513          	li	a0,3
    13c0:	fef00593          	li	a1,-17
    13c4:	00b53633          	sltu	a2,a0,a1
    13c8:	04c72c23          	sw	a2,88(a4)

000013cc <inst_41>:

inst_41:
// rs2_val == 4294967263, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb;  op2val:0xffffffdf
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb, 0xffffffdf, x14, 92, x1)
    13cc:	00b00513          	li	a0,11
    13d0:	fdf00593          	li	a1,-33
    13d4:	00b53633          	sltu	a2,a0,a1
    13d8:	04c72e23          	sw	a2,92(a4)

000013dc <inst_42>:

inst_42:
// rs2_val == 4294967231, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xa;  op2val:0xffffffbf
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xa, 0xffffffbf, x14, 96, x1)
    13dc:	00a00513          	li	a0,10
    13e0:	fbf00593          	li	a1,-65
    13e4:	00b53633          	sltu	a2,a0,a1
    13e8:	06c72023          	sw	a2,96(a4)

000013ec <inst_43>:

inst_43:
// rs2_val == 4294967167, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x80;  op2val:0xffffff7f
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x80, 0xffffff7f, x14, 100, x1)
    13ec:	08000513          	li	a0,128
    13f0:	f7f00593          	li	a1,-129
    13f4:	00b53633          	sltu	a2,a0,a1
    13f8:	06c72223          	sw	a2,100(a4)

000013fc <inst_44>:

inst_44:
// rs2_val == 4294967039, rs1_val == 4294967287
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffffff7;  op2val:0xfffffeff
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xfffffff7, 0xfffffeff, x14, 104, x1)
    13fc:	ff700513          	li	a0,-9
    1400:	eff00593          	li	a1,-257
    1404:	00b53633          	sltu	a2,a0,a1
    1408:	06c72423          	sw	a2,104(a4)

0000140c <inst_45>:

inst_45:
// rs2_val == 4294966783, rs1_val == 16777216
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1000000;  op2val:0xfffffdff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x1000000, 0xfffffdff, x14, 108, x1)
    140c:	01000537          	lui	a0,0x1000
    1410:	dff00593          	li	a1,-513
    1414:	00b53633          	sltu	a2,a0,a1
    1418:	06c72623          	sw	a2,108(a4)

0000141c <inst_46>:

inst_46:
// rs2_val == 4294966271, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffffff7;  op2val:0xfffffbff
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xfffffff7, 0xfffffbff, x14, 112, x1)
    141c:	ff700513          	li	a0,-9
    1420:	bff00593          	li	a1,-1025
    1424:	00b53633          	sltu	a2,a0,a1
    1428:	06c72823          	sw	a2,112(a4)

0000142c <inst_47>:

inst_47:
// rs2_val == 4294965247, rs1_val == 8192
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2000;  op2val:0xfffff7ff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x2000, 0xfffff7ff, x14, 116, x1)
    142c:	00002537          	lui	a0,0x2
    1430:	fffff5b7          	lui	a1,0xfffff
    1434:	7ff58593          	addi	a1,a1,2047 # fffff7ff <_end+0xffff97fb>
    1438:	00b53633          	sltu	a2,a0,a1
    143c:	06c72a23          	sw	a2,116(a4)

00001440 <inst_48>:

inst_48:
// rs2_val == 4294963199, rs1_val == 4294443007
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfff7ffff;  op2val:0xffffefff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xfff7ffff, 0xffffefff, x14, 120, x1)
    1440:	fff80537          	lui	a0,0xfff80
    1444:	fff50513          	addi	a0,a0,-1 # fff7ffff <_end+0xfff79ffb>
    1448:	fffff5b7          	lui	a1,0xfffff
    144c:	fff58593          	addi	a1,a1,-1 # ffffefff <_end+0xffff8ffb>
    1450:	00b53633          	sltu	a2,a0,a1
    1454:	06c72c23          	sw	a2,120(a4)

00001458 <inst_49>:

inst_49:
// rs2_val == 4294959103, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0xffffdfff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x5, 0xffffdfff, x14, 124, x1)
    1458:	00500513          	li	a0,5
    145c:	ffffe5b7          	lui	a1,0xffffe
    1460:	fff58593          	addi	a1,a1,-1 # ffffdfff <_end+0xffff7ffb>
    1464:	00b53633          	sltu	a2,a0,a1
    1468:	06c72e23          	sw	a2,124(a4)

0000146c <inst_50>:

inst_50:
// rs2_val == 4294950911, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0xffffbfff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xfffe, 0xffffbfff, x14, 128, x1)
    146c:	00010537          	lui	a0,0x10
    1470:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    1474:	ffffc5b7          	lui	a1,0xffffc
    1478:	fff58593          	addi	a1,a1,-1 # ffffbfff <_end+0xffff5ffb>
    147c:	00b53633          	sltu	a2,a0,a1
    1480:	08c72023          	sw	a2,128(a4)

00001484 <inst_51>:

inst_51:
// rs2_val == 4294934527, rs1_val == 4294836223
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffdffff;  op2val:0xffff7fff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xfffdffff, 0xffff7fff, x14, 132, x1)
    1484:	fffe0537          	lui	a0,0xfffe0
    1488:	fff50513          	addi	a0,a0,-1 # fffdffff <_end+0xfffd9ffb>
    148c:	ffff85b7          	lui	a1,0xffff8
    1490:	fff58593          	addi	a1,a1,-1 # ffff7fff <_end+0xffff1ffb>
    1494:	00b53633          	sltu	a2,a0,a1
    1498:	08c72223          	sw	a2,132(a4)

0000149c <inst_52>:

inst_52:
// rs2_val == 4294901759, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xa;  op2val:0xfffeffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xa, 0xfffeffff, x14, 136, x1)
    149c:	00a00513          	li	a0,10
    14a0:	ffff05b7          	lui	a1,0xffff0
    14a4:	fff58593          	addi	a1,a1,-1 # fffeffff <_end+0xfffe9ffb>
    14a8:	00b53633          	sltu	a2,a0,a1
    14ac:	08c72423          	sw	a2,136(a4)

000014b0 <inst_53>:

inst_53:
// rs2_val == 4294836223, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfff7ffff;  op2val:0xfffdffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xfff7ffff, 0xfffdffff, x14, 140, x1)
    14b0:	fff80537          	lui	a0,0xfff80
    14b4:	fff50513          	addi	a0,a0,-1 # fff7ffff <_end+0xfff79ffb>
    14b8:	fffe05b7          	lui	a1,0xfffe0
    14bc:	fff58593          	addi	a1,a1,-1 # fffdffff <_end+0xfffd9ffb>
    14c0:	00b53633          	sltu	a2,a0,a1
    14c4:	08c72623          	sw	a2,140(a4)

000014c8 <inst_54>:

inst_54:
// rs2_val == 4294705151, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x8000;  op2val:0xfffbffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x8000, 0xfffbffff, x14, 144, x1)
    14c8:	00008537          	lui	a0,0x8
    14cc:	fffc05b7          	lui	a1,0xfffc0
    14d0:	fff58593          	addi	a1,a1,-1 # fffbffff <_end+0xfffb9ffb>
    14d4:	00b53633          	sltu	a2,a0,a1
    14d8:	08c72823          	sw	a2,144(a4)

000014dc <inst_55>:

inst_55:
// rs2_val == 4294443007, rs1_val == 64
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x40;  op2val:0xfff7ffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x40, 0xfff7ffff, x14, 148, x1)
    14dc:	04000513          	li	a0,64
    14e0:	fff805b7          	lui	a1,0xfff80
    14e4:	fff58593          	addi	a1,a1,-1 # fff7ffff <_end+0xfff79ffb>
    14e8:	00b53633          	sltu	a2,a0,a1
    14ec:	08c72a23          	sw	a2,148(a4)

000014f0 <inst_56>:

inst_56:
// rs2_val == 4293918719, rs1_val == 16
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10;  op2val:0xffefffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x10, 0xffefffff, x14, 152, x1)
    14f0:	01000513          	li	a0,16
    14f4:	fff005b7          	lui	a1,0xfff00
    14f8:	fff58593          	addi	a1,a1,-1 # ffefffff <_end+0xffef9ffb>
    14fc:	00b53633          	sltu	a2,a0,a1
    1500:	08c72c23          	sw	a2,152(a4)

00001504 <inst_57>:

inst_57:
// rs2_val == 4292870143, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xffdfffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x0, 0xffdfffff, x14, 156, x1)
    1504:	00000513          	li	a0,0
    1508:	ffe005b7          	lui	a1,0xffe00
    150c:	fff58593          	addi	a1,a1,-1 # ffdfffff <_end+0xffdf9ffb>
    1510:	00b53633          	sltu	a2,a0,a1
    1514:	08c72e23          	sw	a2,156(a4)

00001518 <inst_58>:

inst_58:
// rs2_val == 4290772991, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0xffbfffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x4, 0xffbfffff, x14, 160, x1)
    1518:	00400513          	li	a0,4
    151c:	ffc005b7          	lui	a1,0xffc00
    1520:	fff58593          	addi	a1,a1,-1 # ffbfffff <_end+0xffbf9ffb>
    1524:	00b53633          	sltu	a2,a0,a1
    1528:	0ac72023          	sw	a2,160(a4)

0000152c <inst_59>:

inst_59:
// rs2_val == 4286578687, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0xff7fffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xfffe, 0xff7fffff, x14, 164, x1)
    152c:	00010537          	lui	a0,0x10
    1530:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    1534:	ff8005b7          	lui	a1,0xff800
    1538:	fff58593          	addi	a1,a1,-1 # ff7fffff <_end+0xff7f9ffb>
    153c:	00b53633          	sltu	a2,a0,a1
    1540:	0ac72223          	sw	a2,164(a4)

00001544 <inst_60>:

inst_60:
// rs2_val == 4278190079, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0xfeffffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x5, 0xfeffffff, x14, 168, x1)
    1544:	00500513          	li	a0,5
    1548:	ff0005b7          	lui	a1,0xff000
    154c:	fff58593          	addi	a1,a1,-1 # feffffff <_end+0xfeff9ffb>
    1550:	00b53633          	sltu	a2,a0,a1
    1554:	0ac72423          	sw	a2,168(a4)

00001558 <inst_61>:

inst_61:
// rs2_val == 4261412863, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x800000;  op2val:0xfdffffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x800000, 0xfdffffff, x14, 172, x1)
    1558:	00800537          	lui	a0,0x800
    155c:	fe0005b7          	lui	a1,0xfe000
    1560:	fff58593          	addi	a1,a1,-1 # fdffffff <_end+0xfdff9ffb>
    1564:	00b53633          	sltu	a2,a0,a1
    1568:	0ac72623          	sw	a2,172(a4)

0000156c <inst_62>:

inst_62:
// rs2_val == 4227858431, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0xfbffffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb503, 0xfbffffff, x14, 176, x1)
    156c:	0000b537          	lui	a0,0xb
    1570:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    1574:	fc0005b7          	lui	a1,0xfc000
    1578:	fff58593          	addi	a1,a1,-1 # fbffffff <_end+0xfbff9ffb>
    157c:	00b53633          	sltu	a2,a0,a1
    1580:	0ac72823          	sw	a2,176(a4)

00001584 <inst_63>:

inst_63:
// rs2_val == 4160749567, rs1_val == 1431655765
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0xf7ffffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x55555555, 0xf7ffffff, x14, 180, x1)
    1584:	55555537          	lui	a0,0x55555
    1588:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    158c:	f80005b7          	lui	a1,0xf8000
    1590:	fff58593          	addi	a1,a1,-1 # f7ffffff <_end+0xf7ff9ffb>
    1594:	00b53633          	sltu	a2,a0,a1
    1598:	0ac72a23          	sw	a2,180(a4)

0000159c <inst_64>:

inst_64:
// rs2_val == 4026531839, rs1_val == 4292870143
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffdfffff;  op2val:0xefffffff
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xffdfffff, 0xefffffff, x14, 184, x1)
    159c:	ffe00537          	lui	a0,0xffe00
    15a0:	fff50513          	addi	a0,a0,-1 # ffdfffff <_end+0xffdf9ffb>
    15a4:	f00005b7          	lui	a1,0xf0000
    15a8:	fff58593          	addi	a1,a1,-1 # efffffff <_end+0xefff9ffb>
    15ac:	00b53633          	sltu	a2,a0,a1
    15b0:	0ac72c23          	sw	a2,184(a4)

000015b4 <inst_65>:

inst_65:
// rs2_val == 3758096383, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0xdfffffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x3, 0xdfffffff, x14, 188, x1)
    15b4:	00300513          	li	a0,3
    15b8:	e00005b7          	lui	a1,0xe0000
    15bc:	fff58593          	addi	a1,a1,-1 # dfffffff <_end+0xdfff9ffb>
    15c0:	00b53633          	sltu	a2,a0,a1
    15c4:	0ac72e23          	sw	a2,188(a4)

000015c8 <inst_66>:

inst_66:
// rs2_val == 3221225471, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x800;  op2val:0xbfffffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x800, 0xbfffffff, x14, 192, x1)
    15c8:	00001537          	lui	a0,0x1
    15cc:	80050513          	addi	a0,a0,-2048 # 800 <offset+0x500>
    15d0:	c00005b7          	lui	a1,0xc0000
    15d4:	fff58593          	addi	a1,a1,-1 # bfffffff <_end+0xbfff9ffb>
    15d8:	00b53633          	sltu	a2,a0,a1
    15dc:	0cc72023          	sw	a2,192(a4)

000015e0 <inst_67>:

inst_67:
// rs2_val == 2147483647, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x800000;  op2val:0x7fffffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x800000, 0x7fffffff, x14, 196, x1)
    15e0:	00800537          	lui	a0,0x800
    15e4:	800005b7          	lui	a1,0x80000
    15e8:	fff58593          	addi	a1,a1,-1 # 7fffffff <_end+0x7fff9ffb>
    15ec:	00b53633          	sltu	a2,a0,a1
    15f0:	0cc72223          	sw	a2,196(a4)

000015f4 <inst_68>:

inst_68:
// rs2_val == 1431655765, rs1_val == 4290772991
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffbfffff;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xffbfffff, 0x55555555, x14, 200, x1)
    15f4:	ffc00537          	lui	a0,0xffc00
    15f8:	fff50513          	addi	a0,a0,-1 # ffbfffff <_end+0xffbf9ffb>
    15fc:	555555b7          	lui	a1,0x55555
    1600:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    1604:	00b53633          	sltu	a2,a0,a1
    1608:	0cc72423          	sw	a2,200(a4)

0000160c <inst_69>:

inst_69:
// rs2_val == 2863311530, rs1_val==1431655764 and rs2_val==2863311530
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0xaaaaaaaa
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x55555554, 0xaaaaaaaa, x14, 204, x1)
    160c:	55555537          	lui	a0,0x55555
    1610:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    1614:	aaaab5b7          	lui	a1,0xaaaab
    1618:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    161c:	00b53633          	sltu	a2,a0,a1
    1620:	0cc72623          	sw	a2,204(a4)

00001624 <inst_70>:

inst_70:
// rs1_val == 2, rs1_val==2 and rs2_val==1717986917
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x66666665
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x2, 0x66666665, x14, 208, x1)
    1624:	00200513          	li	a0,2
    1628:	666665b7          	lui	a1,0x66666
    162c:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    1630:	00b53633          	sltu	a2,a0,a1
    1634:	0cc72823          	sw	a2,208(a4)

00001638 <inst_71>:

inst_71:
// rs1_val == 32, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x20;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x20, 0xb504, x14, 212, x1)
    1638:	02000513          	li	a0,32
    163c:	0000b5b7          	lui	a1,0xb
    1640:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    1644:	00b53633          	sltu	a2,a0,a1
    1648:	0cc72a23          	sw	a2,212(a4)

0000164c <inst_72>:

inst_72:
// rs1_val == 512, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x200;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x200, 0x3, x14, 216, x1)
    164c:	20000513          	li	a0,512
    1650:	00300593          	li	a1,3
    1654:	00b53633          	sltu	a2,a0,a1
    1658:	0cc72c23          	sw	a2,216(a4)

0000165c <inst_73>:

inst_73:
// rs1_val == 4096, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1000;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x1000, 0x3, x14, 220, x1)
    165c:	00001537          	lui	a0,0x1
    1660:	00300593          	li	a1,3
    1664:	00b53633          	sltu	a2,a0,a1
    1668:	0cc72e23          	sw	a2,220(a4)

0000166c <inst_74>:

inst_74:
// rs1_val == 16384, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4000;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x4000, 0x0, x14, 224, x1)
    166c:	00004537          	lui	a0,0x4
    1670:	00000593          	li	a1,0
    1674:	00b53633          	sltu	a2,a0,a1
    1678:	0ec72023          	sw	a2,224(a4)

0000167c <inst_75>:

inst_75:
// rs1_val == 65536, rs1_val==65536 and rs2_val==5
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:0x5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x10000, 0x5, x14, 228, x1)
    167c:	00010537          	lui	a0,0x10
    1680:	00500593          	li	a1,5
    1684:	00b53633          	sltu	a2,a0,a1
    1688:	0ec72223          	sw	a2,228(a4)

0000168c <inst_76>:

inst_76:
// rs1_val == 131072, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x20000;  op2val:0x20000
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x20000, 0x20000, x14, 232, x1)
    168c:	00020537          	lui	a0,0x20
    1690:	000205b7          	lui	a1,0x20
    1694:	00b53633          	sltu	a2,a0,a1
    1698:	0ec72423          	sw	a2,232(a4)

0000169c <inst_77>:

inst_77:
// rs1_val == 524288, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x80000;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x80000, 0x55555554, x14, 236, x1)
    169c:	00080537          	lui	a0,0x80
    16a0:	555555b7          	lui	a1,0x55555
    16a4:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    16a8:	00b53633          	sltu	a2,a0,a1
    16ac:	0ec72623          	sw	a2,236(a4)

000016b0 <inst_78>:

inst_78:
// rs1_val == 4194304, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x400000;  op2val:0x200000
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x400000, 0x200000, x14, 240, x1)
    16b0:	00400537          	lui	a0,0x400
    16b4:	002005b7          	lui	a1,0x200
    16b8:	00b53633          	sltu	a2,a0,a1
    16bc:	0ec72823          	sw	a2,240(a4)

000016c0 <inst_79>:

inst_79:
// rs1_val == 67108864, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4000000;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x4000000, 0x55555555, x14, 244, x1)
    16c0:	04000537          	lui	a0,0x4000
    16c4:	555555b7          	lui	a1,0x55555
    16c8:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    16cc:	00b53633          	sltu	a2,a0,a1
    16d0:	0ec72a23          	sw	a2,244(a4)

000016d4 <inst_80>:

inst_80:
// rs1_val == 134217728, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x8000000;  op2val:0xfffdffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x8000000, 0xfffdffff, x14, 248, x1)
    16d4:	08000537          	lui	a0,0x8000
    16d8:	fffe05b7          	lui	a1,0xfffe0
    16dc:	fff58593          	addi	a1,a1,-1 # fffdffff <_end+0xfffd9ffb>
    16e0:	00b53633          	sltu	a2,a0,a1
    16e4:	0ec72c23          	sw	a2,248(a4)

000016e8 <inst_81>:

inst_81:
// rs1_val == 4294967293, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffffffd;  op2val:0x11
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xfffffffd, 0x11, x14, 252, x1)
    16e8:	ffd00513          	li	a0,-3
    16ec:	01100593          	li	a1,17
    16f0:	00b53633          	sltu	a2,a0,a1
    16f4:	0ec72e23          	sw	a2,252(a4)

000016f8 <inst_82>:

inst_82:
// rs1_val == 4294967291, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffffffb;  op2val:0xffffff7f
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xfffffffb, 0xffffff7f, x14, 256, x1)
    16f8:	ffb00513          	li	a0,-5
    16fc:	f7f00593          	li	a1,-129
    1700:	00b53633          	sltu	a2,a0,a1
    1704:	10c72023          	sw	a2,256(a4)

00001708 <inst_83>:

inst_83:
// rs1_val == 4294967279, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffffffef;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xffffffef, 0x33333334, x14, 260, x1)
    1708:	fef00513          	li	a0,-17
    170c:	333335b7          	lui	a1,0x33333
    1710:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    1714:	00b53633          	sltu	a2,a0,a1
    1718:	10c72223          	sw	a2,260(a4)

0000171c <inst_84>:

inst_84:
// rs1_val == 4294967263, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffffffdf;  op2val:0xfffbffff
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xffffffdf, 0xfffbffff, x14, 264, x1)
    171c:	fdf00513          	li	a0,-33
    1720:	fffc05b7          	lui	a1,0xfffc0
    1724:	fff58593          	addi	a1,a1,-1 # fffbffff <_end+0xfffb9ffb>
    1728:	00b53633          	sltu	a2,a0,a1
    172c:	10c72423          	sw	a2,264(a4)

00001730 <inst_85>:

inst_85:
// rs1_val == 4294967167, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffffff7f;  op2val:0x1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xffffff7f, 0x1, x14, 268, x1)
    1730:	f7f00513          	li	a0,-129
    1734:	00100593          	li	a1,1
    1738:	00b53633          	sltu	a2,a0,a1
    173c:	10c72623          	sw	a2,268(a4)

00001740 <inst_86>:

inst_86:
// rs1_val == 4294967039, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffffeff;  op2val:0x40000000
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xfffffeff, 0x40000000, x14, 272, x1)
    1740:	eff00513          	li	a0,-257
    1744:	400005b7          	lui	a1,0x40000
    1748:	00b53633          	sltu	a2,a0,a1
    174c:	10c72823          	sw	a2,272(a4)

00001750 <inst_87>:

inst_87:
// rs1_val == 4294966783, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffffdff;  op2val:0xa
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xfffffdff, 0xa, x14, 276, x1)
    1750:	dff00513          	li	a0,-513
    1754:	00a00593          	li	a1,10
    1758:	00b53633          	sltu	a2,a0,a1
    175c:	10c72a23          	sw	a2,276(a4)

00001760 <inst_88>:

inst_88:
// rs1_val == 4294966271, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffffbff;  op2val:0xf7ffffff
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xfffffbff, 0xf7ffffff, x14, 280, x1)
    1760:	bff00513          	li	a0,-1025
    1764:	f80005b7          	lui	a1,0xf8000
    1768:	fff58593          	addi	a1,a1,-1 # f7ffffff <_end+0xf7ff9ffb>
    176c:	00b53633          	sltu	a2,a0,a1
    1770:	10c72c23          	sw	a2,280(a4)

00001774 <inst_89>:

inst_89:
// rs1_val == 4294963199, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffffefff;  op2val:0x100000
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xffffefff, 0x100000, x14, 284, x1)
    1774:	fffff537          	lui	a0,0xfffff
    1778:	fff50513          	addi	a0,a0,-1 # ffffefff <_end+0xffff8ffb>
    177c:	001005b7          	lui	a1,0x100
    1780:	00b53633          	sltu	a2,a0,a1
    1784:	10c72e23          	sw	a2,284(a4)

00001788 <inst_90>:

inst_90:
// rs1_val == 4294950911, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffffbfff;  op2val:0x8000
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xffffbfff, 0x8000, x14, 288, x1)
    1788:	ffffc537          	lui	a0,0xffffc
    178c:	fff50513          	addi	a0,a0,-1 # ffffbfff <_end+0xffff5ffb>
    1790:	000085b7          	lui	a1,0x8
    1794:	00b53633          	sltu	a2,a0,a1
    1798:	12c72023          	sw	a2,288(a4)

0000179c <inst_91>:

inst_91:
// rs1_val == 4294934527, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff7fff;  op2val:0xfffeffff
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xffff7fff, 0xfffeffff, x14, 292, x1)
    179c:	ffff8537          	lui	a0,0xffff8
    17a0:	fff50513          	addi	a0,a0,-1 # ffff7fff <_end+0xffff1ffb>
    17a4:	ffff05b7          	lui	a1,0xffff0
    17a8:	fff58593          	addi	a1,a1,-1 # fffeffff <_end+0xfffe9ffb>
    17ac:	00b53633          	sltu	a2,a0,a1
    17b0:	12c72223          	sw	a2,292(a4)

000017b4 <inst_92>:

inst_92:
// rs1_val == 4294901759, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffeffff;  op2val:0xfffff7ff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xfffeffff, 0xfffff7ff, x14, 296, x1)
    17b4:	ffff0537          	lui	a0,0xffff0
    17b8:	fff50513          	addi	a0,a0,-1 # fffeffff <_end+0xfffe9ffb>
    17bc:	fffff5b7          	lui	a1,0xfffff
    17c0:	7ff58593          	addi	a1,a1,2047 # fffff7ff <_end+0xffff97fb>
    17c4:	00b53633          	sltu	a2,a0,a1
    17c8:	12c72423          	sw	a2,296(a4)

000017cc <inst_93>:

inst_93:
// rs1_val == 4294705151, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffbffff;  op2val:0xfff7ffff
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xfffbffff, 0xfff7ffff, x14, 300, x1)
    17cc:	fffc0537          	lui	a0,0xfffc0
    17d0:	fff50513          	addi	a0,a0,-1 # fffbffff <_end+0xfffb9ffb>
    17d4:	fff805b7          	lui	a1,0xfff80
    17d8:	fff58593          	addi	a1,a1,-1 # fff7ffff <_end+0xfff79ffb>
    17dc:	00b53633          	sltu	a2,a0,a1
    17e0:	12c72623          	sw	a2,300(a4)

000017e4 <inst_94>:

inst_94:
// rs1_val == 4286578687, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xff7fffff;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xff7fffff, 0x2, x14, 304, x1)
    17e4:	ff800537          	lui	a0,0xff800
    17e8:	fff50513          	addi	a0,a0,-1 # ff7fffff <_end+0xff7f9ffb>
    17ec:	00200593          	li	a1,2
    17f0:	00b53633          	sltu	a2,a0,a1
    17f4:	12c72823          	sw	a2,304(a4)

000017f8 <inst_95>:

inst_95:
// rs1_val == 4261412863, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfdffffff;  op2val:0xbfffffff
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xfdffffff, 0xbfffffff, x14, 308, x1)
    17f8:	fe000537          	lui	a0,0xfe000
    17fc:	fff50513          	addi	a0,a0,-1 # fdffffff <_end+0xfdff9ffb>
    1800:	c00005b7          	lui	a1,0xc0000
    1804:	fff58593          	addi	a1,a1,-1 # bfffffff <_end+0xbfff9ffb>
    1808:	00b53633          	sltu	a2,a0,a1
    180c:	12c72a23          	sw	a2,308(a4)

00001810 <inst_96>:

inst_96:
// rs1_val == 4026531839, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xefffffff;  op2val:0x800
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xefffffff, 0x800, x14, 312, x1)
    1810:	f0000537          	lui	a0,0xf0000
    1814:	fff50513          	addi	a0,a0,-1 # efffffff <_end+0xefff9ffb>
    1818:	000015b7          	lui	a1,0x1
    181c:	80058593          	addi	a1,a1,-2048 # 800 <offset+0x500>
    1820:	00b53633          	sltu	a2,a0,a1
    1824:	12c72c23          	sw	a2,312(a4)

00001828 <inst_97>:

inst_97:
// rs1_val == 3221225471, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xbfffffff;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xbfffffff, 0x4, x14, 316, x1)
    1828:	c0000537          	lui	a0,0xc0000
    182c:	fff50513          	addi	a0,a0,-1 # bfffffff <_end+0xbfff9ffb>
    1830:	00400593          	li	a1,4
    1834:	00b53633          	sltu	a2,a0,a1
    1838:	12c72e23          	sw	a2,316(a4)

0000183c <inst_98>:

inst_98:
// rs1_val==3 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x3, 0x3, x14, 320, x1)
    183c:	00300513          	li	a0,3
    1840:	00300593          	li	a1,3
    1844:	00b53633          	sltu	a2,a0,a1
    1848:	14c72023          	sw	a2,320(a4)

0000184c <inst_99>:

inst_99:
// rs1_val==3 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x3, 0x55555555, x14, 324, x1)
    184c:	00300513          	li	a0,3
    1850:	555555b7          	lui	a1,0x55555
    1854:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    1858:	00b53633          	sltu	a2,a0,a1
    185c:	14c72223          	sw	a2,324(a4)

00001860 <inst_100>:

inst_100:
// rs1_val==3 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0xaaaaaaaa
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x3, 0xaaaaaaaa, x14, 328, x1)
    1860:	00300513          	li	a0,3
    1864:	aaaab5b7          	lui	a1,0xaaaab
    1868:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    186c:	00b53633          	sltu	a2,a0,a1
    1870:	14c72423          	sw	a2,328(a4)

00001874 <inst_101>:

inst_101:
// rs1_val==3 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x5
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x3, 0x5, x14, 332, x1)
    1874:	00300513          	li	a0,3
    1878:	00500593          	li	a1,5
    187c:	00b53633          	sltu	a2,a0,a1
    1880:	14c72623          	sw	a2,332(a4)

00001884 <inst_102>:

inst_102:
// rs1_val==3 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x33333333
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x3, 0x33333333, x14, 336, x1)
    1884:	00300513          	li	a0,3
    1888:	333335b7          	lui	a1,0x33333
    188c:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    1890:	00b53633          	sltu	a2,a0,a1
    1894:	14c72823          	sw	a2,336(a4)

00001898 <inst_103>:

inst_103:
// rs1_val==3 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x66666666
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x3, 0x66666666, x14, 340, x1)
    1898:	00300513          	li	a0,3
    189c:	666665b7          	lui	a1,0x66666
    18a0:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    18a4:	00b53633          	sltu	a2,a0,a1
    18a8:	14c72a23          	sw	a2,340(a4)

000018ac <inst_104>:

inst_104:
// rs1_val==3 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x3, 0xb504, x14, 344, x1)
    18ac:	00300513          	li	a0,3
    18b0:	0000b5b7          	lui	a1,0xb
    18b4:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    18b8:	00b53633          	sltu	a2,a0,a1
    18bc:	14c72c23          	sw	a2,344(a4)

000018c0 <inst_105>:

inst_105:
// rs1_val==3 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x3, 0x0, x14, 348, x1)
    18c0:	00300513          	li	a0,3
    18c4:	00000593          	li	a1,0
    18c8:	00b53633          	sltu	a2,a0,a1
    18cc:	14c72e23          	sw	a2,348(a4)

000018d0 <inst_106>:

inst_106:
// rs1_val==3 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0xffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x3, 0xffff, x14, 352, x1)
    18d0:	00300513          	li	a0,3
    18d4:	000105b7          	lui	a1,0x10
    18d8:	fff58593          	addi	a1,a1,-1 # ffff <_end+0x9ffb>
    18dc:	00b53633          	sltu	a2,a0,a1
    18e0:	16c72023          	sw	a2,352(a4)

000018e4 <inst_107>:

inst_107:
// rs1_val==3 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x3, 0x2, x14, 356, x1)
    18e4:	00300513          	li	a0,3
    18e8:	00200593          	li	a1,2
    18ec:	00b53633          	sltu	a2,a0,a1
    18f0:	16c72223          	sw	a2,356(a4)

000018f4 <inst_108>:

inst_108:
// rs1_val==3 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x3, 0x55555554, x14, 360, x1)
    18f4:	00300513          	li	a0,3
    18f8:	555555b7          	lui	a1,0x55555
    18fc:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    1900:	00b53633          	sltu	a2,a0,a1
    1904:	16c72423          	sw	a2,360(a4)

00001908 <inst_109>:

inst_109:
// rs1_val==3 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0xaaaaaaa9
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x3, 0xaaaaaaa9, x14, 364, x1)
    1908:	00300513          	li	a0,3
    190c:	aaaab5b7          	lui	a1,0xaaaab
    1910:	aa958593          	addi	a1,a1,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    1914:	00b53633          	sltu	a2,a0,a1
    1918:	16c72623          	sw	a2,364(a4)

0000191c <inst_110>:

inst_110:
// rs1_val==3 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x3, 0x4, x14, 368, x1)
    191c:	00300513          	li	a0,3
    1920:	00400593          	li	a1,4
    1924:	00b53633          	sltu	a2,a0,a1
    1928:	16c72823          	sw	a2,368(a4)

0000192c <inst_111>:

inst_111:
// rs1_val==3 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x33333332
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x3, 0x33333332, x14, 372, x1)
    192c:	00300513          	li	a0,3
    1930:	333335b7          	lui	a1,0x33333
    1934:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    1938:	00b53633          	sltu	a2,a0,a1
    193c:	16c72a23          	sw	a2,372(a4)

00001940 <inst_112>:

inst_112:
// rs1_val==3 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x66666665
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x3, 0x66666665, x14, 376, x1)
    1940:	00300513          	li	a0,3
    1944:	666665b7          	lui	a1,0x66666
    1948:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    194c:	00b53633          	sltu	a2,a0,a1
    1950:	16c72c23          	sw	a2,376(a4)

00001954 <inst_113>:

inst_113:
// rs1_val==3 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0xb503
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x3, 0xb503, x14, 380, x1)
    1954:	00300513          	li	a0,3
    1958:	0000b5b7          	lui	a1,0xb
    195c:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    1960:	00b53633          	sltu	a2,a0,a1
    1964:	16c72e23          	sw	a2,380(a4)

00001968 <inst_114>:

inst_114:
// rs1_val==3 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0xfffe
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x3, 0xfffe, x14, 384, x1)
    1968:	00300513          	li	a0,3
    196c:	000105b7          	lui	a1,0x10
    1970:	ffe58593          	addi	a1,a1,-2 # fffe <_end+0x9ffa>
    1974:	00b53633          	sltu	a2,a0,a1
    1978:	18c72023          	sw	a2,384(a4)

0000197c <inst_115>:

inst_115:
// rs1_val==3 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x55555556
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x3, 0x55555556, x14, 388, x1)
    197c:	00300513          	li	a0,3
    1980:	555555b7          	lui	a1,0x55555
    1984:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    1988:	00b53633          	sltu	a2,a0,a1
    198c:	18c72223          	sw	a2,388(a4)

00001990 <inst_116>:

inst_116:
// rs1_val==3 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0xaaaaaaab
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x3, 0xaaaaaaab, x14, 392, x1)
    1990:	00300513          	li	a0,3
    1994:	aaaab5b7          	lui	a1,0xaaaab
    1998:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    199c:	00b53633          	sltu	a2,a0,a1
    19a0:	18c72423          	sw	a2,392(a4)

000019a4 <inst_117>:

inst_117:
// rs1_val==3 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x6
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x3, 0x6, x14, 396, x1)
    19a4:	00300513          	li	a0,3
    19a8:	00600593          	li	a1,6
    19ac:	00b53633          	sltu	a2,a0,a1
    19b0:	18c72623          	sw	a2,396(a4)

000019b4 <inst_118>:

inst_118:
// rs1_val==3 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x3, 0x33333334, x14, 400, x1)
    19b4:	00300513          	li	a0,3
    19b8:	333335b7          	lui	a1,0x33333
    19bc:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    19c0:	00b53633          	sltu	a2,a0,a1
    19c4:	18c72823          	sw	a2,400(a4)

000019c8 <inst_119>:

inst_119:
// rs1_val==3 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x66666667
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x3, 0x66666667, x14, 404, x1)
    19c8:	00300513          	li	a0,3
    19cc:	666665b7          	lui	a1,0x66666
    19d0:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    19d4:	00b53633          	sltu	a2,a0,a1
    19d8:	18c72a23          	sw	a2,404(a4)

000019dc <inst_120>:

inst_120:
// rs1_val==3 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0xb505
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x3, 0xb505, x14, 408, x1)
    19dc:	00300513          	li	a0,3
    19e0:	0000b5b7          	lui	a1,0xb
    19e4:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    19e8:	00b53633          	sltu	a2,a0,a1
    19ec:	18c72c23          	sw	a2,408(a4)

000019f0 <inst_121>:

inst_121:
// rs1_val==3 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x3, 0x1, x14, 412, x1)
    19f0:	00300513          	li	a0,3
    19f4:	00100593          	li	a1,1
    19f8:	00b53633          	sltu	a2,a0,a1
    19fc:	18c72e23          	sw	a2,412(a4)

00001a00 <inst_122>:

inst_122:
// rs1_val==3 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x3, 0x10000, x14, 416, x1)
    1a00:	00300513          	li	a0,3
    1a04:	000105b7          	lui	a1,0x10
    1a08:	00b53633          	sltu	a2,a0,a1
    1a0c:	1ac72023          	sw	a2,416(a4)

00001a10 <inst_123>:

inst_123:
// rs1_val==1431655765 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555555, 0x3, x14, 420, x1)
    1a10:	55555537          	lui	a0,0x55555
    1a14:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1a18:	00300593          	li	a1,3
    1a1c:	00b53633          	sltu	a2,a0,a1
    1a20:	1ac72223          	sw	a2,420(a4)

00001a24 <inst_124>:

inst_124:
// rs1_val==1431655765 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555555, 0x55555555, x14, 424, x1)
    1a24:	55555537          	lui	a0,0x55555
    1a28:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1a2c:	555555b7          	lui	a1,0x55555
    1a30:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    1a34:	00b53633          	sltu	a2,a0,a1
    1a38:	1ac72423          	sw	a2,424(a4)

00001a3c <inst_125>:

inst_125:
// rs1_val==1431655765 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0xaaaaaaaa
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x55555555, 0xaaaaaaaa, x14, 428, x1)
    1a3c:	55555537          	lui	a0,0x55555
    1a40:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1a44:	aaaab5b7          	lui	a1,0xaaaab
    1a48:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1a4c:	00b53633          	sltu	a2,a0,a1
    1a50:	1ac72623          	sw	a2,428(a4)

00001a54 <inst_126>:

inst_126:
// rs1_val==1431655765 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555555, 0x5, x14, 432, x1)
    1a54:	55555537          	lui	a0,0x55555
    1a58:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1a5c:	00500593          	li	a1,5
    1a60:	00b53633          	sltu	a2,a0,a1
    1a64:	1ac72823          	sw	a2,432(a4)

00001a68 <inst_127>:

inst_127:
// rs1_val==1431655765 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x33333333
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555555, 0x33333333, x14, 436, x1)
    1a68:	55555537          	lui	a0,0x55555
    1a6c:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1a70:	333335b7          	lui	a1,0x33333
    1a74:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    1a78:	00b53633          	sltu	a2,a0,a1
    1a7c:	1ac72a23          	sw	a2,436(a4)

00001a80 <inst_128>:

inst_128:
// rs1_val==1431655765 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x66666666
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x55555555, 0x66666666, x14, 440, x1)
    1a80:	55555537          	lui	a0,0x55555
    1a84:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1a88:	666665b7          	lui	a1,0x66666
    1a8c:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    1a90:	00b53633          	sltu	a2,a0,a1
    1a94:	1ac72c23          	sw	a2,440(a4)

00001a98 <inst_129>:

inst_129:
// rs1_val==1431655765 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555555, 0xb504, x14, 444, x1)
    1a98:	55555537          	lui	a0,0x55555
    1a9c:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1aa0:	0000b5b7          	lui	a1,0xb
    1aa4:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    1aa8:	00b53633          	sltu	a2,a0,a1
    1aac:	1ac72e23          	sw	a2,444(a4)

00001ab0 <inst_130>:

inst_130:
// rs1_val==1431655765 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555555, 0x0, x14, 448, x1)
    1ab0:	55555537          	lui	a0,0x55555
    1ab4:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1ab8:	00000593          	li	a1,0
    1abc:	00b53633          	sltu	a2,a0,a1
    1ac0:	1cc72023          	sw	a2,448(a4)

00001ac4 <inst_131>:

inst_131:
// rs1_val==1431655765 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0xffff
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555555, 0xffff, x14, 452, x1)
    1ac4:	55555537          	lui	a0,0x55555
    1ac8:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1acc:	000105b7          	lui	a1,0x10
    1ad0:	fff58593          	addi	a1,a1,-1 # ffff <_end+0x9ffb>
    1ad4:	00b53633          	sltu	a2,a0,a1
    1ad8:	1cc72223          	sw	a2,452(a4)

00001adc <inst_132>:

inst_132:
// rs1_val==1431655765 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555555, 0x2, x14, 456, x1)
    1adc:	55555537          	lui	a0,0x55555
    1ae0:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1ae4:	00200593          	li	a1,2
    1ae8:	00b53633          	sltu	a2,a0,a1
    1aec:	1cc72423          	sw	a2,456(a4)

00001af0 <inst_133>:

inst_133:
// rs1_val==1431655765 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555555, 0x55555554, x14, 460, x1)
    1af0:	55555537          	lui	a0,0x55555
    1af4:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1af8:	555555b7          	lui	a1,0x55555
    1afc:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    1b00:	00b53633          	sltu	a2,a0,a1
    1b04:	1cc72623          	sw	a2,460(a4)

00001b08 <inst_134>:

inst_134:
// rs1_val==1431655765 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0xaaaaaaa9
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x55555555, 0xaaaaaaa9, x14, 464, x1)
    1b08:	55555537          	lui	a0,0x55555
    1b0c:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1b10:	aaaab5b7          	lui	a1,0xaaaab
    1b14:	aa958593          	addi	a1,a1,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    1b18:	00b53633          	sltu	a2,a0,a1
    1b1c:	1cc72823          	sw	a2,464(a4)

00001b20 <inst_135>:

inst_135:
// rs1_val==1431655765 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555555, 0x4, x14, 468, x1)
    1b20:	55555537          	lui	a0,0x55555
    1b24:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1b28:	00400593          	li	a1,4
    1b2c:	00b53633          	sltu	a2,a0,a1
    1b30:	1cc72a23          	sw	a2,468(a4)

00001b34 <inst_136>:

inst_136:
// rs1_val==1431655765 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x33333332
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555555, 0x33333332, x14, 472, x1)
    1b34:	55555537          	lui	a0,0x55555
    1b38:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1b3c:	333335b7          	lui	a1,0x33333
    1b40:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    1b44:	00b53633          	sltu	a2,a0,a1
    1b48:	1cc72c23          	sw	a2,472(a4)

00001b4c <inst_137>:

inst_137:
// rs1_val==1431655765 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x66666665
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x55555555, 0x66666665, x14, 476, x1)
    1b4c:	55555537          	lui	a0,0x55555
    1b50:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1b54:	666665b7          	lui	a1,0x66666
    1b58:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    1b5c:	00b53633          	sltu	a2,a0,a1
    1b60:	1cc72e23          	sw	a2,476(a4)

00001b64 <inst_138>:

inst_138:
// rs1_val==1431655765 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0xb503
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555555, 0xb503, x14, 480, x1)
    1b64:	55555537          	lui	a0,0x55555
    1b68:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1b6c:	0000b5b7          	lui	a1,0xb
    1b70:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    1b74:	00b53633          	sltu	a2,a0,a1
    1b78:	1ec72023          	sw	a2,480(a4)

00001b7c <inst_139>:

inst_139:
// rs1_val==1431655765 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0xfffe
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555555, 0xfffe, x14, 484, x1)
    1b7c:	55555537          	lui	a0,0x55555
    1b80:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1b84:	000105b7          	lui	a1,0x10
    1b88:	ffe58593          	addi	a1,a1,-2 # fffe <_end+0x9ffa>
    1b8c:	00b53633          	sltu	a2,a0,a1
    1b90:	1ec72223          	sw	a2,484(a4)

00001b94 <inst_140>:

inst_140:
// rs1_val==1431655765 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x55555556
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x55555555, 0x55555556, x14, 488, x1)
    1b94:	55555537          	lui	a0,0x55555
    1b98:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1b9c:	555555b7          	lui	a1,0x55555
    1ba0:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    1ba4:	00b53633          	sltu	a2,a0,a1
    1ba8:	1ec72423          	sw	a2,488(a4)

00001bac <inst_141>:

inst_141:
// rs1_val==1431655765 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0xaaaaaaab
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x55555555, 0xaaaaaaab, x14, 492, x1)
    1bac:	55555537          	lui	a0,0x55555
    1bb0:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1bb4:	aaaab5b7          	lui	a1,0xaaaab
    1bb8:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    1bbc:	00b53633          	sltu	a2,a0,a1
    1bc0:	1ec72623          	sw	a2,492(a4)

00001bc4 <inst_142>:

inst_142:
// rs1_val==1431655765 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555555, 0x6, x14, 496, x1)
    1bc4:	55555537          	lui	a0,0x55555
    1bc8:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1bcc:	00600593          	li	a1,6
    1bd0:	00b53633          	sltu	a2,a0,a1
    1bd4:	1ec72823          	sw	a2,496(a4)

00001bd8 <inst_143>:

inst_143:
// rs1_val==1431655765 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555555, 0x33333334, x14, 500, x1)
    1bd8:	55555537          	lui	a0,0x55555
    1bdc:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1be0:	333335b7          	lui	a1,0x33333
    1be4:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    1be8:	00b53633          	sltu	a2,a0,a1
    1bec:	1ec72a23          	sw	a2,500(a4)

00001bf0 <inst_144>:

inst_144:
// rs1_val==1431655765 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x66666667
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x55555555, 0x66666667, x14, 504, x1)
    1bf0:	55555537          	lui	a0,0x55555
    1bf4:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1bf8:	666665b7          	lui	a1,0x66666
    1bfc:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    1c00:	00b53633          	sltu	a2,a0,a1
    1c04:	1ec72c23          	sw	a2,504(a4)

00001c08 <inst_145>:

inst_145:
// rs1_val==1431655765 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0xb505
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555555, 0xb505, x14, 508, x1)
    1c08:	55555537          	lui	a0,0x55555
    1c0c:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1c10:	0000b5b7          	lui	a1,0xb
    1c14:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    1c18:	00b53633          	sltu	a2,a0,a1
    1c1c:	1ec72e23          	sw	a2,508(a4)

00001c20 <inst_146>:

inst_146:
// rs1_val==1431655765 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555555, 0x1, x14, 512, x1)
    1c20:	55555537          	lui	a0,0x55555
    1c24:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1c28:	00100593          	li	a1,1
    1c2c:	00b53633          	sltu	a2,a0,a1
    1c30:	20c72023          	sw	a2,512(a4)

00001c34 <inst_147>:

inst_147:
// rs1_val==1431655765 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555555, 0x10000, x14, 516, x1)
    1c34:	55555537          	lui	a0,0x55555
    1c38:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x5554f551>
    1c3c:	000105b7          	lui	a1,0x10
    1c40:	00b53633          	sltu	a2,a0,a1
    1c44:	20c72223          	sw	a2,516(a4)

00001c48 <inst_148>:

inst_148:
// rs1_val==2863311530 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaaa;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaaa, 0x3, x14, 520, x1)
    1c48:	aaaab537          	lui	a0,0xaaaab
    1c4c:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1c50:	00300593          	li	a1,3
    1c54:	00b53633          	sltu	a2,a0,a1
    1c58:	20c72423          	sw	a2,520(a4)

00001c5c <inst_149>:

inst_149:
// rs1_val==2863311530 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaaa;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaaa, 0x55555555, x14, 524, x1)
    1c5c:	aaaab537          	lui	a0,0xaaaab
    1c60:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1c64:	555555b7          	lui	a1,0x55555
    1c68:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    1c6c:	00b53633          	sltu	a2,a0,a1
    1c70:	20c72623          	sw	a2,524(a4)

00001c74 <inst_150>:

inst_150:
// rs1_val==2863311530 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaaa;  op2val:0xaaaaaaaa
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaaa, 0xaaaaaaaa, x14, 528, x1)
    1c74:	aaaab537          	lui	a0,0xaaaab
    1c78:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1c7c:	aaaab5b7          	lui	a1,0xaaaab
    1c80:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1c84:	00b53633          	sltu	a2,a0,a1
    1c88:	20c72823          	sw	a2,528(a4)

00001c8c <inst_151>:

inst_151:
// rs1_val==2863311530 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaaa;  op2val:0x5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaaa, 0x5, x14, 532, x1)
    1c8c:	aaaab537          	lui	a0,0xaaaab
    1c90:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1c94:	00500593          	li	a1,5
    1c98:	00b53633          	sltu	a2,a0,a1
    1c9c:	20c72a23          	sw	a2,532(a4)

00001ca0 <inst_152>:

inst_152:
// rs1_val==2863311530 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaaa;  op2val:0x33333333
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaaa, 0x33333333, x14, 536, x1)
    1ca0:	aaaab537          	lui	a0,0xaaaab
    1ca4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1ca8:	333335b7          	lui	a1,0x33333
    1cac:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    1cb0:	00b53633          	sltu	a2,a0,a1
    1cb4:	20c72c23          	sw	a2,536(a4)

00001cb8 <inst_153>:

inst_153:
// rs1_val==2863311530 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaaa;  op2val:0x66666666
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaaa, 0x66666666, x14, 540, x1)
    1cb8:	aaaab537          	lui	a0,0xaaaab
    1cbc:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1cc0:	666665b7          	lui	a1,0x66666
    1cc4:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    1cc8:	00b53633          	sltu	a2,a0,a1
    1ccc:	20c72e23          	sw	a2,540(a4)

00001cd0 <inst_154>:

inst_154:
// rs1_val==2863311530 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaaa;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaaa, 0xb504, x14, 544, x1)
    1cd0:	aaaab537          	lui	a0,0xaaaab
    1cd4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1cd8:	0000b5b7          	lui	a1,0xb
    1cdc:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    1ce0:	00b53633          	sltu	a2,a0,a1
    1ce4:	22c72023          	sw	a2,544(a4)

00001ce8 <inst_155>:

inst_155:
// rs1_val==2863311530 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaaa;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaaa, 0x0, x14, 548, x1)
    1ce8:	aaaab537          	lui	a0,0xaaaab
    1cec:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1cf0:	00000593          	li	a1,0
    1cf4:	00b53633          	sltu	a2,a0,a1
    1cf8:	22c72223          	sw	a2,548(a4)

00001cfc <inst_156>:

inst_156:
// rs1_val==2863311530 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaaa;  op2val:0xffff
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaaa, 0xffff, x14, 552, x1)
    1cfc:	aaaab537          	lui	a0,0xaaaab
    1d00:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1d04:	000105b7          	lui	a1,0x10
    1d08:	fff58593          	addi	a1,a1,-1 # ffff <_end+0x9ffb>
    1d0c:	00b53633          	sltu	a2,a0,a1
    1d10:	22c72423          	sw	a2,552(a4)

00001d14 <inst_157>:

inst_157:
// rs1_val==2863311530 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaaa;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaaa, 0x2, x14, 556, x1)
    1d14:	aaaab537          	lui	a0,0xaaaab
    1d18:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1d1c:	00200593          	li	a1,2
    1d20:	00b53633          	sltu	a2,a0,a1
    1d24:	22c72623          	sw	a2,556(a4)

00001d28 <inst_158>:

inst_158:
// rs1_val==2863311530 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaaa;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaaa, 0x55555554, x14, 560, x1)
    1d28:	aaaab537          	lui	a0,0xaaaab
    1d2c:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1d30:	555555b7          	lui	a1,0x55555
    1d34:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    1d38:	00b53633          	sltu	a2,a0,a1
    1d3c:	22c72823          	sw	a2,560(a4)

00001d40 <inst_159>:

inst_159:
// rs1_val==2863311530 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaaa;  op2val:0xaaaaaaa9
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaaa, 0xaaaaaaa9, x14, 564, x1)
    1d40:	aaaab537          	lui	a0,0xaaaab
    1d44:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1d48:	aaaab5b7          	lui	a1,0xaaaab
    1d4c:	aa958593          	addi	a1,a1,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    1d50:	00b53633          	sltu	a2,a0,a1
    1d54:	22c72a23          	sw	a2,564(a4)

00001d58 <inst_160>:

inst_160:
// rs1_val==2863311530 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaaa;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaaa, 0x4, x14, 568, x1)
    1d58:	aaaab537          	lui	a0,0xaaaab
    1d5c:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1d60:	00400593          	li	a1,4
    1d64:	00b53633          	sltu	a2,a0,a1
    1d68:	22c72c23          	sw	a2,568(a4)

00001d6c <inst_161>:

inst_161:
// rs1_val==2863311530 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaaa;  op2val:0x33333332
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaaa, 0x33333332, x14, 572, x1)
    1d6c:	aaaab537          	lui	a0,0xaaaab
    1d70:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1d74:	333335b7          	lui	a1,0x33333
    1d78:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    1d7c:	00b53633          	sltu	a2,a0,a1
    1d80:	22c72e23          	sw	a2,572(a4)

00001d84 <inst_162>:

inst_162:
// rs1_val==2863311530 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaaa;  op2val:0x66666665
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaaa, 0x66666665, x14, 576, x1)
    1d84:	aaaab537          	lui	a0,0xaaaab
    1d88:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1d8c:	666665b7          	lui	a1,0x66666
    1d90:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    1d94:	00b53633          	sltu	a2,a0,a1
    1d98:	24c72023          	sw	a2,576(a4)

00001d9c <inst_163>:

inst_163:
// rs1_val==2863311530 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaaa;  op2val:0xb503
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaaa, 0xb503, x14, 580, x1)
    1d9c:	aaaab537          	lui	a0,0xaaaab
    1da0:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1da4:	0000b5b7          	lui	a1,0xb
    1da8:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    1dac:	00b53633          	sltu	a2,a0,a1
    1db0:	24c72223          	sw	a2,580(a4)

00001db4 <inst_164>:

inst_164:
// rs1_val==2863311530 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaaa;  op2val:0xfffe
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaaa, 0xfffe, x14, 584, x1)
    1db4:	aaaab537          	lui	a0,0xaaaab
    1db8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1dbc:	000105b7          	lui	a1,0x10
    1dc0:	ffe58593          	addi	a1,a1,-2 # fffe <_end+0x9ffa>
    1dc4:	00b53633          	sltu	a2,a0,a1
    1dc8:	24c72423          	sw	a2,584(a4)

00001dcc <inst_165>:

inst_165:
// rs1_val==2863311530 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaaa;  op2val:0x55555556
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaaa, 0x55555556, x14, 588, x1)
    1dcc:	aaaab537          	lui	a0,0xaaaab
    1dd0:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1dd4:	555555b7          	lui	a1,0x55555
    1dd8:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    1ddc:	00b53633          	sltu	a2,a0,a1
    1de0:	24c72623          	sw	a2,588(a4)

00001de4 <inst_166>:

inst_166:
// rs1_val==2863311530 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaaa;  op2val:0xaaaaaaab
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xaaaaaaaa, 0xaaaaaaab, x14, 592, x1)
    1de4:	aaaab537          	lui	a0,0xaaaab
    1de8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1dec:	aaaab5b7          	lui	a1,0xaaaab
    1df0:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    1df4:	00b53633          	sltu	a2,a0,a1
    1df8:	24c72823          	sw	a2,592(a4)

00001dfc <inst_167>:

inst_167:
// rs1_val==2863311530 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaaa;  op2val:0x6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaaa, 0x6, x14, 596, x1)
    1dfc:	aaaab537          	lui	a0,0xaaaab
    1e00:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1e04:	00600593          	li	a1,6
    1e08:	00b53633          	sltu	a2,a0,a1
    1e0c:	24c72a23          	sw	a2,596(a4)

00001e10 <inst_168>:

inst_168:
// rs1_val==2863311530 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaaa;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaaa, 0x33333334, x14, 600, x1)
    1e10:	aaaab537          	lui	a0,0xaaaab
    1e14:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1e18:	333335b7          	lui	a1,0x33333
    1e1c:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    1e20:	00b53633          	sltu	a2,a0,a1
    1e24:	24c72c23          	sw	a2,600(a4)

00001e28 <inst_169>:

inst_169:
// rs1_val==2863311530 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaaa;  op2val:0x66666667
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaaa, 0x66666667, x14, 604, x1)
    1e28:	aaaab537          	lui	a0,0xaaaab
    1e2c:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1e30:	666665b7          	lui	a1,0x66666
    1e34:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    1e38:	00b53633          	sltu	a2,a0,a1
    1e3c:	24c72e23          	sw	a2,604(a4)

00001e40 <inst_170>:

inst_170:
// rs1_val==2863311530 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaaa;  op2val:0xb505
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaaa, 0xb505, x14, 608, x1)
    1e40:	aaaab537          	lui	a0,0xaaaab
    1e44:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1e48:	0000b5b7          	lui	a1,0xb
    1e4c:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    1e50:	00b53633          	sltu	a2,a0,a1
    1e54:	26c72023          	sw	a2,608(a4)

00001e58 <inst_171>:

inst_171:
// rs1_val==2863311530 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaaa;  op2val:0x1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaaa, 0x1, x14, 612, x1)
    1e58:	aaaab537          	lui	a0,0xaaaab
    1e5c:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1e60:	00100593          	li	a1,1
    1e64:	00b53633          	sltu	a2,a0,a1
    1e68:	26c72223          	sw	a2,612(a4)

00001e6c <inst_172>:

inst_172:
// rs1_val==2863311530 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaaa;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaaa, 0x10000, x14, 616, x1)
    1e6c:	aaaab537          	lui	a0,0xaaaab
    1e70:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1e74:	000105b7          	lui	a1,0x10
    1e78:	00b53633          	sltu	a2,a0,a1
    1e7c:	26c72423          	sw	a2,616(a4)

00001e80 <inst_173>:

inst_173:
// rs1_val==5 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x5, 0x3, x14, 620, x1)
    1e80:	00500513          	li	a0,5
    1e84:	00300593          	li	a1,3
    1e88:	00b53633          	sltu	a2,a0,a1
    1e8c:	26c72623          	sw	a2,620(a4)

00001e90 <inst_174>:

inst_174:
// rs1_val==5 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x5, 0x55555555, x14, 624, x1)
    1e90:	00500513          	li	a0,5
    1e94:	555555b7          	lui	a1,0x55555
    1e98:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    1e9c:	00b53633          	sltu	a2,a0,a1
    1ea0:	26c72823          	sw	a2,624(a4)

00001ea4 <inst_175>:

inst_175:
// rs1_val==5 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0xaaaaaaaa
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x5, 0xaaaaaaaa, x14, 628, x1)
    1ea4:	00500513          	li	a0,5
    1ea8:	aaaab5b7          	lui	a1,0xaaaab
    1eac:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    1eb0:	00b53633          	sltu	a2,a0,a1
    1eb4:	26c72a23          	sw	a2,628(a4)

00001eb8 <inst_176>:

inst_176:
// rs1_val==5 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x5, 0x5, x14, 632, x1)
    1eb8:	00500513          	li	a0,5
    1ebc:	00500593          	li	a1,5
    1ec0:	00b53633          	sltu	a2,a0,a1
    1ec4:	26c72c23          	sw	a2,632(a4)

00001ec8 <inst_177>:

inst_177:
// rs1_val==5 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x33333333
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x5, 0x33333333, x14, 636, x1)
    1ec8:	00500513          	li	a0,5
    1ecc:	333335b7          	lui	a1,0x33333
    1ed0:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    1ed4:	00b53633          	sltu	a2,a0,a1
    1ed8:	26c72e23          	sw	a2,636(a4)

00001edc <inst_178>:

inst_178:
// rs1_val==5 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x66666666
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x5, 0x66666666, x14, 640, x1)
    1edc:	00500513          	li	a0,5
    1ee0:	666665b7          	lui	a1,0x66666
    1ee4:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    1ee8:	00b53633          	sltu	a2,a0,a1
    1eec:	28c72023          	sw	a2,640(a4)

00001ef0 <inst_179>:

inst_179:
// rs1_val==5 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x5, 0xb504, x14, 644, x1)
    1ef0:	00500513          	li	a0,5
    1ef4:	0000b5b7          	lui	a1,0xb
    1ef8:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    1efc:	00b53633          	sltu	a2,a0,a1
    1f00:	28c72223          	sw	a2,644(a4)

00001f04 <inst_180>:

inst_180:
// rs1_val==5 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x5, 0x0, x14, 648, x1)
    1f04:	00500513          	li	a0,5
    1f08:	00000593          	li	a1,0
    1f0c:	00b53633          	sltu	a2,a0,a1
    1f10:	28c72423          	sw	a2,648(a4)

00001f14 <inst_181>:

inst_181:
// rs1_val==5 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0xffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x5, 0xffff, x14, 652, x1)
    1f14:	00500513          	li	a0,5
    1f18:	000105b7          	lui	a1,0x10
    1f1c:	fff58593          	addi	a1,a1,-1 # ffff <_end+0x9ffb>
    1f20:	00b53633          	sltu	a2,a0,a1
    1f24:	28c72623          	sw	a2,652(a4)

00001f28 <inst_182>:

inst_182:
// rs1_val==5 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x5, 0x2, x14, 656, x1)
    1f28:	00500513          	li	a0,5
    1f2c:	00200593          	li	a1,2
    1f30:	00b53633          	sltu	a2,a0,a1
    1f34:	28c72823          	sw	a2,656(a4)

00001f38 <inst_183>:

inst_183:
// rs1_val==5 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x5, 0x55555554, x14, 660, x1)
    1f38:	00500513          	li	a0,5
    1f3c:	555555b7          	lui	a1,0x55555
    1f40:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    1f44:	00b53633          	sltu	a2,a0,a1
    1f48:	28c72a23          	sw	a2,660(a4)

00001f4c <inst_184>:

inst_184:
// rs1_val==5 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0xaaaaaaa9
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x5, 0xaaaaaaa9, x14, 664, x1)
    1f4c:	00500513          	li	a0,5
    1f50:	aaaab5b7          	lui	a1,0xaaaab
    1f54:	aa958593          	addi	a1,a1,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    1f58:	00b53633          	sltu	a2,a0,a1
    1f5c:	28c72c23          	sw	a2,664(a4)

00001f60 <inst_185>:

inst_185:
// rs1_val==5 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x5, 0x4, x14, 668, x1)
    1f60:	00500513          	li	a0,5
    1f64:	00400593          	li	a1,4
    1f68:	00b53633          	sltu	a2,a0,a1
    1f6c:	28c72e23          	sw	a2,668(a4)

00001f70 <inst_186>:

inst_186:
// rs1_val==5 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x33333332
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x5, 0x33333332, x14, 672, x1)
    1f70:	00500513          	li	a0,5
    1f74:	333335b7          	lui	a1,0x33333
    1f78:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    1f7c:	00b53633          	sltu	a2,a0,a1
    1f80:	2ac72023          	sw	a2,672(a4)

00001f84 <inst_187>:

inst_187:
// rs1_val==5 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x66666665
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x5, 0x66666665, x14, 676, x1)
    1f84:	00500513          	li	a0,5
    1f88:	666665b7          	lui	a1,0x66666
    1f8c:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    1f90:	00b53633          	sltu	a2,a0,a1
    1f94:	2ac72223          	sw	a2,676(a4)

00001f98 <inst_188>:

inst_188:
// rs1_val==5 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0xb503
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x5, 0xb503, x14, 680, x1)
    1f98:	00500513          	li	a0,5
    1f9c:	0000b5b7          	lui	a1,0xb
    1fa0:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    1fa4:	00b53633          	sltu	a2,a0,a1
    1fa8:	2ac72423          	sw	a2,680(a4)

00001fac <inst_189>:

inst_189:
// rs1_val==5 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0xfffe
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x5, 0xfffe, x14, 684, x1)
    1fac:	00500513          	li	a0,5
    1fb0:	000105b7          	lui	a1,0x10
    1fb4:	ffe58593          	addi	a1,a1,-2 # fffe <_end+0x9ffa>
    1fb8:	00b53633          	sltu	a2,a0,a1
    1fbc:	2ac72623          	sw	a2,684(a4)

00001fc0 <inst_190>:

inst_190:
// rs1_val==5 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x55555556
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x5, 0x55555556, x14, 688, x1)
    1fc0:	00500513          	li	a0,5
    1fc4:	555555b7          	lui	a1,0x55555
    1fc8:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    1fcc:	00b53633          	sltu	a2,a0,a1
    1fd0:	2ac72823          	sw	a2,688(a4)

00001fd4 <inst_191>:

inst_191:
// rs1_val==5 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0xaaaaaaab
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x5, 0xaaaaaaab, x14, 692, x1)
    1fd4:	00500513          	li	a0,5
    1fd8:	aaaab5b7          	lui	a1,0xaaaab
    1fdc:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    1fe0:	00b53633          	sltu	a2,a0,a1
    1fe4:	2ac72a23          	sw	a2,692(a4)

00001fe8 <inst_192>:

inst_192:
// rs1_val==5 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x6
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x5, 0x6, x14, 696, x1)
    1fe8:	00500513          	li	a0,5
    1fec:	00600593          	li	a1,6
    1ff0:	00b53633          	sltu	a2,a0,a1
    1ff4:	2ac72c23          	sw	a2,696(a4)

00001ff8 <inst_193>:

inst_193:
// rs1_val==5 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x5, 0x33333334, x14, 700, x1)
    1ff8:	00500513          	li	a0,5
    1ffc:	333335b7          	lui	a1,0x33333
    2000:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    2004:	00b53633          	sltu	a2,a0,a1
    2008:	2ac72e23          	sw	a2,700(a4)

0000200c <inst_194>:

inst_194:
// rs1_val==5 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x66666667
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x5, 0x66666667, x14, 704, x1)
    200c:	00500513          	li	a0,5
    2010:	666665b7          	lui	a1,0x66666
    2014:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    2018:	00b53633          	sltu	a2,a0,a1
    201c:	2cc72023          	sw	a2,704(a4)

00002020 <inst_195>:

inst_195:
// rs1_val==5 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0xb505
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x5, 0xb505, x14, 708, x1)
    2020:	00500513          	li	a0,5
    2024:	0000b5b7          	lui	a1,0xb
    2028:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    202c:	00b53633          	sltu	a2,a0,a1
    2030:	2cc72223          	sw	a2,708(a4)

00002034 <inst_196>:

inst_196:
// rs1_val==5 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x5, 0x1, x14, 712, x1)
    2034:	00500513          	li	a0,5
    2038:	00100593          	li	a1,1
    203c:	00b53633          	sltu	a2,a0,a1
    2040:	2cc72423          	sw	a2,712(a4)

00002044 <inst_197>:

inst_197:
// rs1_val==5 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x5, 0x10000, x14, 716, x1)
    2044:	00500513          	li	a0,5
    2048:	000105b7          	lui	a1,0x10
    204c:	00b53633          	sltu	a2,a0,a1
    2050:	2cc72623          	sw	a2,716(a4)

00002054 <inst_198>:

inst_198:
// rs1_val==858993459 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333333, 0x3, x14, 720, x1)
    2054:	33333537          	lui	a0,0x33333
    2058:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    205c:	00300593          	li	a1,3
    2060:	00b53633          	sltu	a2,a0,a1
    2064:	2cc72823          	sw	a2,720(a4)

00002068 <inst_199>:

inst_199:
// rs1_val==858993459 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333333, 0x55555555, x14, 724, x1)
    2068:	33333537          	lui	a0,0x33333
    206c:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    2070:	555555b7          	lui	a1,0x55555
    2074:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    2078:	00b53633          	sltu	a2,a0,a1
    207c:	2cc72a23          	sw	a2,724(a4)

00002080 <inst_200>:

inst_200:
// rs1_val==858993459 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0xaaaaaaaa
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333333, 0xaaaaaaaa, x14, 728, x1)
    2080:	33333537          	lui	a0,0x33333
    2084:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    2088:	aaaab5b7          	lui	a1,0xaaaab
    208c:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    2090:	00b53633          	sltu	a2,a0,a1
    2094:	2cc72c23          	sw	a2,728(a4)

00002098 <inst_201>:

inst_201:
// rs1_val==858993459 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333333, 0x5, x14, 732, x1)
    2098:	33333537          	lui	a0,0x33333
    209c:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    20a0:	00500593          	li	a1,5
    20a4:	00b53633          	sltu	a2,a0,a1
    20a8:	2cc72e23          	sw	a2,732(a4)

000020ac <inst_202>:

inst_202:
// rs1_val==858993459 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x33333333
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333333, 0x33333333, x14, 736, x1)
    20ac:	33333537          	lui	a0,0x33333
    20b0:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    20b4:	333335b7          	lui	a1,0x33333
    20b8:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    20bc:	00b53633          	sltu	a2,a0,a1
    20c0:	2ec72023          	sw	a2,736(a4)

000020c4 <inst_203>:

inst_203:
// rs1_val==858993459 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x66666666
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333333, 0x66666666, x14, 740, x1)
    20c4:	33333537          	lui	a0,0x33333
    20c8:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    20cc:	666665b7          	lui	a1,0x66666
    20d0:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    20d4:	00b53633          	sltu	a2,a0,a1
    20d8:	2ec72223          	sw	a2,740(a4)

000020dc <inst_204>:

inst_204:
// rs1_val==858993459 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333333, 0xb504, x14, 744, x1)
    20dc:	33333537          	lui	a0,0x33333
    20e0:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    20e4:	0000b5b7          	lui	a1,0xb
    20e8:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    20ec:	00b53633          	sltu	a2,a0,a1
    20f0:	2ec72423          	sw	a2,744(a4)

000020f4 <inst_205>:

inst_205:
// rs1_val==858993459 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333333, 0x0, x14, 748, x1)
    20f4:	33333537          	lui	a0,0x33333
    20f8:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    20fc:	00000593          	li	a1,0
    2100:	00b53633          	sltu	a2,a0,a1
    2104:	2ec72623          	sw	a2,748(a4)

00002108 <inst_206>:

inst_206:
// rs1_val==858993459 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0xffff
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333333, 0xffff, x14, 752, x1)
    2108:	33333537          	lui	a0,0x33333
    210c:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    2110:	000105b7          	lui	a1,0x10
    2114:	fff58593          	addi	a1,a1,-1 # ffff <_end+0x9ffb>
    2118:	00b53633          	sltu	a2,a0,a1
    211c:	2ec72823          	sw	a2,752(a4)

00002120 <inst_207>:

inst_207:
// rs1_val==858993459 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333333, 0x2, x14, 756, x1)
    2120:	33333537          	lui	a0,0x33333
    2124:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    2128:	00200593          	li	a1,2
    212c:	00b53633          	sltu	a2,a0,a1
    2130:	2ec72a23          	sw	a2,756(a4)

00002134 <inst_208>:

inst_208:
// rs1_val==858993459 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333333, 0x55555554, x14, 760, x1)
    2134:	33333537          	lui	a0,0x33333
    2138:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    213c:	555555b7          	lui	a1,0x55555
    2140:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    2144:	00b53633          	sltu	a2,a0,a1
    2148:	2ec72c23          	sw	a2,760(a4)

0000214c <inst_209>:

inst_209:
// rs1_val==858993459 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0xaaaaaaa9
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333333, 0xaaaaaaa9, x14, 764, x1)
    214c:	33333537          	lui	a0,0x33333
    2150:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    2154:	aaaab5b7          	lui	a1,0xaaaab
    2158:	aa958593          	addi	a1,a1,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    215c:	00b53633          	sltu	a2,a0,a1
    2160:	2ec72e23          	sw	a2,764(a4)

00002164 <inst_210>:

inst_210:
// rs1_val==858993459 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333333, 0x4, x14, 768, x1)
    2164:	33333537          	lui	a0,0x33333
    2168:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    216c:	00400593          	li	a1,4
    2170:	00b53633          	sltu	a2,a0,a1
    2174:	30c72023          	sw	a2,768(a4)

00002178 <inst_211>:

inst_211:
// rs1_val==858993459 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x33333332
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333333, 0x33333332, x14, 772, x1)
    2178:	33333537          	lui	a0,0x33333
    217c:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    2180:	333335b7          	lui	a1,0x33333
    2184:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    2188:	00b53633          	sltu	a2,a0,a1
    218c:	30c72223          	sw	a2,772(a4)

00002190 <inst_212>:

inst_212:
// rs1_val==858993459 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x66666665
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333333, 0x66666665, x14, 776, x1)
    2190:	33333537          	lui	a0,0x33333
    2194:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    2198:	666665b7          	lui	a1,0x66666
    219c:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    21a0:	00b53633          	sltu	a2,a0,a1
    21a4:	30c72423          	sw	a2,776(a4)

000021a8 <inst_213>:

inst_213:
// rs1_val==858993459 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0xb503
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333333, 0xb503, x14, 780, x1)
    21a8:	33333537          	lui	a0,0x33333
    21ac:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    21b0:	0000b5b7          	lui	a1,0xb
    21b4:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    21b8:	00b53633          	sltu	a2,a0,a1
    21bc:	30c72623          	sw	a2,780(a4)

000021c0 <inst_214>:

inst_214:
// rs1_val==858993459 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0xfffe
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333333, 0xfffe, x14, 784, x1)
    21c0:	33333537          	lui	a0,0x33333
    21c4:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    21c8:	000105b7          	lui	a1,0x10
    21cc:	ffe58593          	addi	a1,a1,-2 # fffe <_end+0x9ffa>
    21d0:	00b53633          	sltu	a2,a0,a1
    21d4:	30c72823          	sw	a2,784(a4)

000021d8 <inst_215>:

inst_215:
// rs1_val==858993459 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x55555556
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333333, 0x55555556, x14, 788, x1)
    21d8:	33333537          	lui	a0,0x33333
    21dc:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    21e0:	555555b7          	lui	a1,0x55555
    21e4:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    21e8:	00b53633          	sltu	a2,a0,a1
    21ec:	30c72a23          	sw	a2,788(a4)

000021f0 <inst_216>:

inst_216:
// rs1_val==858993459 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0xaaaaaaab
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333333, 0xaaaaaaab, x14, 792, x1)
    21f0:	33333537          	lui	a0,0x33333
    21f4:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    21f8:	aaaab5b7          	lui	a1,0xaaaab
    21fc:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    2200:	00b53633          	sltu	a2,a0,a1
    2204:	30c72c23          	sw	a2,792(a4)

00002208 <inst_217>:

inst_217:
// rs1_val==858993459 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333333, 0x6, x14, 796, x1)
    2208:	33333537          	lui	a0,0x33333
    220c:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    2210:	00600593          	li	a1,6
    2214:	00b53633          	sltu	a2,a0,a1
    2218:	30c72e23          	sw	a2,796(a4)

0000221c <inst_218>:

inst_218:
// rs1_val==858993459 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333333, 0x33333334, x14, 800, x1)
    221c:	33333537          	lui	a0,0x33333
    2220:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    2224:	333335b7          	lui	a1,0x33333
    2228:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    222c:	00b53633          	sltu	a2,a0,a1
    2230:	32c72023          	sw	a2,800(a4)

00002234 <inst_219>:

inst_219:
// rs1_val==858993459 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x66666667
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333333, 0x66666667, x14, 804, x1)
    2234:	33333537          	lui	a0,0x33333
    2238:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    223c:	666665b7          	lui	a1,0x66666
    2240:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    2244:	00b53633          	sltu	a2,a0,a1
    2248:	32c72223          	sw	a2,804(a4)

0000224c <inst_220>:

inst_220:
// rs1_val==858993459 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0xb505
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333333, 0xb505, x14, 808, x1)
    224c:	33333537          	lui	a0,0x33333
    2250:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    2254:	0000b5b7          	lui	a1,0xb
    2258:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    225c:	00b53633          	sltu	a2,a0,a1
    2260:	32c72423          	sw	a2,808(a4)

00002264 <inst_221>:

inst_221:
// rs1_val==858993459 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333333, 0x1, x14, 812, x1)
    2264:	33333537          	lui	a0,0x33333
    2268:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    226c:	00100593          	li	a1,1
    2270:	00b53633          	sltu	a2,a0,a1
    2274:	32c72623          	sw	a2,812(a4)

00002278 <inst_222>:

inst_222:
// rs1_val==858993459 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333333, 0x10000, x14, 816, x1)
    2278:	33333537          	lui	a0,0x33333
    227c:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3332d32f>
    2280:	000105b7          	lui	a1,0x10
    2284:	00b53633          	sltu	a2,a0,a1
    2288:	32c72823          	sw	a2,816(a4)

0000228c <inst_223>:

inst_223:
// rs1_val==1717986918 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666666, 0x3, x14, 820, x1)
    228c:	66666537          	lui	a0,0x66666
    2290:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    2294:	00300593          	li	a1,3
    2298:	00b53633          	sltu	a2,a0,a1
    229c:	32c72a23          	sw	a2,820(a4)

000022a0 <inst_224>:

inst_224:
// rs1_val==1717986918 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666666, 0x55555555, x14, 824, x1)
    22a0:	66666537          	lui	a0,0x66666
    22a4:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    22a8:	555555b7          	lui	a1,0x55555
    22ac:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    22b0:	00b53633          	sltu	a2,a0,a1
    22b4:	32c72c23          	sw	a2,824(a4)

000022b8 <inst_225>:

inst_225:
// rs1_val==1717986918 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0xaaaaaaaa
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x66666666, 0xaaaaaaaa, x14, 828, x1)
    22b8:	66666537          	lui	a0,0x66666
    22bc:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    22c0:	aaaab5b7          	lui	a1,0xaaaab
    22c4:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    22c8:	00b53633          	sltu	a2,a0,a1
    22cc:	32c72e23          	sw	a2,828(a4)

000022d0 <inst_226>:

inst_226:
// rs1_val==1717986918 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666666, 0x5, x14, 832, x1)
    22d0:	66666537          	lui	a0,0x66666
    22d4:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    22d8:	00500593          	li	a1,5
    22dc:	00b53633          	sltu	a2,a0,a1
    22e0:	34c72023          	sw	a2,832(a4)

000022e4 <inst_227>:

inst_227:
// rs1_val==1717986918 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x33333333
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666666, 0x33333333, x14, 836, x1)
    22e4:	66666537          	lui	a0,0x66666
    22e8:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    22ec:	333335b7          	lui	a1,0x33333
    22f0:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    22f4:	00b53633          	sltu	a2,a0,a1
    22f8:	34c72223          	sw	a2,836(a4)

000022fc <inst_228>:

inst_228:
// rs1_val==1717986918 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x66666666
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666666, 0x66666666, x14, 840, x1)
    22fc:	66666537          	lui	a0,0x66666
    2300:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    2304:	666665b7          	lui	a1,0x66666
    2308:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    230c:	00b53633          	sltu	a2,a0,a1
    2310:	34c72423          	sw	a2,840(a4)

00002314 <inst_229>:

inst_229:
// rs1_val==1717986918 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666666, 0xb504, x14, 844, x1)
    2314:	66666537          	lui	a0,0x66666
    2318:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    231c:	0000b5b7          	lui	a1,0xb
    2320:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    2324:	00b53633          	sltu	a2,a0,a1
    2328:	34c72623          	sw	a2,844(a4)

0000232c <inst_230>:

inst_230:
// rs1_val==1717986918 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666666, 0x0, x14, 848, x1)
    232c:	66666537          	lui	a0,0x66666
    2330:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    2334:	00000593          	li	a1,0
    2338:	00b53633          	sltu	a2,a0,a1
    233c:	34c72823          	sw	a2,848(a4)

00002340 <inst_231>:

inst_231:
// rs1_val==1717986918 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0xffff
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666666, 0xffff, x14, 852, x1)
    2340:	66666537          	lui	a0,0x66666
    2344:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    2348:	000105b7          	lui	a1,0x10
    234c:	fff58593          	addi	a1,a1,-1 # ffff <_end+0x9ffb>
    2350:	00b53633          	sltu	a2,a0,a1
    2354:	34c72a23          	sw	a2,852(a4)

00002358 <inst_232>:

inst_232:
// rs1_val==1717986918 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666666, 0x2, x14, 856, x1)
    2358:	66666537          	lui	a0,0x66666
    235c:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    2360:	00200593          	li	a1,2
    2364:	00b53633          	sltu	a2,a0,a1
    2368:	34c72c23          	sw	a2,856(a4)

0000236c <inst_233>:

inst_233:
// rs1_val==1717986918 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666666, 0x55555554, x14, 860, x1)
    236c:	66666537          	lui	a0,0x66666
    2370:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    2374:	555555b7          	lui	a1,0x55555
    2378:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    237c:	00b53633          	sltu	a2,a0,a1
    2380:	34c72e23          	sw	a2,860(a4)

00002384 <inst_234>:

inst_234:
// rs1_val==1717986918 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0xaaaaaaa9
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x66666666, 0xaaaaaaa9, x14, 864, x1)
    2384:	66666537          	lui	a0,0x66666
    2388:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    238c:	aaaab5b7          	lui	a1,0xaaaab
    2390:	aa958593          	addi	a1,a1,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    2394:	00b53633          	sltu	a2,a0,a1
    2398:	36c72023          	sw	a2,864(a4)

0000239c <inst_235>:

inst_235:
// rs1_val==1717986918 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666666, 0x4, x14, 868, x1)
    239c:	66666537          	lui	a0,0x66666
    23a0:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    23a4:	00400593          	li	a1,4
    23a8:	00b53633          	sltu	a2,a0,a1
    23ac:	36c72223          	sw	a2,868(a4)

000023b0 <inst_236>:

inst_236:
// rs1_val==1717986918 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x33333332
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666666, 0x33333332, x14, 872, x1)
    23b0:	66666537          	lui	a0,0x66666
    23b4:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    23b8:	333335b7          	lui	a1,0x33333
    23bc:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    23c0:	00b53633          	sltu	a2,a0,a1
    23c4:	36c72423          	sw	a2,872(a4)

000023c8 <inst_237>:

inst_237:
// rs1_val==1717986918 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x66666665
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666666, 0x66666665, x14, 876, x1)
    23c8:	66666537          	lui	a0,0x66666
    23cc:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    23d0:	666665b7          	lui	a1,0x66666
    23d4:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    23d8:	00b53633          	sltu	a2,a0,a1
    23dc:	36c72623          	sw	a2,876(a4)

000023e0 <inst_238>:

inst_238:
// rs1_val==1717986918 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0xb503
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666666, 0xb503, x14, 880, x1)
    23e0:	66666537          	lui	a0,0x66666
    23e4:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    23e8:	0000b5b7          	lui	a1,0xb
    23ec:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    23f0:	00b53633          	sltu	a2,a0,a1
    23f4:	36c72823          	sw	a2,880(a4)

000023f8 <inst_239>:

inst_239:
// rs1_val==1717986918 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0xfffe
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666666, 0xfffe, x14, 884, x1)
    23f8:	66666537          	lui	a0,0x66666
    23fc:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    2400:	000105b7          	lui	a1,0x10
    2404:	ffe58593          	addi	a1,a1,-2 # fffe <_end+0x9ffa>
    2408:	00b53633          	sltu	a2,a0,a1
    240c:	36c72a23          	sw	a2,884(a4)

00002410 <inst_240>:

inst_240:
// rs1_val==1717986918 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x55555556
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666666, 0x55555556, x14, 888, x1)
    2410:	66666537          	lui	a0,0x66666
    2414:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    2418:	555555b7          	lui	a1,0x55555
    241c:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    2420:	00b53633          	sltu	a2,a0,a1
    2424:	36c72c23          	sw	a2,888(a4)

00002428 <inst_241>:

inst_241:
// rs1_val==1717986918 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0xaaaaaaab
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x66666666, 0xaaaaaaab, x14, 892, x1)
    2428:	66666537          	lui	a0,0x66666
    242c:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    2430:	aaaab5b7          	lui	a1,0xaaaab
    2434:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    2438:	00b53633          	sltu	a2,a0,a1
    243c:	36c72e23          	sw	a2,892(a4)

00002440 <inst_242>:

inst_242:
// rs1_val==1717986918 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666666, 0x6, x14, 896, x1)
    2440:	66666537          	lui	a0,0x66666
    2444:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    2448:	00600593          	li	a1,6
    244c:	00b53633          	sltu	a2,a0,a1
    2450:	38c72023          	sw	a2,896(a4)

00002454 <inst_243>:

inst_243:
// rs1_val==1717986918 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666666, 0x33333334, x14, 900, x1)
    2454:	66666537          	lui	a0,0x66666
    2458:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    245c:	333335b7          	lui	a1,0x33333
    2460:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    2464:	00b53633          	sltu	a2,a0,a1
    2468:	38c72223          	sw	a2,900(a4)

0000246c <inst_244>:

inst_244:
// rs1_val==1717986918 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x66666667
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x66666666, 0x66666667, x14, 904, x1)
    246c:	66666537          	lui	a0,0x66666
    2470:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    2474:	666665b7          	lui	a1,0x66666
    2478:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    247c:	00b53633          	sltu	a2,a0,a1
    2480:	38c72423          	sw	a2,904(a4)

00002484 <inst_245>:

inst_245:
// rs1_val==1717986918 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0xb505
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666666, 0xb505, x14, 908, x1)
    2484:	66666537          	lui	a0,0x66666
    2488:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    248c:	0000b5b7          	lui	a1,0xb
    2490:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    2494:	00b53633          	sltu	a2,a0,a1
    2498:	38c72623          	sw	a2,908(a4)

0000249c <inst_246>:

inst_246:
// rs1_val==1717986918 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666666, 0x1, x14, 912, x1)
    249c:	66666537          	lui	a0,0x66666
    24a0:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    24a4:	00100593          	li	a1,1
    24a8:	00b53633          	sltu	a2,a0,a1
    24ac:	38c72823          	sw	a2,912(a4)

000024b0 <inst_247>:

inst_247:
// rs1_val==1717986918 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666666, 0x10000, x14, 916, x1)
    24b0:	66666537          	lui	a0,0x66666
    24b4:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66660662>
    24b8:	000105b7          	lui	a1,0x10
    24bc:	00b53633          	sltu	a2,a0,a1
    24c0:	38c72a23          	sw	a2,916(a4)

000024c4 <inst_248>:

inst_248:
// rs1_val==46340 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb504, 0x3, x14, 920, x1)
    24c4:	0000b537          	lui	a0,0xb
    24c8:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    24cc:	00300593          	li	a1,3
    24d0:	00b53633          	sltu	a2,a0,a1
    24d4:	38c72c23          	sw	a2,920(a4)

000024d8 <inst_249>:

inst_249:
// rs1_val==46340 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb504, 0x55555555, x14, 924, x1)
    24d8:	0000b537          	lui	a0,0xb
    24dc:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    24e0:	555555b7          	lui	a1,0x55555
    24e4:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    24e8:	00b53633          	sltu	a2,a0,a1
    24ec:	38c72e23          	sw	a2,924(a4)

000024f0 <inst_250>:

inst_250:
// rs1_val==46340 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0xaaaaaaaa
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb504, 0xaaaaaaaa, x14, 928, x1)
    24f0:	0000b537          	lui	a0,0xb
    24f4:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    24f8:	aaaab5b7          	lui	a1,0xaaaab
    24fc:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    2500:	00b53633          	sltu	a2,a0,a1
    2504:	3ac72023          	sw	a2,928(a4)

00002508 <inst_251>:

inst_251:
// rs1_val==46340 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb504, 0x5, x14, 932, x1)
    2508:	0000b537          	lui	a0,0xb
    250c:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    2510:	00500593          	li	a1,5
    2514:	00b53633          	sltu	a2,a0,a1
    2518:	3ac72223          	sw	a2,932(a4)

0000251c <inst_252>:

inst_252:
// rs1_val==46340 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x33333333
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb504, 0x33333333, x14, 936, x1)
    251c:	0000b537          	lui	a0,0xb
    2520:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    2524:	333335b7          	lui	a1,0x33333
    2528:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    252c:	00b53633          	sltu	a2,a0,a1
    2530:	3ac72423          	sw	a2,936(a4)

00002534 <inst_253>:

inst_253:
// rs1_val==46340 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x66666666
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb504, 0x66666666, x14, 940, x1)
    2534:	0000b537          	lui	a0,0xb
    2538:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    253c:	666665b7          	lui	a1,0x66666
    2540:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    2544:	00b53633          	sltu	a2,a0,a1
    2548:	3ac72623          	sw	a2,940(a4)

0000254c <inst_254>:

inst_254:
// rs1_val==46340 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb504, 0xb504, x14, 944, x1)
    254c:	0000b537          	lui	a0,0xb
    2550:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    2554:	0000b5b7          	lui	a1,0xb
    2558:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    255c:	00b53633          	sltu	a2,a0,a1
    2560:	3ac72823          	sw	a2,944(a4)

00002564 <inst_255>:

inst_255:
// rs1_val==46340 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb504, 0x0, x14, 948, x1)
    2564:	0000b537          	lui	a0,0xb
    2568:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    256c:	00000593          	li	a1,0
    2570:	00b53633          	sltu	a2,a0,a1
    2574:	3ac72a23          	sw	a2,948(a4)

00002578 <inst_256>:

inst_256:
// rs1_val==46340 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0xffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb504, 0xffff, x14, 952, x1)
    2578:	0000b537          	lui	a0,0xb
    257c:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    2580:	000105b7          	lui	a1,0x10
    2584:	fff58593          	addi	a1,a1,-1 # ffff <_end+0x9ffb>
    2588:	00b53633          	sltu	a2,a0,a1
    258c:	3ac72c23          	sw	a2,952(a4)

00002590 <inst_257>:

inst_257:
// rs1_val==46340 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb504, 0x2, x14, 956, x1)
    2590:	0000b537          	lui	a0,0xb
    2594:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    2598:	00200593          	li	a1,2
    259c:	00b53633          	sltu	a2,a0,a1
    25a0:	3ac72e23          	sw	a2,956(a4)

000025a4 <inst_258>:

inst_258:
// rs1_val==46340 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb504, 0x55555554, x14, 960, x1)
    25a4:	0000b537          	lui	a0,0xb
    25a8:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    25ac:	555555b7          	lui	a1,0x55555
    25b0:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    25b4:	00b53633          	sltu	a2,a0,a1
    25b8:	3cc72023          	sw	a2,960(a4)

000025bc <inst_259>:

inst_259:
// rs1_val==46340 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0xaaaaaaa9
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb504, 0xaaaaaaa9, x14, 964, x1)
    25bc:	0000b537          	lui	a0,0xb
    25c0:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    25c4:	aaaab5b7          	lui	a1,0xaaaab
    25c8:	aa958593          	addi	a1,a1,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    25cc:	00b53633          	sltu	a2,a0,a1
    25d0:	3cc72223          	sw	a2,964(a4)

000025d4 <inst_260>:

inst_260:
// rs1_val==46340 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb504, 0x4, x14, 968, x1)
    25d4:	0000b537          	lui	a0,0xb
    25d8:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    25dc:	00400593          	li	a1,4
    25e0:	00b53633          	sltu	a2,a0,a1
    25e4:	3cc72423          	sw	a2,968(a4)

000025e8 <inst_261>:

inst_261:
// rs1_val==46340 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x33333332
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb504, 0x33333332, x14, 972, x1)
    25e8:	0000b537          	lui	a0,0xb
    25ec:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    25f0:	333335b7          	lui	a1,0x33333
    25f4:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    25f8:	00b53633          	sltu	a2,a0,a1
    25fc:	3cc72623          	sw	a2,972(a4)

00002600 <inst_262>:

inst_262:
// rs1_val==46340 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x66666665
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb504, 0x66666665, x14, 976, x1)
    2600:	0000b537          	lui	a0,0xb
    2604:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    2608:	666665b7          	lui	a1,0x66666
    260c:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    2610:	00b53633          	sltu	a2,a0,a1
    2614:	3cc72823          	sw	a2,976(a4)

00002618 <inst_263>:

inst_263:
// rs1_val==46340 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0xb503
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb504, 0xb503, x14, 980, x1)
    2618:	0000b537          	lui	a0,0xb
    261c:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    2620:	0000b5b7          	lui	a1,0xb
    2624:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    2628:	00b53633          	sltu	a2,a0,a1
    262c:	3cc72a23          	sw	a2,980(a4)

00002630 <inst_264>:

inst_264:
// rs1_val==46340 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0xfffe
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb504, 0xfffe, x14, 984, x1)
    2630:	0000b537          	lui	a0,0xb
    2634:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    2638:	000105b7          	lui	a1,0x10
    263c:	ffe58593          	addi	a1,a1,-2 # fffe <_end+0x9ffa>
    2640:	00b53633          	sltu	a2,a0,a1
    2644:	3cc72c23          	sw	a2,984(a4)

00002648 <inst_265>:

inst_265:
// rs1_val==46340 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x55555556
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb504, 0x55555556, x14, 988, x1)
    2648:	0000b537          	lui	a0,0xb
    264c:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    2650:	555555b7          	lui	a1,0x55555
    2654:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    2658:	00b53633          	sltu	a2,a0,a1
    265c:	3cc72e23          	sw	a2,988(a4)

00002660 <inst_266>:

inst_266:
// rs1_val==46340 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0xaaaaaaab
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb504, 0xaaaaaaab, x14, 992, x1)
    2660:	0000b537          	lui	a0,0xb
    2664:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    2668:	aaaab5b7          	lui	a1,0xaaaab
    266c:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    2670:	00b53633          	sltu	a2,a0,a1
    2674:	3ec72023          	sw	a2,992(a4)

00002678 <inst_267>:

inst_267:
// rs1_val==46340 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb504, 0x6, x14, 996, x1)
    2678:	0000b537          	lui	a0,0xb
    267c:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    2680:	00600593          	li	a1,6
    2684:	00b53633          	sltu	a2,a0,a1
    2688:	3ec72223          	sw	a2,996(a4)

0000268c <inst_268>:

inst_268:
// rs1_val==46340 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb504, 0x33333334, x14, 1000, x1)
    268c:	0000b537          	lui	a0,0xb
    2690:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    2694:	333335b7          	lui	a1,0x33333
    2698:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    269c:	00b53633          	sltu	a2,a0,a1
    26a0:	3ec72423          	sw	a2,1000(a4)

000026a4 <inst_269>:

inst_269:
// rs1_val==46340 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x66666667
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb504, 0x66666667, x14, 1004, x1)
    26a4:	0000b537          	lui	a0,0xb
    26a8:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    26ac:	666665b7          	lui	a1,0x66666
    26b0:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    26b4:	00b53633          	sltu	a2,a0,a1
    26b8:	3ec72623          	sw	a2,1004(a4)

000026bc <inst_270>:

inst_270:
// rs1_val==46340 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0xb505
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb504, 0xb505, x14, 1008, x1)
    26bc:	0000b537          	lui	a0,0xb
    26c0:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    26c4:	0000b5b7          	lui	a1,0xb
    26c8:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    26cc:	00b53633          	sltu	a2,a0,a1
    26d0:	3ec72823          	sw	a2,1008(a4)

000026d4 <inst_271>:

inst_271:
// rs1_val==46340 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb504, 0x1, x14, 1012, x1)
    26d4:	0000b537          	lui	a0,0xb
    26d8:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    26dc:	00100593          	li	a1,1
    26e0:	00b53633          	sltu	a2,a0,a1
    26e4:	3ec72a23          	sw	a2,1012(a4)

000026e8 <inst_272>:

inst_272:
// rs1_val==46340 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb504, 0x10000, x14, 1016, x1)
    26e8:	0000b537          	lui	a0,0xb
    26ec:	50450513          	addi	a0,a0,1284 # b504 <_end+0x5500>
    26f0:	000105b7          	lui	a1,0x10
    26f4:	00b53633          	sltu	a2,a0,a1
    26f8:	3ec72c23          	sw	a2,1016(a4)

000026fc <inst_273>:

inst_273:
// rs1_val==0 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x0, 0x3, x14, 1020, x1)
    26fc:	00000513          	li	a0,0
    2700:	00300593          	li	a1,3
    2704:	00b53633          	sltu	a2,a0,a1
    2708:	3ec72e23          	sw	a2,1020(a4)

0000270c <inst_274>:

inst_274:
// rs1_val==0 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x0, 0x55555555, x14, 1024, x1)
    270c:	00000513          	li	a0,0
    2710:	555555b7          	lui	a1,0x55555
    2714:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    2718:	00b53633          	sltu	a2,a0,a1
    271c:	40c72023          	sw	a2,1024(a4)

00002720 <inst_275>:

inst_275:
// rs1_val==0 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xaaaaaaaa
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x0, 0xaaaaaaaa, x14, 1028, x1)
    2720:	00000513          	li	a0,0
    2724:	aaaab5b7          	lui	a1,0xaaaab
    2728:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    272c:	00b53633          	sltu	a2,a0,a1
    2730:	40c72223          	sw	a2,1028(a4)

00002734 <inst_276>:

inst_276:
// rs1_val==0 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x5
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x0, 0x5, x14, 1032, x1)
    2734:	00000513          	li	a0,0
    2738:	00500593          	li	a1,5
    273c:	00b53633          	sltu	a2,a0,a1
    2740:	40c72423          	sw	a2,1032(a4)

00002744 <inst_277>:

inst_277:
// rs1_val==0 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x33333333
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x0, 0x33333333, x14, 1036, x1)
    2744:	00000513          	li	a0,0
    2748:	333335b7          	lui	a1,0x33333
    274c:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    2750:	00b53633          	sltu	a2,a0,a1
    2754:	40c72623          	sw	a2,1036(a4)

00002758 <inst_278>:

inst_278:
// rs1_val==0 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x66666666
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x0, 0x66666666, x14, 1040, x1)
    2758:	00000513          	li	a0,0
    275c:	666665b7          	lui	a1,0x66666
    2760:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    2764:	00b53633          	sltu	a2,a0,a1
    2768:	40c72823          	sw	a2,1040(a4)

0000276c <inst_279>:

inst_279:
// rs1_val==0 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x0, 0xb504, x14, 1044, x1)
    276c:	00000513          	li	a0,0
    2770:	0000b5b7          	lui	a1,0xb
    2774:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    2778:	00b53633          	sltu	a2,a0,a1
    277c:	40c72a23          	sw	a2,1044(a4)

00002780 <inst_280>:

inst_280:
// rs1_val==0 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x0, 0x0, x14, 1048, x1)
    2780:	00000513          	li	a0,0
    2784:	00000593          	li	a1,0
    2788:	00b53633          	sltu	a2,a0,a1
    278c:	40c72c23          	sw	a2,1048(a4)

00002790 <inst_281>:

inst_281:
// rs1_val==0 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x0, 0xffff, x14, 1052, x1)
    2790:	00000513          	li	a0,0
    2794:	000105b7          	lui	a1,0x10
    2798:	fff58593          	addi	a1,a1,-1 # ffff <_end+0x9ffb>
    279c:	00b53633          	sltu	a2,a0,a1
    27a0:	40c72e23          	sw	a2,1052(a4)

000027a4 <inst_282>:

inst_282:
// rs1_val==0 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x0, 0x2, x14, 1056, x1)
    27a4:	00000513          	li	a0,0
    27a8:	00200593          	li	a1,2
    27ac:	00b53633          	sltu	a2,a0,a1
    27b0:	42c72023          	sw	a2,1056(a4)

000027b4 <inst_283>:

inst_283:
// rs1_val==0 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x0, 0x55555554, x14, 1060, x1)
    27b4:	00000513          	li	a0,0
    27b8:	555555b7          	lui	a1,0x55555
    27bc:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    27c0:	00b53633          	sltu	a2,a0,a1
    27c4:	42c72223          	sw	a2,1060(a4)

000027c8 <inst_284>:

inst_284:
// rs1_val==0 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xaaaaaaa9
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x0, 0xaaaaaaa9, x14, 1064, x1)
    27c8:	00000513          	li	a0,0
    27cc:	aaaab5b7          	lui	a1,0xaaaab
    27d0:	aa958593          	addi	a1,a1,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    27d4:	00b53633          	sltu	a2,a0,a1
    27d8:	42c72423          	sw	a2,1064(a4)

000027dc <inst_285>:

inst_285:
// rs1_val==0 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x0, 0x4, x14, 1068, x1)
    27dc:	00000513          	li	a0,0
    27e0:	00400593          	li	a1,4
    27e4:	00b53633          	sltu	a2,a0,a1
    27e8:	42c72623          	sw	a2,1068(a4)

000027ec <inst_286>:

inst_286:
// rs1_val==0 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x33333332
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x0, 0x33333332, x14, 1072, x1)
    27ec:	00000513          	li	a0,0
    27f0:	333335b7          	lui	a1,0x33333
    27f4:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    27f8:	00b53633          	sltu	a2,a0,a1
    27fc:	42c72823          	sw	a2,1072(a4)

00002800 <inst_287>:

inst_287:
// rs1_val==0 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x66666665
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x0, 0x66666665, x14, 1076, x1)
    2800:	00000513          	li	a0,0
    2804:	666665b7          	lui	a1,0x66666
    2808:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    280c:	00b53633          	sltu	a2,a0,a1
    2810:	42c72a23          	sw	a2,1076(a4)

00002814 <inst_288>:

inst_288:
// rs1_val==0 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xb503
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x0, 0xb503, x14, 1080, x1)
    2814:	00000513          	li	a0,0
    2818:	0000b5b7          	lui	a1,0xb
    281c:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    2820:	00b53633          	sltu	a2,a0,a1
    2824:	42c72c23          	sw	a2,1080(a4)

00002828 <inst_289>:

inst_289:
// rs1_val==0 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xfffe
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x0, 0xfffe, x14, 1084, x1)
    2828:	00000513          	li	a0,0
    282c:	000105b7          	lui	a1,0x10
    2830:	ffe58593          	addi	a1,a1,-2 # fffe <_end+0x9ffa>
    2834:	00b53633          	sltu	a2,a0,a1
    2838:	42c72e23          	sw	a2,1084(a4)

0000283c <inst_290>:

inst_290:
// rs1_val==0 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x55555556
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x0, 0x55555556, x14, 1088, x1)
    283c:	00000513          	li	a0,0
    2840:	555555b7          	lui	a1,0x55555
    2844:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    2848:	00b53633          	sltu	a2,a0,a1
    284c:	44c72023          	sw	a2,1088(a4)

00002850 <inst_291>:

inst_291:
// rs1_val==0 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xaaaaaaab
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x0, 0xaaaaaaab, x14, 1092, x1)
    2850:	00000513          	li	a0,0
    2854:	aaaab5b7          	lui	a1,0xaaaab
    2858:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    285c:	00b53633          	sltu	a2,a0,a1
    2860:	44c72223          	sw	a2,1092(a4)

00002864 <inst_292>:

inst_292:
// rs1_val==0 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x6
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x0, 0x6, x14, 1096, x1)
    2864:	00000513          	li	a0,0
    2868:	00600593          	li	a1,6
    286c:	00b53633          	sltu	a2,a0,a1
    2870:	44c72423          	sw	a2,1096(a4)

00002874 <inst_293>:

inst_293:
// rs1_val==0 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x0, 0x33333334, x14, 1100, x1)
    2874:	00000513          	li	a0,0
    2878:	333335b7          	lui	a1,0x33333
    287c:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    2880:	00b53633          	sltu	a2,a0,a1
    2884:	44c72623          	sw	a2,1100(a4)

00002888 <inst_294>:

inst_294:
// rs1_val==0 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x66666667
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x0, 0x66666667, x14, 1104, x1)
    2888:	00000513          	li	a0,0
    288c:	666665b7          	lui	a1,0x66666
    2890:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    2894:	00b53633          	sltu	a2,a0,a1
    2898:	44c72823          	sw	a2,1104(a4)

0000289c <inst_295>:

inst_295:
// rs1_val==0 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xb505
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x0, 0xb505, x14, 1108, x1)
    289c:	00000513          	li	a0,0
    28a0:	0000b5b7          	lui	a1,0xb
    28a4:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    28a8:	00b53633          	sltu	a2,a0,a1
    28ac:	44c72a23          	sw	a2,1108(a4)

000028b0 <inst_296>:

inst_296:
// rs1_val==0 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x1
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x0, 0x1, x14, 1112, x1)
    28b0:	00000513          	li	a0,0
    28b4:	00100593          	li	a1,1
    28b8:	00b53633          	sltu	a2,a0,a1
    28bc:	44c72c23          	sw	a2,1112(a4)

000028c0 <inst_297>:

inst_297:
// rs1_val==0 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x0, 0x10000, x14, 1116, x1)
    28c0:	00000513          	li	a0,0
    28c4:	000105b7          	lui	a1,0x10
    28c8:	00b53633          	sltu	a2,a0,a1
    28cc:	44c72e23          	sw	a2,1116(a4)

000028d0 <inst_298>:

inst_298:
// rs1_val==65535 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xffff, 0x3, x14, 1120, x1)
    28d0:	00010537          	lui	a0,0x10
    28d4:	fff50513          	addi	a0,a0,-1 # ffff <_end+0x9ffb>
    28d8:	00300593          	li	a1,3
    28dc:	00b53633          	sltu	a2,a0,a1
    28e0:	46c72023          	sw	a2,1120(a4)

000028e4 <inst_299>:

inst_299:
// rs1_val==65535 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xffff, 0x55555555, x14, 1124, x1)
    28e4:	00010537          	lui	a0,0x10
    28e8:	fff50513          	addi	a0,a0,-1 # ffff <_end+0x9ffb>
    28ec:	555555b7          	lui	a1,0x55555
    28f0:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    28f4:	00b53633          	sltu	a2,a0,a1
    28f8:	46c72223          	sw	a2,1124(a4)

000028fc <inst_300>:

inst_300:
// rs1_val==65535 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff;  op2val:0xaaaaaaaa
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xffff, 0xaaaaaaaa, x14, 1128, x1)
    28fc:	00010537          	lui	a0,0x10
    2900:	fff50513          	addi	a0,a0,-1 # ffff <_end+0x9ffb>
    2904:	aaaab5b7          	lui	a1,0xaaaab
    2908:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    290c:	00b53633          	sltu	a2,a0,a1
    2910:	46c72423          	sw	a2,1128(a4)

00002914 <inst_301>:

inst_301:
// rs1_val==65535 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff;  op2val:0x5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xffff, 0x5, x14, 1132, x1)
    2914:	00010537          	lui	a0,0x10
    2918:	fff50513          	addi	a0,a0,-1 # ffff <_end+0x9ffb>
    291c:	00500593          	li	a1,5
    2920:	00b53633          	sltu	a2,a0,a1
    2924:	46c72623          	sw	a2,1132(a4)

00002928 <inst_302>:

inst_302:
// rs1_val==65535 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff;  op2val:0x33333333
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xffff, 0x33333333, x14, 1136, x1)
    2928:	00010537          	lui	a0,0x10
    292c:	fff50513          	addi	a0,a0,-1 # ffff <_end+0x9ffb>
    2930:	333335b7          	lui	a1,0x33333
    2934:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    2938:	00b53633          	sltu	a2,a0,a1
    293c:	46c72823          	sw	a2,1136(a4)

00002940 <inst_303>:

inst_303:
// rs1_val==65535 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff;  op2val:0x66666666
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xffff, 0x66666666, x14, 1140, x1)
    2940:	00010537          	lui	a0,0x10
    2944:	fff50513          	addi	a0,a0,-1 # ffff <_end+0x9ffb>
    2948:	666665b7          	lui	a1,0x66666
    294c:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    2950:	00b53633          	sltu	a2,a0,a1
    2954:	46c72a23          	sw	a2,1140(a4)

00002958 <inst_304>:

inst_304:
// rs1_val==65535 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xffff, 0xb504, x14, 1144, x1)
    2958:	00010537          	lui	a0,0x10
    295c:	fff50513          	addi	a0,a0,-1 # ffff <_end+0x9ffb>
    2960:	0000b5b7          	lui	a1,0xb
    2964:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    2968:	00b53633          	sltu	a2,a0,a1
    296c:	46c72c23          	sw	a2,1144(a4)

00002970 <inst_305>:

inst_305:
// rs1_val==65535 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xffff, 0x0, x14, 1148, x1)
    2970:	00010537          	lui	a0,0x10
    2974:	fff50513          	addi	a0,a0,-1 # ffff <_end+0x9ffb>
    2978:	00000593          	li	a1,0
    297c:	00b53633          	sltu	a2,a0,a1
    2980:	46c72e23          	sw	a2,1148(a4)

00002984 <inst_306>:

inst_306:
// rs1_val==65535 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff;  op2val:0xffff
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xffff, 0xffff, x14, 1152, x1)
    2984:	00010537          	lui	a0,0x10
    2988:	fff50513          	addi	a0,a0,-1 # ffff <_end+0x9ffb>
    298c:	000105b7          	lui	a1,0x10
    2990:	fff58593          	addi	a1,a1,-1 # ffff <_end+0x9ffb>
    2994:	00b53633          	sltu	a2,a0,a1
    2998:	48c72023          	sw	a2,1152(a4)

0000299c <inst_307>:

inst_307:
// rs1_val==65535 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xffff, 0x2, x14, 1156, x1)
    299c:	00010537          	lui	a0,0x10
    29a0:	fff50513          	addi	a0,a0,-1 # ffff <_end+0x9ffb>
    29a4:	00200593          	li	a1,2
    29a8:	00b53633          	sltu	a2,a0,a1
    29ac:	48c72223          	sw	a2,1156(a4)

000029b0 <inst_308>:

inst_308:
// rs1_val==65535 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xffff, 0x55555554, x14, 1160, x1)
    29b0:	00010537          	lui	a0,0x10
    29b4:	fff50513          	addi	a0,a0,-1 # ffff <_end+0x9ffb>
    29b8:	555555b7          	lui	a1,0x55555
    29bc:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    29c0:	00b53633          	sltu	a2,a0,a1
    29c4:	48c72423          	sw	a2,1160(a4)

000029c8 <inst_309>:

inst_309:
// rs1_val==65535 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff;  op2val:0xaaaaaaa9
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xffff, 0xaaaaaaa9, x14, 1164, x1)
    29c8:	00010537          	lui	a0,0x10
    29cc:	fff50513          	addi	a0,a0,-1 # ffff <_end+0x9ffb>
    29d0:	aaaab5b7          	lui	a1,0xaaaab
    29d4:	aa958593          	addi	a1,a1,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    29d8:	00b53633          	sltu	a2,a0,a1
    29dc:	48c72623          	sw	a2,1164(a4)

000029e0 <inst_310>:

inst_310:
// rs1_val==65535 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xffff, 0x4, x14, 1168, x1)
    29e0:	00010537          	lui	a0,0x10
    29e4:	fff50513          	addi	a0,a0,-1 # ffff <_end+0x9ffb>
    29e8:	00400593          	li	a1,4
    29ec:	00b53633          	sltu	a2,a0,a1
    29f0:	48c72823          	sw	a2,1168(a4)

000029f4 <inst_311>:

inst_311:
// rs1_val==65535 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff;  op2val:0x33333332
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xffff, 0x33333332, x14, 1172, x1)
    29f4:	00010537          	lui	a0,0x10
    29f8:	fff50513          	addi	a0,a0,-1 # ffff <_end+0x9ffb>
    29fc:	333335b7          	lui	a1,0x33333
    2a00:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    2a04:	00b53633          	sltu	a2,a0,a1
    2a08:	48c72a23          	sw	a2,1172(a4)

00002a0c <inst_312>:

inst_312:
// rs1_val==65535 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff;  op2val:0x66666665
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xffff, 0x66666665, x14, 1176, x1)
    2a0c:	00010537          	lui	a0,0x10
    2a10:	fff50513          	addi	a0,a0,-1 # ffff <_end+0x9ffb>
    2a14:	666665b7          	lui	a1,0x66666
    2a18:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    2a1c:	00b53633          	sltu	a2,a0,a1
    2a20:	48c72c23          	sw	a2,1176(a4)

00002a24 <inst_313>:

inst_313:
// rs1_val==65535 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff;  op2val:0xb503
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xffff, 0xb503, x14, 1180, x1)
    2a24:	00010537          	lui	a0,0x10
    2a28:	fff50513          	addi	a0,a0,-1 # ffff <_end+0x9ffb>
    2a2c:	0000b5b7          	lui	a1,0xb
    2a30:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    2a34:	00b53633          	sltu	a2,a0,a1
    2a38:	48c72e23          	sw	a2,1180(a4)

00002a3c <inst_314>:

inst_314:
// rs1_val==65535 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff;  op2val:0xfffe
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xffff, 0xfffe, x14, 1184, x1)
    2a3c:	00010537          	lui	a0,0x10
    2a40:	fff50513          	addi	a0,a0,-1 # ffff <_end+0x9ffb>
    2a44:	000105b7          	lui	a1,0x10
    2a48:	ffe58593          	addi	a1,a1,-2 # fffe <_end+0x9ffa>
    2a4c:	00b53633          	sltu	a2,a0,a1
    2a50:	4ac72023          	sw	a2,1184(a4)

00002a54 <inst_315>:

inst_315:
// rs1_val==65535 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff;  op2val:0x55555556
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xffff, 0x55555556, x14, 1188, x1)
    2a54:	00010537          	lui	a0,0x10
    2a58:	fff50513          	addi	a0,a0,-1 # ffff <_end+0x9ffb>
    2a5c:	555555b7          	lui	a1,0x55555
    2a60:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    2a64:	00b53633          	sltu	a2,a0,a1
    2a68:	4ac72223          	sw	a2,1188(a4)

00002a6c <inst_316>:

inst_316:
// rs1_val==65535 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff;  op2val:0xaaaaaaab
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xffff, 0xaaaaaaab, x14, 1192, x1)
    2a6c:	00010537          	lui	a0,0x10
    2a70:	fff50513          	addi	a0,a0,-1 # ffff <_end+0x9ffb>
    2a74:	aaaab5b7          	lui	a1,0xaaaab
    2a78:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    2a7c:	00b53633          	sltu	a2,a0,a1
    2a80:	4ac72423          	sw	a2,1192(a4)

00002a84 <inst_317>:

inst_317:
// rs1_val==65535 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff;  op2val:0x6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xffff, 0x6, x14, 1196, x1)
    2a84:	00010537          	lui	a0,0x10
    2a88:	fff50513          	addi	a0,a0,-1 # ffff <_end+0x9ffb>
    2a8c:	00600593          	li	a1,6
    2a90:	00b53633          	sltu	a2,a0,a1
    2a94:	4ac72623          	sw	a2,1196(a4)

00002a98 <inst_318>:

inst_318:
// rs1_val==65535 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xffff, 0x33333334, x14, 1200, x1)
    2a98:	00010537          	lui	a0,0x10
    2a9c:	fff50513          	addi	a0,a0,-1 # ffff <_end+0x9ffb>
    2aa0:	333335b7          	lui	a1,0x33333
    2aa4:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    2aa8:	00b53633          	sltu	a2,a0,a1
    2aac:	4ac72823          	sw	a2,1200(a4)

00002ab0 <inst_319>:

inst_319:
// rs1_val==65535 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff;  op2val:0x66666667
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xffff, 0x66666667, x14, 1204, x1)
    2ab0:	00010537          	lui	a0,0x10
    2ab4:	fff50513          	addi	a0,a0,-1 # ffff <_end+0x9ffb>
    2ab8:	666665b7          	lui	a1,0x66666
    2abc:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    2ac0:	00b53633          	sltu	a2,a0,a1
    2ac4:	4ac72a23          	sw	a2,1204(a4)

00002ac8 <inst_320>:

inst_320:
// rs1_val==65535 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff;  op2val:0xb505
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xffff, 0xb505, x14, 1208, x1)
    2ac8:	00010537          	lui	a0,0x10
    2acc:	fff50513          	addi	a0,a0,-1 # ffff <_end+0x9ffb>
    2ad0:	0000b5b7          	lui	a1,0xb
    2ad4:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    2ad8:	00b53633          	sltu	a2,a0,a1
    2adc:	4ac72c23          	sw	a2,1208(a4)

00002ae0 <inst_321>:

inst_321:
// rs1_val==65535 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff;  op2val:0x1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xffff, 0x1, x14, 1212, x1)
    2ae0:	00010537          	lui	a0,0x10
    2ae4:	fff50513          	addi	a0,a0,-1 # ffff <_end+0x9ffb>
    2ae8:	00100593          	li	a1,1
    2aec:	00b53633          	sltu	a2,a0,a1
    2af0:	4ac72e23          	sw	a2,1212(a4)

00002af4 <inst_322>:

inst_322:
// rs1_val==65535 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xffff;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xffff, 0x10000, x14, 1216, x1)
    2af4:	00010537          	lui	a0,0x10
    2af8:	fff50513          	addi	a0,a0,-1 # ffff <_end+0x9ffb>
    2afc:	000105b7          	lui	a1,0x10
    2b00:	00b53633          	sltu	a2,a0,a1
    2b04:	4cc72023          	sw	a2,1216(a4)

00002b08 <inst_323>:

inst_323:
// rs1_val==2 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x2, 0x3, x14, 1220, x1)
    2b08:	00200513          	li	a0,2
    2b0c:	00300593          	li	a1,3
    2b10:	00b53633          	sltu	a2,a0,a1
    2b14:	4cc72223          	sw	a2,1220(a4)

00002b18 <inst_324>:

inst_324:
// rs1_val==2 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x2, 0x55555555, x14, 1224, x1)
    2b18:	00200513          	li	a0,2
    2b1c:	555555b7          	lui	a1,0x55555
    2b20:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    2b24:	00b53633          	sltu	a2,a0,a1
    2b28:	4cc72423          	sw	a2,1224(a4)

00002b2c <inst_325>:

inst_325:
// rs1_val==2 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0xaaaaaaaa
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x2, 0xaaaaaaaa, x14, 1228, x1)
    2b2c:	00200513          	li	a0,2
    2b30:	aaaab5b7          	lui	a1,0xaaaab
    2b34:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    2b38:	00b53633          	sltu	a2,a0,a1
    2b3c:	4cc72623          	sw	a2,1228(a4)

00002b40 <inst_326>:

inst_326:
// rs1_val==2 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x5
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x2, 0x5, x14, 1232, x1)
    2b40:	00200513          	li	a0,2
    2b44:	00500593          	li	a1,5
    2b48:	00b53633          	sltu	a2,a0,a1
    2b4c:	4cc72823          	sw	a2,1232(a4)

00002b50 <inst_327>:

inst_327:
// rs1_val==2 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x33333333
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x2, 0x33333333, x14, 1236, x1)
    2b50:	00200513          	li	a0,2
    2b54:	333335b7          	lui	a1,0x33333
    2b58:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    2b5c:	00b53633          	sltu	a2,a0,a1
    2b60:	4cc72a23          	sw	a2,1236(a4)

00002b64 <inst_328>:

inst_328:
// rs1_val==2 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x66666666
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x2, 0x66666666, x14, 1240, x1)
    2b64:	00200513          	li	a0,2
    2b68:	666665b7          	lui	a1,0x66666
    2b6c:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    2b70:	00b53633          	sltu	a2,a0,a1
    2b74:	4cc72c23          	sw	a2,1240(a4)

00002b78 <inst_329>:

inst_329:
// rs1_val==2 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x2, 0xb504, x14, 1244, x1)
    2b78:	00200513          	li	a0,2
    2b7c:	0000b5b7          	lui	a1,0xb
    2b80:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    2b84:	00b53633          	sltu	a2,a0,a1
    2b88:	4cc72e23          	sw	a2,1244(a4)

00002b8c <inst_330>:

inst_330:
// rs1_val==2 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x2, 0x0, x14, 1248, x1)
    2b8c:	00200513          	li	a0,2
    2b90:	00000593          	li	a1,0
    2b94:	00b53633          	sltu	a2,a0,a1
    2b98:	4ec72023          	sw	a2,1248(a4)

00002b9c <inst_331>:

inst_331:
// rs1_val==2 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0xffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x2, 0xffff, x14, 1252, x1)
    2b9c:	00200513          	li	a0,2
    2ba0:	000105b7          	lui	a1,0x10
    2ba4:	fff58593          	addi	a1,a1,-1 # ffff <_end+0x9ffb>
    2ba8:	00b53633          	sltu	a2,a0,a1
    2bac:	4ec72223          	sw	a2,1252(a4)

00002bb0 <inst_332>:

inst_332:
// rs1_val==2 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x2, 0x2, x14, 1256, x1)
    2bb0:	00200513          	li	a0,2
    2bb4:	00200593          	li	a1,2
    2bb8:	00b53633          	sltu	a2,a0,a1
    2bbc:	4ec72423          	sw	a2,1256(a4)

00002bc0 <inst_333>:

inst_333:
// rs1_val==2 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x2, 0x55555554, x14, 1260, x1)
    2bc0:	00200513          	li	a0,2
    2bc4:	555555b7          	lui	a1,0x55555
    2bc8:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    2bcc:	00b53633          	sltu	a2,a0,a1
    2bd0:	4ec72623          	sw	a2,1260(a4)

00002bd4 <inst_334>:

inst_334:
// rs1_val==2 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0xaaaaaaa9
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x2, 0xaaaaaaa9, x14, 1264, x1)
    2bd4:	00200513          	li	a0,2
    2bd8:	aaaab5b7          	lui	a1,0xaaaab
    2bdc:	aa958593          	addi	a1,a1,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    2be0:	00b53633          	sltu	a2,a0,a1
    2be4:	4ec72823          	sw	a2,1264(a4)

00002be8 <inst_335>:

inst_335:
// rs1_val==2 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x2, 0x4, x14, 1268, x1)
    2be8:	00200513          	li	a0,2
    2bec:	00400593          	li	a1,4
    2bf0:	00b53633          	sltu	a2,a0,a1
    2bf4:	4ec72a23          	sw	a2,1268(a4)

00002bf8 <inst_336>:

inst_336:
// rs1_val==2 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x33333332
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x2, 0x33333332, x14, 1272, x1)
    2bf8:	00200513          	li	a0,2
    2bfc:	333335b7          	lui	a1,0x33333
    2c00:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    2c04:	00b53633          	sltu	a2,a0,a1
    2c08:	4ec72c23          	sw	a2,1272(a4)

00002c0c <inst_337>:

inst_337:
// rs1_val==2 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0xb503
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x2, 0xb503, x14, 1276, x1)
    2c0c:	00200513          	li	a0,2
    2c10:	0000b5b7          	lui	a1,0xb
    2c14:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    2c18:	00b53633          	sltu	a2,a0,a1
    2c1c:	4ec72e23          	sw	a2,1276(a4)

00002c20 <inst_338>:

inst_338:
// rs1_val==2 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0xfffe
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x2, 0xfffe, x14, 1280, x1)
    2c20:	00200513          	li	a0,2
    2c24:	000105b7          	lui	a1,0x10
    2c28:	ffe58593          	addi	a1,a1,-2 # fffe <_end+0x9ffa>
    2c2c:	00b53633          	sltu	a2,a0,a1
    2c30:	50c72023          	sw	a2,1280(a4)

00002c34 <inst_339>:

inst_339:
// rs1_val==2 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x55555556
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x2, 0x55555556, x14, 1284, x1)
    2c34:	00200513          	li	a0,2
    2c38:	555555b7          	lui	a1,0x55555
    2c3c:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    2c40:	00b53633          	sltu	a2,a0,a1
    2c44:	50c72223          	sw	a2,1284(a4)

00002c48 <inst_340>:

inst_340:
// rs1_val==2 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0xaaaaaaab
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x2, 0xaaaaaaab, x14, 1288, x1)
    2c48:	00200513          	li	a0,2
    2c4c:	aaaab5b7          	lui	a1,0xaaaab
    2c50:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    2c54:	00b53633          	sltu	a2,a0,a1
    2c58:	50c72423          	sw	a2,1288(a4)

00002c5c <inst_341>:

inst_341:
// rs1_val==2 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x6
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x2, 0x6, x14, 1292, x1)
    2c5c:	00200513          	li	a0,2
    2c60:	00600593          	li	a1,6
    2c64:	00b53633          	sltu	a2,a0,a1
    2c68:	50c72623          	sw	a2,1292(a4)

00002c6c <inst_342>:

inst_342:
// rs1_val==2 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x2, 0x33333334, x14, 1296, x1)
    2c6c:	00200513          	li	a0,2
    2c70:	333335b7          	lui	a1,0x33333
    2c74:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    2c78:	00b53633          	sltu	a2,a0,a1
    2c7c:	50c72823          	sw	a2,1296(a4)

00002c80 <inst_343>:

inst_343:
// rs1_val==2 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x66666667
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x2, 0x66666667, x14, 1300, x1)
    2c80:	00200513          	li	a0,2
    2c84:	666665b7          	lui	a1,0x66666
    2c88:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    2c8c:	00b53633          	sltu	a2,a0,a1
    2c90:	50c72a23          	sw	a2,1300(a4)

00002c94 <inst_344>:

inst_344:
// rs1_val==2 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0xb505
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x2, 0xb505, x14, 1304, x1)
    2c94:	00200513          	li	a0,2
    2c98:	0000b5b7          	lui	a1,0xb
    2c9c:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    2ca0:	00b53633          	sltu	a2,a0,a1
    2ca4:	50c72c23          	sw	a2,1304(a4)

00002ca8 <inst_345>:

inst_345:
// rs1_val==2 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x2, 0x1, x14, 1308, x1)
    2ca8:	00200513          	li	a0,2
    2cac:	00100593          	li	a1,1
    2cb0:	00b53633          	sltu	a2,a0,a1
    2cb4:	50c72e23          	sw	a2,1308(a4)

00002cb8 <inst_346>:

inst_346:
// rs1_val==2 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x2, 0x10000, x14, 1312, x1)
    2cb8:	00200513          	li	a0,2
    2cbc:	000105b7          	lui	a1,0x10
    2cc0:	00b53633          	sltu	a2,a0,a1
    2cc4:	52c72023          	sw	a2,1312(a4)

00002cc8 <inst_347>:

inst_347:
// rs1_val==1431655764 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555554, 0x3, x14, 1316, x1)
    2cc8:	55555537          	lui	a0,0x55555
    2ccc:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2cd0:	00300593          	li	a1,3
    2cd4:	00b53633          	sltu	a2,a0,a1
    2cd8:	52c72223          	sw	a2,1316(a4)

00002cdc <inst_348>:

inst_348:
// rs1_val==1431655764 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x55555554, 0x55555555, x14, 1320, x1)
    2cdc:	55555537          	lui	a0,0x55555
    2ce0:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2ce4:	555555b7          	lui	a1,0x55555
    2ce8:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    2cec:	00b53633          	sltu	a2,a0,a1
    2cf0:	52c72423          	sw	a2,1320(a4)

00002cf4 <inst_349>:

inst_349:
// rs1_val==1431655764 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555554, 0x5, x14, 1324, x1)
    2cf4:	55555537          	lui	a0,0x55555
    2cf8:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2cfc:	00500593          	li	a1,5
    2d00:	00b53633          	sltu	a2,a0,a1
    2d04:	52c72623          	sw	a2,1324(a4)

00002d08 <inst_350>:

inst_350:
// rs1_val==1431655764 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x33333333
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555554, 0x33333333, x14, 1328, x1)
    2d08:	55555537          	lui	a0,0x55555
    2d0c:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2d10:	333335b7          	lui	a1,0x33333
    2d14:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    2d18:	00b53633          	sltu	a2,a0,a1
    2d1c:	52c72823          	sw	a2,1328(a4)

00002d20 <inst_351>:

inst_351:
// rs1_val==1431655764 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x66666666
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x55555554, 0x66666666, x14, 1332, x1)
    2d20:	55555537          	lui	a0,0x55555
    2d24:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2d28:	666665b7          	lui	a1,0x66666
    2d2c:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    2d30:	00b53633          	sltu	a2,a0,a1
    2d34:	52c72a23          	sw	a2,1332(a4)

00002d38 <inst_352>:

inst_352:
// rs1_val==1431655764 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555554, 0xb504, x14, 1336, x1)
    2d38:	55555537          	lui	a0,0x55555
    2d3c:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2d40:	0000b5b7          	lui	a1,0xb
    2d44:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    2d48:	00b53633          	sltu	a2,a0,a1
    2d4c:	52c72c23          	sw	a2,1336(a4)

00002d50 <inst_353>:

inst_353:
// rs1_val==1431655764 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555554, 0x0, x14, 1340, x1)
    2d50:	55555537          	lui	a0,0x55555
    2d54:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2d58:	00000593          	li	a1,0
    2d5c:	00b53633          	sltu	a2,a0,a1
    2d60:	52c72e23          	sw	a2,1340(a4)

00002d64 <inst_354>:

inst_354:
// rs1_val==1431655764 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0xffff
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555554, 0xffff, x14, 1344, x1)
    2d64:	55555537          	lui	a0,0x55555
    2d68:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2d6c:	000105b7          	lui	a1,0x10
    2d70:	fff58593          	addi	a1,a1,-1 # ffff <_end+0x9ffb>
    2d74:	00b53633          	sltu	a2,a0,a1
    2d78:	54c72023          	sw	a2,1344(a4)

00002d7c <inst_355>:

inst_355:
// rs1_val==1431655764 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555554, 0x2, x14, 1348, x1)
    2d7c:	55555537          	lui	a0,0x55555
    2d80:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2d84:	00200593          	li	a1,2
    2d88:	00b53633          	sltu	a2,a0,a1
    2d8c:	54c72223          	sw	a2,1348(a4)

00002d90 <inst_356>:

inst_356:
// rs1_val==1431655764 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555554, 0x55555554, x14, 1352, x1)
    2d90:	55555537          	lui	a0,0x55555
    2d94:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2d98:	555555b7          	lui	a1,0x55555
    2d9c:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    2da0:	00b53633          	sltu	a2,a0,a1
    2da4:	54c72423          	sw	a2,1352(a4)

00002da8 <inst_357>:

inst_357:
// rs1_val==1431655764 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0xaaaaaaa9
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x55555554, 0xaaaaaaa9, x14, 1356, x1)
    2da8:	55555537          	lui	a0,0x55555
    2dac:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2db0:	aaaab5b7          	lui	a1,0xaaaab
    2db4:	aa958593          	addi	a1,a1,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    2db8:	00b53633          	sltu	a2,a0,a1
    2dbc:	54c72623          	sw	a2,1356(a4)

00002dc0 <inst_358>:

inst_358:
// rs1_val==1431655764 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555554, 0x4, x14, 1360, x1)
    2dc0:	55555537          	lui	a0,0x55555
    2dc4:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2dc8:	00400593          	li	a1,4
    2dcc:	00b53633          	sltu	a2,a0,a1
    2dd0:	54c72823          	sw	a2,1360(a4)

00002dd4 <inst_359>:

inst_359:
// rs1_val==1431655764 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x33333332
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555554, 0x33333332, x14, 1364, x1)
    2dd4:	55555537          	lui	a0,0x55555
    2dd8:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2ddc:	333335b7          	lui	a1,0x33333
    2de0:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    2de4:	00b53633          	sltu	a2,a0,a1
    2de8:	54c72a23          	sw	a2,1364(a4)

00002dec <inst_360>:

inst_360:
// rs1_val==1431655764 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x66666665
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x55555554, 0x66666665, x14, 1368, x1)
    2dec:	55555537          	lui	a0,0x55555
    2df0:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2df4:	666665b7          	lui	a1,0x66666
    2df8:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    2dfc:	00b53633          	sltu	a2,a0,a1
    2e00:	54c72c23          	sw	a2,1368(a4)

00002e04 <inst_361>:

inst_361:
// rs1_val==1431655764 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0xb503
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555554, 0xb503, x14, 1372, x1)
    2e04:	55555537          	lui	a0,0x55555
    2e08:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2e0c:	0000b5b7          	lui	a1,0xb
    2e10:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    2e14:	00b53633          	sltu	a2,a0,a1
    2e18:	54c72e23          	sw	a2,1372(a4)

00002e1c <inst_362>:

inst_362:
// rs1_val==1431655764 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0xfffe
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555554, 0xfffe, x14, 1376, x1)
    2e1c:	55555537          	lui	a0,0x55555
    2e20:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2e24:	000105b7          	lui	a1,0x10
    2e28:	ffe58593          	addi	a1,a1,-2 # fffe <_end+0x9ffa>
    2e2c:	00b53633          	sltu	a2,a0,a1
    2e30:	56c72023          	sw	a2,1376(a4)

00002e34 <inst_363>:

inst_363:
// rs1_val==1431655764 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x55555556
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x55555554, 0x55555556, x14, 1380, x1)
    2e34:	55555537          	lui	a0,0x55555
    2e38:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2e3c:	555555b7          	lui	a1,0x55555
    2e40:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    2e44:	00b53633          	sltu	a2,a0,a1
    2e48:	56c72223          	sw	a2,1380(a4)

00002e4c <inst_364>:

inst_364:
// rs1_val==1431655764 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0xaaaaaaab
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x55555554, 0xaaaaaaab, x14, 1384, x1)
    2e4c:	55555537          	lui	a0,0x55555
    2e50:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2e54:	aaaab5b7          	lui	a1,0xaaaab
    2e58:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    2e5c:	00b53633          	sltu	a2,a0,a1
    2e60:	56c72423          	sw	a2,1384(a4)

00002e64 <inst_365>:

inst_365:
// rs1_val==1431655764 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555554, 0x6, x14, 1388, x1)
    2e64:	55555537          	lui	a0,0x55555
    2e68:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2e6c:	00600593          	li	a1,6
    2e70:	00b53633          	sltu	a2,a0,a1
    2e74:	56c72623          	sw	a2,1388(a4)

00002e78 <inst_366>:

inst_366:
// rs1_val==1431655764 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555554, 0x33333334, x14, 1392, x1)
    2e78:	55555537          	lui	a0,0x55555
    2e7c:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2e80:	333335b7          	lui	a1,0x33333
    2e84:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    2e88:	00b53633          	sltu	a2,a0,a1
    2e8c:	56c72823          	sw	a2,1392(a4)

00002e90 <inst_367>:

inst_367:
// rs1_val==1431655764 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x66666667
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x55555554, 0x66666667, x14, 1396, x1)
    2e90:	55555537          	lui	a0,0x55555
    2e94:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2e98:	666665b7          	lui	a1,0x66666
    2e9c:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    2ea0:	00b53633          	sltu	a2,a0,a1
    2ea4:	56c72a23          	sw	a2,1396(a4)

00002ea8 <inst_368>:

inst_368:
// rs1_val==1431655764 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0xb505
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555554, 0xb505, x14, 1400, x1)
    2ea8:	55555537          	lui	a0,0x55555
    2eac:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2eb0:	0000b5b7          	lui	a1,0xb
    2eb4:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    2eb8:	00b53633          	sltu	a2,a0,a1
    2ebc:	56c72c23          	sw	a2,1400(a4)

00002ec0 <inst_369>:

inst_369:
// rs1_val==1431655764 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555554, 0x1, x14, 1404, x1)
    2ec0:	55555537          	lui	a0,0x55555
    2ec4:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2ec8:	00100593          	li	a1,1
    2ecc:	00b53633          	sltu	a2,a0,a1
    2ed0:	56c72e23          	sw	a2,1404(a4)

00002ed4 <inst_370>:

inst_370:
// rs1_val==1431655764 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555554, 0x10000, x14, 1408, x1)
    2ed4:	55555537          	lui	a0,0x55555
    2ed8:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x5554f550>
    2edc:	000105b7          	lui	a1,0x10
    2ee0:	00b53633          	sltu	a2,a0,a1
    2ee4:	58c72023          	sw	a2,1408(a4)

00002ee8 <inst_371>:

inst_371:
// rs1_val==2863311529 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaa9;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaa9, 0x3, x14, 1412, x1)
    2ee8:	aaaab537          	lui	a0,0xaaaab
    2eec:	aa950513          	addi	a0,a0,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    2ef0:	00300593          	li	a1,3
    2ef4:	00b53633          	sltu	a2,a0,a1
    2ef8:	58c72223          	sw	a2,1412(a4)

00002efc <inst_372>:

inst_372:
// rs1_val==2863311529 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaa9;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaa9, 0x55555555, x14, 1416, x1)
    2efc:	aaaab537          	lui	a0,0xaaaab
    2f00:	aa950513          	addi	a0,a0,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    2f04:	555555b7          	lui	a1,0x55555
    2f08:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    2f0c:	00b53633          	sltu	a2,a0,a1
    2f10:	58c72423          	sw	a2,1416(a4)

00002f14 <inst_373>:

inst_373:
// rs1_val==2863311529 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaa9;  op2val:0xaaaaaaaa
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xaaaaaaa9, 0xaaaaaaaa, x14, 1420, x1)
    2f14:	aaaab537          	lui	a0,0xaaaab
    2f18:	aa950513          	addi	a0,a0,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    2f1c:	aaaab5b7          	lui	a1,0xaaaab
    2f20:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    2f24:	00b53633          	sltu	a2,a0,a1
    2f28:	58c72623          	sw	a2,1420(a4)

00002f2c <inst_374>:

inst_374:
// rs1_val==2863311529 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaa9;  op2val:0x5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaa9, 0x5, x14, 1424, x1)
    2f2c:	aaaab537          	lui	a0,0xaaaab
    2f30:	aa950513          	addi	a0,a0,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    2f34:	00500593          	li	a1,5
    2f38:	00b53633          	sltu	a2,a0,a1
    2f3c:	58c72823          	sw	a2,1424(a4)

00002f40 <inst_375>:

inst_375:
// rs1_val==2863311529 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaa9;  op2val:0x33333333
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaa9, 0x33333333, x14, 1428, x1)
    2f40:	aaaab537          	lui	a0,0xaaaab
    2f44:	aa950513          	addi	a0,a0,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    2f48:	333335b7          	lui	a1,0x33333
    2f4c:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    2f50:	00b53633          	sltu	a2,a0,a1
    2f54:	58c72a23          	sw	a2,1428(a4)

00002f58 <inst_376>:

inst_376:
// rs1_val==2863311529 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaa9;  op2val:0x66666666
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaa9, 0x66666666, x14, 1432, x1)
    2f58:	aaaab537          	lui	a0,0xaaaab
    2f5c:	aa950513          	addi	a0,a0,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    2f60:	666665b7          	lui	a1,0x66666
    2f64:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    2f68:	00b53633          	sltu	a2,a0,a1
    2f6c:	58c72c23          	sw	a2,1432(a4)

00002f70 <inst_377>:

inst_377:
// rs1_val==2863311529 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaa9;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaa9, 0xb504, x14, 1436, x1)
    2f70:	aaaab537          	lui	a0,0xaaaab
    2f74:	aa950513          	addi	a0,a0,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    2f78:	0000b5b7          	lui	a1,0xb
    2f7c:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    2f80:	00b53633          	sltu	a2,a0,a1
    2f84:	58c72e23          	sw	a2,1436(a4)

00002f88 <inst_378>:

inst_378:
// rs1_val==2863311529 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaa9;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaa9, 0x0, x14, 1440, x1)
    2f88:	aaaab537          	lui	a0,0xaaaab
    2f8c:	aa950513          	addi	a0,a0,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    2f90:	00000593          	li	a1,0
    2f94:	00b53633          	sltu	a2,a0,a1
    2f98:	5ac72023          	sw	a2,1440(a4)

00002f9c <inst_379>:

inst_379:
// rs1_val==2863311529 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaa9;  op2val:0xffff
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaa9, 0xffff, x14, 1444, x1)
    2f9c:	aaaab537          	lui	a0,0xaaaab
    2fa0:	aa950513          	addi	a0,a0,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    2fa4:	000105b7          	lui	a1,0x10
    2fa8:	fff58593          	addi	a1,a1,-1 # ffff <_end+0x9ffb>
    2fac:	00b53633          	sltu	a2,a0,a1
    2fb0:	5ac72223          	sw	a2,1444(a4)

00002fb4 <inst_380>:

inst_380:
// rs1_val==2863311529 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaa9;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaa9, 0x2, x14, 1448, x1)
    2fb4:	aaaab537          	lui	a0,0xaaaab
    2fb8:	aa950513          	addi	a0,a0,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    2fbc:	00200593          	li	a1,2
    2fc0:	00b53633          	sltu	a2,a0,a1
    2fc4:	5ac72423          	sw	a2,1448(a4)

00002fc8 <inst_381>:

inst_381:
// rs1_val==2863311529 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaa9;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaa9, 0x55555554, x14, 1452, x1)
    2fc8:	aaaab537          	lui	a0,0xaaaab
    2fcc:	aa950513          	addi	a0,a0,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    2fd0:	555555b7          	lui	a1,0x55555
    2fd4:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    2fd8:	00b53633          	sltu	a2,a0,a1
    2fdc:	5ac72623          	sw	a2,1452(a4)

00002fe0 <inst_382>:

inst_382:
// rs1_val==2863311529 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaa9;  op2val:0xaaaaaaa9
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaa9, 0xaaaaaaa9, x14, 1456, x1)
    2fe0:	aaaab537          	lui	a0,0xaaaab
    2fe4:	aa950513          	addi	a0,a0,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    2fe8:	aaaab5b7          	lui	a1,0xaaaab
    2fec:	aa958593          	addi	a1,a1,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    2ff0:	00b53633          	sltu	a2,a0,a1
    2ff4:	5ac72823          	sw	a2,1456(a4)

00002ff8 <inst_383>:

inst_383:
// rs1_val==2863311529 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaa9;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaa9, 0x4, x14, 1460, x1)
    2ff8:	aaaab537          	lui	a0,0xaaaab
    2ffc:	aa950513          	addi	a0,a0,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    3000:	00400593          	li	a1,4
    3004:	00b53633          	sltu	a2,a0,a1
    3008:	5ac72a23          	sw	a2,1460(a4)

0000300c <inst_384>:

inst_384:
// rs1_val==2863311529 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaa9;  op2val:0x33333332
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaa9, 0x33333332, x14, 1464, x1)
    300c:	aaaab537          	lui	a0,0xaaaab
    3010:	aa950513          	addi	a0,a0,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    3014:	333335b7          	lui	a1,0x33333
    3018:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    301c:	00b53633          	sltu	a2,a0,a1
    3020:	5ac72c23          	sw	a2,1464(a4)

00003024 <inst_385>:

inst_385:
// rs1_val==2863311529 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaa9;  op2val:0x66666665
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaa9, 0x66666665, x14, 1468, x1)
    3024:	aaaab537          	lui	a0,0xaaaab
    3028:	aa950513          	addi	a0,a0,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    302c:	666665b7          	lui	a1,0x66666
    3030:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    3034:	00b53633          	sltu	a2,a0,a1
    3038:	5ac72e23          	sw	a2,1468(a4)

0000303c <inst_386>:

inst_386:
// rs1_val==2863311529 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaa9;  op2val:0xb503
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaa9, 0xb503, x14, 1472, x1)
    303c:	aaaab537          	lui	a0,0xaaaab
    3040:	aa950513          	addi	a0,a0,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    3044:	0000b5b7          	lui	a1,0xb
    3048:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    304c:	00b53633          	sltu	a2,a0,a1
    3050:	5cc72023          	sw	a2,1472(a4)

00003054 <inst_387>:

inst_387:
// rs1_val==2863311529 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaa9;  op2val:0xfffe
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaa9, 0xfffe, x14, 1476, x1)
    3054:	aaaab537          	lui	a0,0xaaaab
    3058:	aa950513          	addi	a0,a0,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    305c:	000105b7          	lui	a1,0x10
    3060:	ffe58593          	addi	a1,a1,-2 # fffe <_end+0x9ffa>
    3064:	00b53633          	sltu	a2,a0,a1
    3068:	5cc72223          	sw	a2,1476(a4)

0000306c <inst_388>:

inst_388:
// rs1_val==2863311529 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaa9;  op2val:0x55555556
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaa9, 0x55555556, x14, 1480, x1)
    306c:	aaaab537          	lui	a0,0xaaaab
    3070:	aa950513          	addi	a0,a0,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    3074:	555555b7          	lui	a1,0x55555
    3078:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    307c:	00b53633          	sltu	a2,a0,a1
    3080:	5cc72423          	sw	a2,1480(a4)

00003084 <inst_389>:

inst_389:
// rs1_val==2863311529 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaa9;  op2val:0xaaaaaaab
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xaaaaaaa9, 0xaaaaaaab, x14, 1484, x1)
    3084:	aaaab537          	lui	a0,0xaaaab
    3088:	aa950513          	addi	a0,a0,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    308c:	aaaab5b7          	lui	a1,0xaaaab
    3090:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3094:	00b53633          	sltu	a2,a0,a1
    3098:	5cc72623          	sw	a2,1484(a4)

0000309c <inst_390>:

inst_390:
// rs1_val==2863311529 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaa9;  op2val:0x6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaa9, 0x6, x14, 1488, x1)
    309c:	aaaab537          	lui	a0,0xaaaab
    30a0:	aa950513          	addi	a0,a0,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    30a4:	00600593          	li	a1,6
    30a8:	00b53633          	sltu	a2,a0,a1
    30ac:	5cc72823          	sw	a2,1488(a4)

000030b0 <inst_391>:

inst_391:
// rs1_val==2863311529 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaa9;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaa9, 0x33333334, x14, 1492, x1)
    30b0:	aaaab537          	lui	a0,0xaaaab
    30b4:	aa950513          	addi	a0,a0,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    30b8:	333335b7          	lui	a1,0x33333
    30bc:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    30c0:	00b53633          	sltu	a2,a0,a1
    30c4:	5cc72a23          	sw	a2,1492(a4)

000030c8 <inst_392>:

inst_392:
// rs1_val==2863311529 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaa9;  op2val:0x66666667
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaa9, 0x66666667, x14, 1496, x1)
    30c8:	aaaab537          	lui	a0,0xaaaab
    30cc:	aa950513          	addi	a0,a0,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    30d0:	666665b7          	lui	a1,0x66666
    30d4:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    30d8:	00b53633          	sltu	a2,a0,a1
    30dc:	5cc72c23          	sw	a2,1496(a4)

000030e0 <inst_393>:

inst_393:
// rs1_val==2863311529 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaa9;  op2val:0xb505
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaa9, 0xb505, x14, 1500, x1)
    30e0:	aaaab537          	lui	a0,0xaaaab
    30e4:	aa950513          	addi	a0,a0,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    30e8:	0000b5b7          	lui	a1,0xb
    30ec:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    30f0:	00b53633          	sltu	a2,a0,a1
    30f4:	5cc72e23          	sw	a2,1500(a4)

000030f8 <inst_394>:

inst_394:
// rs1_val==2863311529 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaa9;  op2val:0x1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaa9, 0x1, x14, 1504, x1)
    30f8:	aaaab537          	lui	a0,0xaaaab
    30fc:	aa950513          	addi	a0,a0,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    3100:	00100593          	li	a1,1
    3104:	00b53633          	sltu	a2,a0,a1
    3108:	5ec72023          	sw	a2,1504(a4)

0000310c <inst_395>:

inst_395:
// rs1_val==2863311529 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaa9;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaa9, 0x10000, x14, 1508, x1)
    310c:	aaaab537          	lui	a0,0xaaaab
    3110:	aa950513          	addi	a0,a0,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    3114:	000105b7          	lui	a1,0x10
    3118:	00b53633          	sltu	a2,a0,a1
    311c:	5ec72223          	sw	a2,1508(a4)

00003120 <inst_396>:

inst_396:
// rs1_val==4 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x4, 0x3, x14, 1512, x1)
    3120:	00400513          	li	a0,4
    3124:	00300593          	li	a1,3
    3128:	00b53633          	sltu	a2,a0,a1
    312c:	5ec72423          	sw	a2,1512(a4)

00003130 <inst_397>:

inst_397:
// rs1_val==4 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x4, 0x55555555, x14, 1516, x1)
    3130:	00400513          	li	a0,4
    3134:	555555b7          	lui	a1,0x55555
    3138:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    313c:	00b53633          	sltu	a2,a0,a1
    3140:	5ec72623          	sw	a2,1516(a4)

00003144 <inst_398>:

inst_398:
// rs1_val==4 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0xaaaaaaaa
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x4, 0xaaaaaaaa, x14, 1520, x1)
    3144:	00400513          	li	a0,4
    3148:	aaaab5b7          	lui	a1,0xaaaab
    314c:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    3150:	00b53633          	sltu	a2,a0,a1
    3154:	5ec72823          	sw	a2,1520(a4)

00003158 <inst_399>:

inst_399:
// rs1_val==4 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x5
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x4, 0x5, x14, 1524, x1)
    3158:	00400513          	li	a0,4
    315c:	00500593          	li	a1,5
    3160:	00b53633          	sltu	a2,a0,a1
    3164:	5ec72a23          	sw	a2,1524(a4)

00003168 <inst_400>:

inst_400:
// rs1_val==4 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x33333333
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x4, 0x33333333, x14, 1528, x1)
    3168:	00400513          	li	a0,4
    316c:	333335b7          	lui	a1,0x33333
    3170:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    3174:	00b53633          	sltu	a2,a0,a1
    3178:	5ec72c23          	sw	a2,1528(a4)

0000317c <inst_401>:

inst_401:
// rs1_val==4 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x66666666
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x4, 0x66666666, x14, 1532, x1)
    317c:	00400513          	li	a0,4
    3180:	666665b7          	lui	a1,0x66666
    3184:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    3188:	00b53633          	sltu	a2,a0,a1
    318c:	5ec72e23          	sw	a2,1532(a4)

00003190 <inst_402>:

inst_402:
// rs1_val==4 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x4, 0xb504, x14, 1536, x1)
    3190:	00400513          	li	a0,4
    3194:	0000b5b7          	lui	a1,0xb
    3198:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    319c:	00b53633          	sltu	a2,a0,a1
    31a0:	60c72023          	sw	a2,1536(a4)

000031a4 <inst_403>:

inst_403:
// rs1_val==4 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x4, 0x0, x14, 1540, x1)
    31a4:	00400513          	li	a0,4
    31a8:	00000593          	li	a1,0
    31ac:	00b53633          	sltu	a2,a0,a1
    31b0:	60c72223          	sw	a2,1540(a4)

000031b4 <inst_404>:

inst_404:
// rs1_val==4 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0xffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x4, 0xffff, x14, 1544, x1)
    31b4:	00400513          	li	a0,4
    31b8:	000105b7          	lui	a1,0x10
    31bc:	fff58593          	addi	a1,a1,-1 # ffff <_end+0x9ffb>
    31c0:	00b53633          	sltu	a2,a0,a1
    31c4:	60c72423          	sw	a2,1544(a4)

000031c8 <inst_405>:

inst_405:
// rs1_val==4 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x4, 0x55555554, x14, 1548, x1)
    31c8:	00400513          	li	a0,4
    31cc:	555555b7          	lui	a1,0x55555
    31d0:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    31d4:	00b53633          	sltu	a2,a0,a1
    31d8:	60c72623          	sw	a2,1548(a4)

000031dc <inst_406>:

inst_406:
// rs1_val==4 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0xaaaaaaa9
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x4, 0xaaaaaaa9, x14, 1552, x1)
    31dc:	00400513          	li	a0,4
    31e0:	aaaab5b7          	lui	a1,0xaaaab
    31e4:	aa958593          	addi	a1,a1,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    31e8:	00b53633          	sltu	a2,a0,a1
    31ec:	60c72823          	sw	a2,1552(a4)

000031f0 <inst_407>:

inst_407:
// rs1_val==4 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x4, 0x4, x14, 1556, x1)
    31f0:	00400513          	li	a0,4
    31f4:	00400593          	li	a1,4
    31f8:	00b53633          	sltu	a2,a0,a1
    31fc:	60c72a23          	sw	a2,1556(a4)

00003200 <inst_408>:

inst_408:
// rs1_val==4 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x33333332
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x4, 0x33333332, x14, 1560, x1)
    3200:	00400513          	li	a0,4
    3204:	333335b7          	lui	a1,0x33333
    3208:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    320c:	00b53633          	sltu	a2,a0,a1
    3210:	60c72c23          	sw	a2,1560(a4)

00003214 <inst_409>:

inst_409:
// rs1_val==4 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x66666665
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x4, 0x66666665, x14, 1564, x1)
    3214:	00400513          	li	a0,4
    3218:	666665b7          	lui	a1,0x66666
    321c:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    3220:	00b53633          	sltu	a2,a0,a1
    3224:	60c72e23          	sw	a2,1564(a4)

00003228 <inst_410>:

inst_410:
// rs1_val==4 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0xb503
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x4, 0xb503, x14, 1568, x1)
    3228:	00400513          	li	a0,4
    322c:	0000b5b7          	lui	a1,0xb
    3230:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    3234:	00b53633          	sltu	a2,a0,a1
    3238:	62c72023          	sw	a2,1568(a4)

0000323c <inst_411>:

inst_411:
// rs1_val==4 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0xfffe
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x4, 0xfffe, x14, 1572, x1)
    323c:	00400513          	li	a0,4
    3240:	000105b7          	lui	a1,0x10
    3244:	ffe58593          	addi	a1,a1,-2 # fffe <_end+0x9ffa>
    3248:	00b53633          	sltu	a2,a0,a1
    324c:	62c72223          	sw	a2,1572(a4)

00003250 <inst_412>:

inst_412:
// rs1_val==4 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x55555556
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x4, 0x55555556, x14, 1576, x1)
    3250:	00400513          	li	a0,4
    3254:	555555b7          	lui	a1,0x55555
    3258:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    325c:	00b53633          	sltu	a2,a0,a1
    3260:	62c72423          	sw	a2,1576(a4)

00003264 <inst_413>:

inst_413:
// rs1_val==4 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0xaaaaaaab
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x4, 0xaaaaaaab, x14, 1580, x1)
    3264:	00400513          	li	a0,4
    3268:	aaaab5b7          	lui	a1,0xaaaab
    326c:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3270:	00b53633          	sltu	a2,a0,a1
    3274:	62c72623          	sw	a2,1580(a4)

00003278 <inst_414>:

inst_414:
// rs1_val==4 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x6
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x4, 0x6, x14, 1584, x1)
    3278:	00400513          	li	a0,4
    327c:	00600593          	li	a1,6
    3280:	00b53633          	sltu	a2,a0,a1
    3284:	62c72823          	sw	a2,1584(a4)

00003288 <inst_415>:

inst_415:
// rs1_val==4 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x4, 0x33333334, x14, 1588, x1)
    3288:	00400513          	li	a0,4
    328c:	333335b7          	lui	a1,0x33333
    3290:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    3294:	00b53633          	sltu	a2,a0,a1
    3298:	62c72a23          	sw	a2,1588(a4)

0000329c <inst_416>:

inst_416:
// rs1_val==4 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x66666667
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x4, 0x66666667, x14, 1592, x1)
    329c:	00400513          	li	a0,4
    32a0:	666665b7          	lui	a1,0x66666
    32a4:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    32a8:	00b53633          	sltu	a2,a0,a1
    32ac:	62c72c23          	sw	a2,1592(a4)

000032b0 <inst_417>:

inst_417:
// rs1_val==4 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0xb505
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x4, 0xb505, x14, 1596, x1)
    32b0:	00400513          	li	a0,4
    32b4:	0000b5b7          	lui	a1,0xb
    32b8:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    32bc:	00b53633          	sltu	a2,a0,a1
    32c0:	62c72e23          	sw	a2,1596(a4)

000032c4 <inst_418>:

inst_418:
// rs1_val==4 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x4, 0x1, x14, 1600, x1)
    32c4:	00400513          	li	a0,4
    32c8:	00100593          	li	a1,1
    32cc:	00b53633          	sltu	a2,a0,a1
    32d0:	64c72023          	sw	a2,1600(a4)

000032d4 <inst_419>:

inst_419:
// rs1_val==4 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x4, 0x10000, x14, 1604, x1)
    32d4:	00400513          	li	a0,4
    32d8:	000105b7          	lui	a1,0x10
    32dc:	00b53633          	sltu	a2,a0,a1
    32e0:	64c72223          	sw	a2,1604(a4)

000032e4 <inst_420>:

inst_420:
// rs1_val==858993458 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333332, 0x3, x14, 1608, x1)
    32e4:	33333537          	lui	a0,0x33333
    32e8:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    32ec:	00300593          	li	a1,3
    32f0:	00b53633          	sltu	a2,a0,a1
    32f4:	64c72423          	sw	a2,1608(a4)

000032f8 <inst_421>:

inst_421:
// rs1_val==858993458 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333332, 0x55555555, x14, 1612, x1)
    32f8:	33333537          	lui	a0,0x33333
    32fc:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    3300:	555555b7          	lui	a1,0x55555
    3304:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    3308:	00b53633          	sltu	a2,a0,a1
    330c:	64c72623          	sw	a2,1612(a4)

00003310 <inst_422>:

inst_422:
// rs1_val==858993458 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0xaaaaaaaa
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333332, 0xaaaaaaaa, x14, 1616, x1)
    3310:	33333537          	lui	a0,0x33333
    3314:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    3318:	aaaab5b7          	lui	a1,0xaaaab
    331c:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    3320:	00b53633          	sltu	a2,a0,a1
    3324:	64c72823          	sw	a2,1616(a4)

00003328 <inst_423>:

inst_423:
// rs1_val==858993458 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333332, 0x5, x14, 1620, x1)
    3328:	33333537          	lui	a0,0x33333
    332c:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    3330:	00500593          	li	a1,5
    3334:	00b53633          	sltu	a2,a0,a1
    3338:	64c72a23          	sw	a2,1620(a4)

0000333c <inst_424>:

inst_424:
// rs1_val==858993458 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x33333333
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333332, 0x33333333, x14, 1624, x1)
    333c:	33333537          	lui	a0,0x33333
    3340:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    3344:	333335b7          	lui	a1,0x33333
    3348:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    334c:	00b53633          	sltu	a2,a0,a1
    3350:	64c72c23          	sw	a2,1624(a4)

00003354 <inst_425>:

inst_425:
// rs1_val==858993458 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x66666666
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333332, 0x66666666, x14, 1628, x1)
    3354:	33333537          	lui	a0,0x33333
    3358:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    335c:	666665b7          	lui	a1,0x66666
    3360:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    3364:	00b53633          	sltu	a2,a0,a1
    3368:	64c72e23          	sw	a2,1628(a4)

0000336c <inst_426>:

inst_426:
// rs1_val==858993458 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333332, 0xb504, x14, 1632, x1)
    336c:	33333537          	lui	a0,0x33333
    3370:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    3374:	0000b5b7          	lui	a1,0xb
    3378:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    337c:	00b53633          	sltu	a2,a0,a1
    3380:	66c72023          	sw	a2,1632(a4)

00003384 <inst_427>:

inst_427:
// rs1_val==858993458 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333332, 0x0, x14, 1636, x1)
    3384:	33333537          	lui	a0,0x33333
    3388:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    338c:	00000593          	li	a1,0
    3390:	00b53633          	sltu	a2,a0,a1
    3394:	66c72223          	sw	a2,1636(a4)

00003398 <inst_428>:

inst_428:
// rs1_val==858993458 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0xffff
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333332, 0xffff, x14, 1640, x1)
    3398:	33333537          	lui	a0,0x33333
    339c:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    33a0:	000105b7          	lui	a1,0x10
    33a4:	fff58593          	addi	a1,a1,-1 # ffff <_end+0x9ffb>
    33a8:	00b53633          	sltu	a2,a0,a1
    33ac:	66c72423          	sw	a2,1640(a4)

000033b0 <inst_429>:

inst_429:
// rs1_val==858993458 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333332, 0x2, x14, 1644, x1)
    33b0:	33333537          	lui	a0,0x33333
    33b4:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    33b8:	00200593          	li	a1,2
    33bc:	00b53633          	sltu	a2,a0,a1
    33c0:	66c72623          	sw	a2,1644(a4)

000033c4 <inst_430>:

inst_430:
// rs1_val==858993458 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333332, 0x55555554, x14, 1648, x1)
    33c4:	33333537          	lui	a0,0x33333
    33c8:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    33cc:	555555b7          	lui	a1,0x55555
    33d0:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    33d4:	00b53633          	sltu	a2,a0,a1
    33d8:	66c72823          	sw	a2,1648(a4)

000033dc <inst_431>:

inst_431:
// rs1_val==858993458 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0xaaaaaaa9
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333332, 0xaaaaaaa9, x14, 1652, x1)
    33dc:	33333537          	lui	a0,0x33333
    33e0:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    33e4:	aaaab5b7          	lui	a1,0xaaaab
    33e8:	aa958593          	addi	a1,a1,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    33ec:	00b53633          	sltu	a2,a0,a1
    33f0:	66c72a23          	sw	a2,1652(a4)

000033f4 <inst_432>:

inst_432:
// rs1_val==858993458 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333332, 0x4, x14, 1656, x1)
    33f4:	33333537          	lui	a0,0x33333
    33f8:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    33fc:	00400593          	li	a1,4
    3400:	00b53633          	sltu	a2,a0,a1
    3404:	66c72c23          	sw	a2,1656(a4)

00003408 <inst_433>:

inst_433:
// rs1_val==858993458 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x33333332
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333332, 0x33333332, x14, 1660, x1)
    3408:	33333537          	lui	a0,0x33333
    340c:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    3410:	333335b7          	lui	a1,0x33333
    3414:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    3418:	00b53633          	sltu	a2,a0,a1
    341c:	66c72e23          	sw	a2,1660(a4)

00003420 <inst_434>:

inst_434:
// rs1_val==858993458 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x66666665
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333332, 0x66666665, x14, 1664, x1)
    3420:	33333537          	lui	a0,0x33333
    3424:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    3428:	666665b7          	lui	a1,0x66666
    342c:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    3430:	00b53633          	sltu	a2,a0,a1
    3434:	68c72023          	sw	a2,1664(a4)

00003438 <inst_435>:

inst_435:
// rs1_val==858993458 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0xb503
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333332, 0xb503, x14, 1668, x1)
    3438:	33333537          	lui	a0,0x33333
    343c:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    3440:	0000b5b7          	lui	a1,0xb
    3444:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    3448:	00b53633          	sltu	a2,a0,a1
    344c:	68c72223          	sw	a2,1668(a4)

00003450 <inst_436>:

inst_436:
// rs1_val==858993458 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0xfffe
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333332, 0xfffe, x14, 1672, x1)
    3450:	33333537          	lui	a0,0x33333
    3454:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    3458:	000105b7          	lui	a1,0x10
    345c:	ffe58593          	addi	a1,a1,-2 # fffe <_end+0x9ffa>
    3460:	00b53633          	sltu	a2,a0,a1
    3464:	68c72423          	sw	a2,1672(a4)

00003468 <inst_437>:

inst_437:
// rs1_val==858993458 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x55555556
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333332, 0x55555556, x14, 1676, x1)
    3468:	33333537          	lui	a0,0x33333
    346c:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    3470:	555555b7          	lui	a1,0x55555
    3474:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    3478:	00b53633          	sltu	a2,a0,a1
    347c:	68c72623          	sw	a2,1676(a4)

00003480 <inst_438>:

inst_438:
// rs1_val==858993458 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0xaaaaaaab
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333332, 0xaaaaaaab, x14, 1680, x1)
    3480:	33333537          	lui	a0,0x33333
    3484:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    3488:	aaaab5b7          	lui	a1,0xaaaab
    348c:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3490:	00b53633          	sltu	a2,a0,a1
    3494:	68c72823          	sw	a2,1680(a4)

00003498 <inst_439>:

inst_439:
// rs1_val==858993458 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333332, 0x6, x14, 1684, x1)
    3498:	33333537          	lui	a0,0x33333
    349c:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    34a0:	00600593          	li	a1,6
    34a4:	00b53633          	sltu	a2,a0,a1
    34a8:	68c72a23          	sw	a2,1684(a4)

000034ac <inst_440>:

inst_440:
// rs1_val==858993458 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333332, 0x33333334, x14, 1688, x1)
    34ac:	33333537          	lui	a0,0x33333
    34b0:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    34b4:	333335b7          	lui	a1,0x33333
    34b8:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    34bc:	00b53633          	sltu	a2,a0,a1
    34c0:	68c72c23          	sw	a2,1688(a4)

000034c4 <inst_441>:

inst_441:
// rs1_val==858993458 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x66666667
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333332, 0x66666667, x14, 1692, x1)
    34c4:	33333537          	lui	a0,0x33333
    34c8:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    34cc:	666665b7          	lui	a1,0x66666
    34d0:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    34d4:	00b53633          	sltu	a2,a0,a1
    34d8:	68c72e23          	sw	a2,1692(a4)

000034dc <inst_442>:

inst_442:
// rs1_val==858993458 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0xb505
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333332, 0xb505, x14, 1696, x1)
    34dc:	33333537          	lui	a0,0x33333
    34e0:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    34e4:	0000b5b7          	lui	a1,0xb
    34e8:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    34ec:	00b53633          	sltu	a2,a0,a1
    34f0:	6ac72023          	sw	a2,1696(a4)

000034f4 <inst_443>:

inst_443:
// rs1_val==858993458 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333332, 0x1, x14, 1700, x1)
    34f4:	33333537          	lui	a0,0x33333
    34f8:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    34fc:	00100593          	li	a1,1
    3500:	00b53633          	sltu	a2,a0,a1
    3504:	6ac72223          	sw	a2,1700(a4)

00003508 <inst_444>:

inst_444:
// rs1_val==858993458 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333332, 0x10000, x14, 1704, x1)
    3508:	33333537          	lui	a0,0x33333
    350c:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3332d32e>
    3510:	000105b7          	lui	a1,0x10
    3514:	00b53633          	sltu	a2,a0,a1
    3518:	6ac72423          	sw	a2,1704(a4)

0000351c <inst_445>:

inst_445:
// rs1_val==1717986917 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666665, 0x3, x14, 1708, x1)
    351c:	66666537          	lui	a0,0x66666
    3520:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3524:	00300593          	li	a1,3
    3528:	00b53633          	sltu	a2,a0,a1
    352c:	6ac72623          	sw	a2,1708(a4)

00003530 <inst_446>:

inst_446:
// rs1_val==1717986917 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666665, 0x55555555, x14, 1712, x1)
    3530:	66666537          	lui	a0,0x66666
    3534:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3538:	555555b7          	lui	a1,0x55555
    353c:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    3540:	00b53633          	sltu	a2,a0,a1
    3544:	6ac72823          	sw	a2,1712(a4)

00003548 <inst_447>:

inst_447:
// rs1_val==1717986917 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0xaaaaaaaa
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x66666665, 0xaaaaaaaa, x14, 1716, x1)
    3548:	66666537          	lui	a0,0x66666
    354c:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3550:	aaaab5b7          	lui	a1,0xaaaab
    3554:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    3558:	00b53633          	sltu	a2,a0,a1
    355c:	6ac72a23          	sw	a2,1716(a4)

00003560 <inst_448>:

inst_448:
// rs1_val==1717986917 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666665, 0x5, x14, 1720, x1)
    3560:	66666537          	lui	a0,0x66666
    3564:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3568:	00500593          	li	a1,5
    356c:	00b53633          	sltu	a2,a0,a1
    3570:	6ac72c23          	sw	a2,1720(a4)

00003574 <inst_449>:

inst_449:
// rs1_val==1717986917 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x33333333
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666665, 0x33333333, x14, 1724, x1)
    3574:	66666537          	lui	a0,0x66666
    3578:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    357c:	333335b7          	lui	a1,0x33333
    3580:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    3584:	00b53633          	sltu	a2,a0,a1
    3588:	6ac72e23          	sw	a2,1724(a4)

0000358c <inst_450>:

inst_450:
// rs1_val==1717986917 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x66666666
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x66666665, 0x66666666, x14, 1728, x1)
    358c:	66666537          	lui	a0,0x66666
    3590:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3594:	666665b7          	lui	a1,0x66666
    3598:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    359c:	00b53633          	sltu	a2,a0,a1
    35a0:	6cc72023          	sw	a2,1728(a4)

000035a4 <inst_451>:

inst_451:
// rs1_val==1717986917 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666665, 0xb504, x14, 1732, x1)
    35a4:	66666537          	lui	a0,0x66666
    35a8:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    35ac:	0000b5b7          	lui	a1,0xb
    35b0:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    35b4:	00b53633          	sltu	a2,a0,a1
    35b8:	6cc72223          	sw	a2,1732(a4)

000035bc <inst_452>:

inst_452:
// rs1_val==1717986917 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666665, 0x0, x14, 1736, x1)
    35bc:	66666537          	lui	a0,0x66666
    35c0:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    35c4:	00000593          	li	a1,0
    35c8:	00b53633          	sltu	a2,a0,a1
    35cc:	6cc72423          	sw	a2,1736(a4)

000035d0 <inst_453>:

inst_453:
// rs1_val==1717986917 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0xffff
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666665, 0xffff, x14, 1740, x1)
    35d0:	66666537          	lui	a0,0x66666
    35d4:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    35d8:	000105b7          	lui	a1,0x10
    35dc:	fff58593          	addi	a1,a1,-1 # ffff <_end+0x9ffb>
    35e0:	00b53633          	sltu	a2,a0,a1
    35e4:	6cc72623          	sw	a2,1740(a4)

000035e8 <inst_454>:

inst_454:
// rs1_val==1717986917 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666665, 0x2, x14, 1744, x1)
    35e8:	66666537          	lui	a0,0x66666
    35ec:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    35f0:	00200593          	li	a1,2
    35f4:	00b53633          	sltu	a2,a0,a1
    35f8:	6cc72823          	sw	a2,1744(a4)

000035fc <inst_455>:

inst_455:
// rs1_val==1717986917 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666665, 0x55555554, x14, 1748, x1)
    35fc:	66666537          	lui	a0,0x66666
    3600:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3604:	555555b7          	lui	a1,0x55555
    3608:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    360c:	00b53633          	sltu	a2,a0,a1
    3610:	6cc72a23          	sw	a2,1748(a4)

00003614 <inst_456>:

inst_456:
// rs1_val==1717986917 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0xaaaaaaa9
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x66666665, 0xaaaaaaa9, x14, 1752, x1)
    3614:	66666537          	lui	a0,0x66666
    3618:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    361c:	aaaab5b7          	lui	a1,0xaaaab
    3620:	aa958593          	addi	a1,a1,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    3624:	00b53633          	sltu	a2,a0,a1
    3628:	6cc72c23          	sw	a2,1752(a4)

0000362c <inst_457>:

inst_457:
// rs1_val==1717986917 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666665, 0x4, x14, 1756, x1)
    362c:	66666537          	lui	a0,0x66666
    3630:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3634:	00400593          	li	a1,4
    3638:	00b53633          	sltu	a2,a0,a1
    363c:	6cc72e23          	sw	a2,1756(a4)

00003640 <inst_458>:

inst_458:
// rs1_val==1717986917 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x33333332
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666665, 0x33333332, x14, 1760, x1)
    3640:	66666537          	lui	a0,0x66666
    3644:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3648:	333335b7          	lui	a1,0x33333
    364c:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    3650:	00b53633          	sltu	a2,a0,a1
    3654:	6ec72023          	sw	a2,1760(a4)

00003658 <inst_459>:

inst_459:
// rs1_val==1717986917 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x66666665
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666665, 0x66666665, x14, 1764, x1)
    3658:	66666537          	lui	a0,0x66666
    365c:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3660:	666665b7          	lui	a1,0x66666
    3664:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    3668:	00b53633          	sltu	a2,a0,a1
    366c:	6ec72223          	sw	a2,1764(a4)

00003670 <inst_460>:

inst_460:
// rs1_val==1717986917 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0xb503
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666665, 0xb503, x14, 1768, x1)
    3670:	66666537          	lui	a0,0x66666
    3674:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3678:	0000b5b7          	lui	a1,0xb
    367c:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    3680:	00b53633          	sltu	a2,a0,a1
    3684:	6ec72423          	sw	a2,1768(a4)

00003688 <inst_461>:

inst_461:
// rs1_val==1717986917 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0xfffe
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666665, 0xfffe, x14, 1772, x1)
    3688:	66666537          	lui	a0,0x66666
    368c:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    3690:	000105b7          	lui	a1,0x10
    3694:	ffe58593          	addi	a1,a1,-2 # fffe <_end+0x9ffa>
    3698:	00b53633          	sltu	a2,a0,a1
    369c:	6ec72623          	sw	a2,1772(a4)

000036a0 <inst_462>:

inst_462:
// rs1_val==1717986917 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x55555556
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666665, 0x55555556, x14, 1776, x1)
    36a0:	66666537          	lui	a0,0x66666
    36a4:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    36a8:	555555b7          	lui	a1,0x55555
    36ac:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    36b0:	00b53633          	sltu	a2,a0,a1
    36b4:	6ec72823          	sw	a2,1776(a4)

000036b8 <inst_463>:

inst_463:
// rs1_val==1717986917 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666665, 0x1, x14, 1780, x1)
    36b8:	66666537          	lui	a0,0x66666
    36bc:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    36c0:	00100593          	li	a1,1
    36c4:	00b53633          	sltu	a2,a0,a1
    36c8:	6ec72a23          	sw	a2,1780(a4)

000036cc <inst_464>:

inst_464:
// rs1_val==1717986917 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666665, 0x10000, x14, 1784, x1)
    36cc:	66666537          	lui	a0,0x66666
    36d0:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    36d4:	000105b7          	lui	a1,0x10
    36d8:	00b53633          	sltu	a2,a0,a1
    36dc:	6ec72c23          	sw	a2,1784(a4)

000036e0 <inst_465>:

inst_465:
// rs1_val==46339 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb503, 0x3, x14, 1788, x1)
    36e0:	0000b537          	lui	a0,0xb
    36e4:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    36e8:	00300593          	li	a1,3
    36ec:	00b53633          	sltu	a2,a0,a1
    36f0:	6ec72e23          	sw	a2,1788(a4)

000036f4 <inst_466>:

inst_466:
// rs1_val==46339 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb503, 0x55555555, x14, 1792, x1)
    36f4:	0000b537          	lui	a0,0xb
    36f8:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    36fc:	555555b7          	lui	a1,0x55555
    3700:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    3704:	00b53633          	sltu	a2,a0,a1
    3708:	70c72023          	sw	a2,1792(a4)

0000370c <inst_467>:

inst_467:
// rs1_val==46339 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0xaaaaaaaa
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb503, 0xaaaaaaaa, x14, 1796, x1)
    370c:	0000b537          	lui	a0,0xb
    3710:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3714:	aaaab5b7          	lui	a1,0xaaaab
    3718:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    371c:	00b53633          	sltu	a2,a0,a1
    3720:	70c72223          	sw	a2,1796(a4)

00003724 <inst_468>:

inst_468:
// rs1_val==46339 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb503, 0x5, x14, 1800, x1)
    3724:	0000b537          	lui	a0,0xb
    3728:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    372c:	00500593          	li	a1,5
    3730:	00b53633          	sltu	a2,a0,a1
    3734:	70c72423          	sw	a2,1800(a4)

00003738 <inst_469>:

inst_469:
// rs1_val==46339 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x33333333
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb503, 0x33333333, x14, 1804, x1)
    3738:	0000b537          	lui	a0,0xb
    373c:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3740:	333335b7          	lui	a1,0x33333
    3744:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    3748:	00b53633          	sltu	a2,a0,a1
    374c:	70c72623          	sw	a2,1804(a4)

00003750 <inst_470>:

inst_470:
// rs1_val==46339 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x66666666
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb503, 0x66666666, x14, 1808, x1)
    3750:	0000b537          	lui	a0,0xb
    3754:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3758:	666665b7          	lui	a1,0x66666
    375c:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    3760:	00b53633          	sltu	a2,a0,a1
    3764:	70c72823          	sw	a2,1808(a4)

00003768 <inst_471>:

inst_471:
// rs1_val==46339 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb503, 0xb504, x14, 1812, x1)
    3768:	0000b537          	lui	a0,0xb
    376c:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3770:	0000b5b7          	lui	a1,0xb
    3774:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    3778:	00b53633          	sltu	a2,a0,a1
    377c:	70c72a23          	sw	a2,1812(a4)

00003780 <inst_472>:

inst_472:
// rs1_val==46339 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb503, 0x0, x14, 1816, x1)
    3780:	0000b537          	lui	a0,0xb
    3784:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3788:	00000593          	li	a1,0
    378c:	00b53633          	sltu	a2,a0,a1
    3790:	70c72c23          	sw	a2,1816(a4)

00003794 <inst_473>:

inst_473:
// rs1_val==46339 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0xffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb503, 0xffff, x14, 1820, x1)
    3794:	0000b537          	lui	a0,0xb
    3798:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    379c:	000105b7          	lui	a1,0x10
    37a0:	fff58593          	addi	a1,a1,-1 # ffff <_end+0x9ffb>
    37a4:	00b53633          	sltu	a2,a0,a1
    37a8:	70c72e23          	sw	a2,1820(a4)

000037ac <inst_474>:

inst_474:
// rs1_val==46339 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb503, 0x2, x14, 1824, x1)
    37ac:	0000b537          	lui	a0,0xb
    37b0:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    37b4:	00200593          	li	a1,2
    37b8:	00b53633          	sltu	a2,a0,a1
    37bc:	72c72023          	sw	a2,1824(a4)

000037c0 <inst_475>:

inst_475:
// rs1_val==46339 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb503, 0x55555554, x14, 1828, x1)
    37c0:	0000b537          	lui	a0,0xb
    37c4:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    37c8:	555555b7          	lui	a1,0x55555
    37cc:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    37d0:	00b53633          	sltu	a2,a0,a1
    37d4:	72c72223          	sw	a2,1828(a4)

000037d8 <inst_476>:

inst_476:
// rs1_val==46339 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0xaaaaaaa9
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb503, 0xaaaaaaa9, x14, 1832, x1)
    37d8:	0000b537          	lui	a0,0xb
    37dc:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    37e0:	aaaab5b7          	lui	a1,0xaaaab
    37e4:	aa958593          	addi	a1,a1,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    37e8:	00b53633          	sltu	a2,a0,a1
    37ec:	72c72423          	sw	a2,1832(a4)

000037f0 <inst_477>:

inst_477:
// rs1_val==46339 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb503, 0x4, x14, 1836, x1)
    37f0:	0000b537          	lui	a0,0xb
    37f4:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    37f8:	00400593          	li	a1,4
    37fc:	00b53633          	sltu	a2,a0,a1
    3800:	72c72623          	sw	a2,1836(a4)

00003804 <inst_478>:

inst_478:
// rs1_val==46339 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x33333332
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb503, 0x33333332, x14, 1840, x1)
    3804:	0000b537          	lui	a0,0xb
    3808:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    380c:	333335b7          	lui	a1,0x33333
    3810:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    3814:	00b53633          	sltu	a2,a0,a1
    3818:	72c72823          	sw	a2,1840(a4)

0000381c <inst_479>:

inst_479:
// rs1_val==46339 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x66666665
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb503, 0x66666665, x14, 1844, x1)
    381c:	0000b537          	lui	a0,0xb
    3820:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3824:	666665b7          	lui	a1,0x66666
    3828:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    382c:	00b53633          	sltu	a2,a0,a1
    3830:	72c72a23          	sw	a2,1844(a4)

00003834 <inst_480>:

inst_480:
// rs1_val==46339 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0xb503
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb503, 0xb503, x14, 1848, x1)
    3834:	0000b537          	lui	a0,0xb
    3838:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    383c:	0000b5b7          	lui	a1,0xb
    3840:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    3844:	00b53633          	sltu	a2,a0,a1
    3848:	72c72c23          	sw	a2,1848(a4)

0000384c <inst_481>:

inst_481:
// rs1_val==46339 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0xfffe
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb503, 0xfffe, x14, 1852, x1)
    384c:	0000b537          	lui	a0,0xb
    3850:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3854:	000105b7          	lui	a1,0x10
    3858:	ffe58593          	addi	a1,a1,-2 # fffe <_end+0x9ffa>
    385c:	00b53633          	sltu	a2,a0,a1
    3860:	72c72e23          	sw	a2,1852(a4)

00003864 <inst_482>:

inst_482:
// rs1_val==46339 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x55555556
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb503, 0x55555556, x14, 1856, x1)
    3864:	0000b537          	lui	a0,0xb
    3868:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    386c:	555555b7          	lui	a1,0x55555
    3870:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    3874:	00b53633          	sltu	a2,a0,a1
    3878:	74c72023          	sw	a2,1856(a4)

0000387c <inst_483>:

inst_483:
// rs1_val==46339 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0xaaaaaaab
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb503, 0xaaaaaaab, x14, 1860, x1)
    387c:	0000b537          	lui	a0,0xb
    3880:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    3884:	aaaab5b7          	lui	a1,0xaaaab
    3888:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    388c:	00b53633          	sltu	a2,a0,a1
    3890:	74c72223          	sw	a2,1860(a4)

00003894 <inst_484>:

inst_484:
// rs1_val==46339 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb503, 0x6, x14, 1864, x1)
    3894:	0000b537          	lui	a0,0xb
    3898:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    389c:	00600593          	li	a1,6
    38a0:	00b53633          	sltu	a2,a0,a1
    38a4:	74c72423          	sw	a2,1864(a4)

000038a8 <inst_485>:

inst_485:
// rs1_val==46339 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb503, 0x33333334, x14, 1868, x1)
    38a8:	0000b537          	lui	a0,0xb
    38ac:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    38b0:	333335b7          	lui	a1,0x33333
    38b4:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    38b8:	00b53633          	sltu	a2,a0,a1
    38bc:	74c72623          	sw	a2,1868(a4)

000038c0 <inst_486>:

inst_486:
// rs1_val==46339 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x66666667
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb503, 0x66666667, x14, 1872, x1)
    38c0:	0000b537          	lui	a0,0xb
    38c4:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    38c8:	666665b7          	lui	a1,0x66666
    38cc:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    38d0:	00b53633          	sltu	a2,a0,a1
    38d4:	74c72823          	sw	a2,1872(a4)

000038d8 <inst_487>:

inst_487:
// rs1_val==46339 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0xb505
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb503, 0xb505, x14, 1876, x1)
    38d8:	0000b537          	lui	a0,0xb
    38dc:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    38e0:	0000b5b7          	lui	a1,0xb
    38e4:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    38e8:	00b53633          	sltu	a2,a0,a1
    38ec:	74c72a23          	sw	a2,1876(a4)

000038f0 <inst_488>:

inst_488:
// rs1_val==46339 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb503, 0x1, x14, 1880, x1)
    38f0:	0000b537          	lui	a0,0xb
    38f4:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    38f8:	00100593          	li	a1,1
    38fc:	00b53633          	sltu	a2,a0,a1
    3900:	74c72c23          	sw	a2,1880(a4)

00003904 <inst_489>:

inst_489:
// rs1_val==46339 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb503, 0x10000, x14, 1884, x1)
    3904:	0000b537          	lui	a0,0xb
    3908:	50350513          	addi	a0,a0,1283 # b503 <_end+0x54ff>
    390c:	000105b7          	lui	a1,0x10
    3910:	00b53633          	sltu	a2,a0,a1
    3914:	74c72e23          	sw	a2,1884(a4)

00003918 <inst_490>:

inst_490:
// rs1_val==65534 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xfffe, 0x3, x14, 1888, x1)
    3918:	00010537          	lui	a0,0x10
    391c:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    3920:	00300593          	li	a1,3
    3924:	00b53633          	sltu	a2,a0,a1
    3928:	76c72023          	sw	a2,1888(a4)

0000392c <inst_491>:

inst_491:
// rs1_val==65534 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xfffe, 0x55555555, x14, 1892, x1)
    392c:	00010537          	lui	a0,0x10
    3930:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    3934:	555555b7          	lui	a1,0x55555
    3938:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    393c:	00b53633          	sltu	a2,a0,a1
    3940:	76c72223          	sw	a2,1892(a4)

00003944 <inst_492>:

inst_492:
// rs1_val==65534 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0xaaaaaaaa
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xfffe, 0xaaaaaaaa, x14, 1896, x1)
    3944:	00010537          	lui	a0,0x10
    3948:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    394c:	aaaab5b7          	lui	a1,0xaaaab
    3950:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    3954:	00b53633          	sltu	a2,a0,a1
    3958:	76c72423          	sw	a2,1896(a4)

0000395c <inst_493>:

inst_493:
// rs1_val==65534 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0x5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xfffe, 0x5, x14, 1900, x1)
    395c:	00010537          	lui	a0,0x10
    3960:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    3964:	00500593          	li	a1,5
    3968:	00b53633          	sltu	a2,a0,a1
    396c:	76c72623          	sw	a2,1900(a4)

00003970 <inst_494>:

inst_494:
// rs1_val==65534 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0x33333333
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xfffe, 0x33333333, x14, 1904, x1)
    3970:	00010537          	lui	a0,0x10
    3974:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    3978:	333335b7          	lui	a1,0x33333
    397c:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    3980:	00b53633          	sltu	a2,a0,a1
    3984:	76c72823          	sw	a2,1904(a4)

00003988 <inst_495>:

inst_495:
// rs1_val==65534 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0x66666666
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xfffe, 0x66666666, x14, 1908, x1)
    3988:	00010537          	lui	a0,0x10
    398c:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    3990:	666665b7          	lui	a1,0x66666
    3994:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    3998:	00b53633          	sltu	a2,a0,a1
    399c:	76c72a23          	sw	a2,1908(a4)

000039a0 <inst_496>:

inst_496:
// rs1_val==65534 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xfffe, 0xb504, x14, 1912, x1)
    39a0:	00010537          	lui	a0,0x10
    39a4:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    39a8:	0000b5b7          	lui	a1,0xb
    39ac:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    39b0:	00b53633          	sltu	a2,a0,a1
    39b4:	76c72c23          	sw	a2,1912(a4)

000039b8 <inst_497>:

inst_497:
// rs1_val==65534 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xfffe, 0x0, x14, 1916, x1)
    39b8:	00010537          	lui	a0,0x10
    39bc:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    39c0:	00000593          	li	a1,0
    39c4:	00b53633          	sltu	a2,a0,a1
    39c8:	76c72e23          	sw	a2,1916(a4)

000039cc <inst_498>:

inst_498:
// rs1_val==65534 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0xffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xfffe, 0xffff, x14, 1920, x1)
    39cc:	00010537          	lui	a0,0x10
    39d0:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    39d4:	000105b7          	lui	a1,0x10
    39d8:	fff58593          	addi	a1,a1,-1 # ffff <_end+0x9ffb>
    39dc:	00b53633          	sltu	a2,a0,a1
    39e0:	78c72023          	sw	a2,1920(a4)

000039e4 <inst_499>:

inst_499:
// rs1_val==65534 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xfffe, 0x2, x14, 1924, x1)
    39e4:	00010537          	lui	a0,0x10
    39e8:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    39ec:	00200593          	li	a1,2
    39f0:	00b53633          	sltu	a2,a0,a1
    39f4:	78c72223          	sw	a2,1924(a4)

000039f8 <inst_500>:

inst_500:
// rs1_val==65534 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xfffe, 0x55555554, x14, 1928, x1)
    39f8:	00010537          	lui	a0,0x10
    39fc:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    3a00:	555555b7          	lui	a1,0x55555
    3a04:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    3a08:	00b53633          	sltu	a2,a0,a1
    3a0c:	78c72423          	sw	a2,1928(a4)

00003a10 <inst_501>:

inst_501:
// rs1_val==65534 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0xaaaaaaa9
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xfffe, 0xaaaaaaa9, x14, 1932, x1)
    3a10:	00010537          	lui	a0,0x10
    3a14:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    3a18:	aaaab5b7          	lui	a1,0xaaaab
    3a1c:	aa958593          	addi	a1,a1,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    3a20:	00b53633          	sltu	a2,a0,a1
    3a24:	78c72623          	sw	a2,1932(a4)

00003a28 <inst_502>:

inst_502:
// rs1_val==65534 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xfffe, 0x4, x14, 1936, x1)
    3a28:	00010537          	lui	a0,0x10
    3a2c:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    3a30:	00400593          	li	a1,4
    3a34:	00b53633          	sltu	a2,a0,a1
    3a38:	78c72823          	sw	a2,1936(a4)

00003a3c <inst_503>:

inst_503:
// rs1_val==65534 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0x33333332
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xfffe, 0x33333332, x14, 1940, x1)
    3a3c:	00010537          	lui	a0,0x10
    3a40:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    3a44:	333335b7          	lui	a1,0x33333
    3a48:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    3a4c:	00b53633          	sltu	a2,a0,a1
    3a50:	78c72a23          	sw	a2,1940(a4)

00003a54 <inst_504>:

inst_504:
// rs1_val==65534 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0x66666665
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xfffe, 0x66666665, x14, 1944, x1)
    3a54:	00010537          	lui	a0,0x10
    3a58:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    3a5c:	666665b7          	lui	a1,0x66666
    3a60:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    3a64:	00b53633          	sltu	a2,a0,a1
    3a68:	78c72c23          	sw	a2,1944(a4)

00003a6c <inst_505>:

inst_505:
// rs1_val==65534 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0xb503
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xfffe, 0xb503, x14, 1948, x1)
    3a6c:	00010537          	lui	a0,0x10
    3a70:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    3a74:	0000b5b7          	lui	a1,0xb
    3a78:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    3a7c:	00b53633          	sltu	a2,a0,a1
    3a80:	78c72e23          	sw	a2,1948(a4)

00003a84 <inst_506>:

inst_506:
// rs1_val==65534 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0xfffe
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xfffe, 0xfffe, x14, 1952, x1)
    3a84:	00010537          	lui	a0,0x10
    3a88:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    3a8c:	000105b7          	lui	a1,0x10
    3a90:	ffe58593          	addi	a1,a1,-2 # fffe <_end+0x9ffa>
    3a94:	00b53633          	sltu	a2,a0,a1
    3a98:	7ac72023          	sw	a2,1952(a4)

00003a9c <inst_507>:

inst_507:
// rs1_val==65534 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0x55555556
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xfffe, 0x55555556, x14, 1956, x1)
    3a9c:	00010537          	lui	a0,0x10
    3aa0:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    3aa4:	555555b7          	lui	a1,0x55555
    3aa8:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    3aac:	00b53633          	sltu	a2,a0,a1
    3ab0:	7ac72223          	sw	a2,1956(a4)

00003ab4 <inst_508>:

inst_508:
// rs1_val==65534 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0xaaaaaaab
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xfffe, 0xaaaaaaab, x14, 1960, x1)
    3ab4:	00010537          	lui	a0,0x10
    3ab8:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    3abc:	aaaab5b7          	lui	a1,0xaaaab
    3ac0:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3ac4:	00b53633          	sltu	a2,a0,a1
    3ac8:	7ac72423          	sw	a2,1960(a4)

00003acc <inst_509>:

inst_509:
// rs1_val==65534 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0x6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xfffe, 0x6, x14, 1964, x1)
    3acc:	00010537          	lui	a0,0x10
    3ad0:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    3ad4:	00600593          	li	a1,6
    3ad8:	00b53633          	sltu	a2,a0,a1
    3adc:	7ac72623          	sw	a2,1964(a4)

00003ae0 <inst_510>:

inst_510:
// rs1_val==65534 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xfffe, 0x33333334, x14, 1968, x1)
    3ae0:	00010537          	lui	a0,0x10
    3ae4:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    3ae8:	333335b7          	lui	a1,0x33333
    3aec:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    3af0:	00b53633          	sltu	a2,a0,a1
    3af4:	7ac72823          	sw	a2,1968(a4)

00003af8 <inst_511>:

inst_511:
// rs1_val==65534 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0x66666667
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xfffe, 0x66666667, x14, 1972, x1)
    3af8:	00010537          	lui	a0,0x10
    3afc:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    3b00:	666665b7          	lui	a1,0x66666
    3b04:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    3b08:	00b53633          	sltu	a2,a0,a1
    3b0c:	7ac72a23          	sw	a2,1972(a4)

00003b10 <inst_512>:

inst_512:
// rs1_val==65534 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0xb505
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xfffe, 0xb505, x14, 1976, x1)
    3b10:	00010537          	lui	a0,0x10
    3b14:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    3b18:	0000b5b7          	lui	a1,0xb
    3b1c:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    3b20:	00b53633          	sltu	a2,a0,a1
    3b24:	7ac72c23          	sw	a2,1976(a4)

00003b28 <inst_513>:

inst_513:
// rs1_val==65534 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0x1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xfffe, 0x1, x14, 1980, x1)
    3b28:	00010537          	lui	a0,0x10
    3b2c:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    3b30:	00100593          	li	a1,1
    3b34:	00b53633          	sltu	a2,a0,a1
    3b38:	7ac72e23          	sw	a2,1980(a4)

00003b3c <inst_514>:

inst_514:
// rs1_val==65534 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xfffe;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xfffe, 0x10000, x14, 1984, x1)
    3b3c:	00010537          	lui	a0,0x10
    3b40:	ffe50513          	addi	a0,a0,-2 # fffe <_end+0x9ffa>
    3b44:	000105b7          	lui	a1,0x10
    3b48:	00b53633          	sltu	a2,a0,a1
    3b4c:	7cc72023          	sw	a2,1984(a4)

00003b50 <inst_515>:

inst_515:
// rs1_val==1431655766 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555556, 0x3, x14, 1988, x1)
    3b50:	55555537          	lui	a0,0x55555
    3b54:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3b58:	00300593          	li	a1,3
    3b5c:	00b53633          	sltu	a2,a0,a1
    3b60:	7cc72223          	sw	a2,1988(a4)

00003b64 <inst_516>:

inst_516:
// rs1_val==1431655766 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555556, 0x55555555, x14, 1992, x1)
    3b64:	55555537          	lui	a0,0x55555
    3b68:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3b6c:	555555b7          	lui	a1,0x55555
    3b70:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    3b74:	00b53633          	sltu	a2,a0,a1
    3b78:	7cc72423          	sw	a2,1992(a4)

00003b7c <inst_517>:

inst_517:
// rs1_val==1431655766 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0xaaaaaaaa
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x55555556, 0xaaaaaaaa, x14, 1996, x1)
    3b7c:	55555537          	lui	a0,0x55555
    3b80:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3b84:	aaaab5b7          	lui	a1,0xaaaab
    3b88:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    3b8c:	00b53633          	sltu	a2,a0,a1
    3b90:	7cc72623          	sw	a2,1996(a4)

00003b94 <inst_518>:

inst_518:
// rs1_val==1431655766 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555556, 0x5, x14, 2000, x1)
    3b94:	55555537          	lui	a0,0x55555
    3b98:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3b9c:	00500593          	li	a1,5
    3ba0:	00b53633          	sltu	a2,a0,a1
    3ba4:	7cc72823          	sw	a2,2000(a4)

00003ba8 <inst_519>:

inst_519:
// rs1_val==1431655766 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x33333333
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555556, 0x33333333, x14, 2004, x1)
    3ba8:	55555537          	lui	a0,0x55555
    3bac:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3bb0:	333335b7          	lui	a1,0x33333
    3bb4:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    3bb8:	00b53633          	sltu	a2,a0,a1
    3bbc:	7cc72a23          	sw	a2,2004(a4)

00003bc0 <inst_520>:

inst_520:
// rs1_val==1431655766 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x66666666
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x55555556, 0x66666666, x14, 2008, x1)
    3bc0:	55555537          	lui	a0,0x55555
    3bc4:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3bc8:	666665b7          	lui	a1,0x66666
    3bcc:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    3bd0:	00b53633          	sltu	a2,a0,a1
    3bd4:	7cc72c23          	sw	a2,2008(a4)

00003bd8 <inst_521>:

inst_521:
// rs1_val==1431655766 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555556, 0xb504, x14, 2012, x1)
    3bd8:	55555537          	lui	a0,0x55555
    3bdc:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3be0:	0000b5b7          	lui	a1,0xb
    3be4:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    3be8:	00b53633          	sltu	a2,a0,a1
    3bec:	7cc72e23          	sw	a2,2012(a4)

00003bf0 <inst_522>:

inst_522:
// rs1_val==1431655766 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555556, 0x0, x14, 2016, x1)
    3bf0:	55555537          	lui	a0,0x55555
    3bf4:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3bf8:	00000593          	li	a1,0
    3bfc:	00b53633          	sltu	a2,a0,a1
    3c00:	7ec72023          	sw	a2,2016(a4)

00003c04 <inst_523>:

inst_523:
// rs1_val==1431655766 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0xffff
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555556, 0xffff, x14, 2020, x1)
    3c04:	55555537          	lui	a0,0x55555
    3c08:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3c0c:	000105b7          	lui	a1,0x10
    3c10:	fff58593          	addi	a1,a1,-1 # ffff <_end+0x9ffb>
    3c14:	00b53633          	sltu	a2,a0,a1
    3c18:	7ec72223          	sw	a2,2020(a4)

00003c1c <inst_524>:

inst_524:
// rs1_val==1431655766 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555556, 0x2, x14, 2024, x1)
    3c1c:	55555537          	lui	a0,0x55555
    3c20:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3c24:	00200593          	li	a1,2
    3c28:	00b53633          	sltu	a2,a0,a1
    3c2c:	7ec72423          	sw	a2,2024(a4)

00003c30 <inst_525>:

inst_525:
// rs1_val==1431655766 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555556, 0x55555554, x14, 2028, x1)
    3c30:	55555537          	lui	a0,0x55555
    3c34:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3c38:	555555b7          	lui	a1,0x55555
    3c3c:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    3c40:	00b53633          	sltu	a2,a0,a1
    3c44:	7ec72623          	sw	a2,2028(a4)

00003c48 <inst_526>:

inst_526:
// rs1_val==1431655766 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0xaaaaaaa9
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x55555556, 0xaaaaaaa9, x14, 2032, x1)
    3c48:	55555537          	lui	a0,0x55555
    3c4c:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3c50:	aaaab5b7          	lui	a1,0xaaaab
    3c54:	aa958593          	addi	a1,a1,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    3c58:	00b53633          	sltu	a2,a0,a1
    3c5c:	7ec72823          	sw	a2,2032(a4)

00003c60 <inst_527>:

inst_527:
// rs1_val==1431655766 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555556, 0x4, x14, 2036, x1)
    3c60:	55555537          	lui	a0,0x55555
    3c64:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3c68:	00400593          	li	a1,4
    3c6c:	00b53633          	sltu	a2,a0,a1
    3c70:	7ec72a23          	sw	a2,2036(a4)

00003c74 <inst_528>:

inst_528:
// rs1_val==1431655766 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x33333332
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555556, 0x33333332, x14, 2040, x1)
    3c74:	55555537          	lui	a0,0x55555
    3c78:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3c7c:	333335b7          	lui	a1,0x33333
    3c80:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    3c84:	00b53633          	sltu	a2,a0,a1
    3c88:	7ec72c23          	sw	a2,2040(a4)

00003c8c <inst_529>:

inst_529:
// rs1_val==1431655766 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x66666665
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x55555556, 0x66666665, x14, 2044, x1)
    3c8c:	55555537          	lui	a0,0x55555
    3c90:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3c94:	666665b7          	lui	a1,0x66666
    3c98:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    3c9c:	00b53633          	sltu	a2,a0,a1
    3ca0:	7ec72e23          	sw	a2,2044(a4)
RVTEST_SIGBASE( x14,signature_x14_1)
    3ca4:	00002717          	auipc	a4,0x2
    3ca8:	bb470713          	addi	a4,a4,-1100 # 5858 <signature_x14_1>

00003cac <inst_530>:

inst_530:
// rs1_val==1431655766 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0xb503
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555556, 0xb503, x14, 0, x1)
    3cac:	55555537          	lui	a0,0x55555
    3cb0:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3cb4:	0000b5b7          	lui	a1,0xb
    3cb8:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    3cbc:	00b53633          	sltu	a2,a0,a1
    3cc0:	00c72023          	sw	a2,0(a4)

00003cc4 <inst_531>:

inst_531:
// rs1_val==1431655766 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0xfffe
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555556, 0xfffe, x14, 4, x1)
    3cc4:	55555537          	lui	a0,0x55555
    3cc8:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3ccc:	000105b7          	lui	a1,0x10
    3cd0:	ffe58593          	addi	a1,a1,-2 # fffe <_end+0x9ffa>
    3cd4:	00b53633          	sltu	a2,a0,a1
    3cd8:	00c72223          	sw	a2,4(a4)

00003cdc <inst_532>:

inst_532:
// rs1_val==1431655766 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x55555556
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555556, 0x55555556, x14, 8, x1)
    3cdc:	55555537          	lui	a0,0x55555
    3ce0:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3ce4:	555555b7          	lui	a1,0x55555
    3ce8:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    3cec:	00b53633          	sltu	a2,a0,a1
    3cf0:	00c72423          	sw	a2,8(a4)

00003cf4 <inst_533>:

inst_533:
// rs1_val==1431655766 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0xaaaaaaab
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x55555556, 0xaaaaaaab, x14, 12, x1)
    3cf4:	55555537          	lui	a0,0x55555
    3cf8:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3cfc:	aaaab5b7          	lui	a1,0xaaaab
    3d00:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3d04:	00b53633          	sltu	a2,a0,a1
    3d08:	00c72623          	sw	a2,12(a4)

00003d0c <inst_534>:

inst_534:
// rs1_val==1431655766 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555556, 0x6, x14, 16, x1)
    3d0c:	55555537          	lui	a0,0x55555
    3d10:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3d14:	00600593          	li	a1,6
    3d18:	00b53633          	sltu	a2,a0,a1
    3d1c:	00c72823          	sw	a2,16(a4)

00003d20 <inst_535>:

inst_535:
// rs1_val==1431655766 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555556, 0x33333334, x14, 20, x1)
    3d20:	55555537          	lui	a0,0x55555
    3d24:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3d28:	333335b7          	lui	a1,0x33333
    3d2c:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    3d30:	00b53633          	sltu	a2,a0,a1
    3d34:	00c72a23          	sw	a2,20(a4)

00003d38 <inst_536>:

inst_536:
// rs1_val==1431655766 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x66666667
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x55555556, 0x66666667, x14, 24, x1)
    3d38:	55555537          	lui	a0,0x55555
    3d3c:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3d40:	666665b7          	lui	a1,0x66666
    3d44:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    3d48:	00b53633          	sltu	a2,a0,a1
    3d4c:	00c72c23          	sw	a2,24(a4)

00003d50 <inst_537>:

inst_537:
// rs1_val==1431655766 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0xb505
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555556, 0xb505, x14, 28, x1)
    3d50:	55555537          	lui	a0,0x55555
    3d54:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3d58:	0000b5b7          	lui	a1,0xb
    3d5c:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    3d60:	00b53633          	sltu	a2,a0,a1
    3d64:	00c72e23          	sw	a2,28(a4)

00003d68 <inst_538>:

inst_538:
// rs1_val==1431655766 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555556, 0x1, x14, 32, x1)
    3d68:	55555537          	lui	a0,0x55555
    3d6c:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3d70:	00100593          	li	a1,1
    3d74:	00b53633          	sltu	a2,a0,a1
    3d78:	02c72023          	sw	a2,32(a4)

00003d7c <inst_539>:

inst_539:
// rs1_val==1431655766 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x55555556, 0x10000, x14, 36, x1)
    3d7c:	55555537          	lui	a0,0x55555
    3d80:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x5554f552>
    3d84:	000105b7          	lui	a1,0x10
    3d88:	00b53633          	sltu	a2,a0,a1
    3d8c:	02c72223          	sw	a2,36(a4)

00003d90 <inst_540>:

inst_540:
// rs1_val==2863311531 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaab;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaab, 0x3, x14, 40, x1)
    3d90:	aaaab537          	lui	a0,0xaaaab
    3d94:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3d98:	00300593          	li	a1,3
    3d9c:	00b53633          	sltu	a2,a0,a1
    3da0:	02c72423          	sw	a2,40(a4)

00003da4 <inst_541>:

inst_541:
// rs1_val==2863311531 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaab;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaab, 0x55555555, x14, 44, x1)
    3da4:	aaaab537          	lui	a0,0xaaaab
    3da8:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3dac:	555555b7          	lui	a1,0x55555
    3db0:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    3db4:	00b53633          	sltu	a2,a0,a1
    3db8:	02c72623          	sw	a2,44(a4)

00003dbc <inst_542>:

inst_542:
// rs1_val==2863311531 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaab;  op2val:0xaaaaaaaa
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaab, 0xaaaaaaaa, x14, 48, x1)
    3dbc:	aaaab537          	lui	a0,0xaaaab
    3dc0:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3dc4:	aaaab5b7          	lui	a1,0xaaaab
    3dc8:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    3dcc:	00b53633          	sltu	a2,a0,a1
    3dd0:	02c72823          	sw	a2,48(a4)

00003dd4 <inst_543>:

inst_543:
// rs1_val==2863311531 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaab;  op2val:0x5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaab, 0x5, x14, 52, x1)
    3dd4:	aaaab537          	lui	a0,0xaaaab
    3dd8:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3ddc:	00500593          	li	a1,5
    3de0:	00b53633          	sltu	a2,a0,a1
    3de4:	02c72a23          	sw	a2,52(a4)

00003de8 <inst_544>:

inst_544:
// rs1_val==2863311531 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaab;  op2val:0x33333333
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaab, 0x33333333, x14, 56, x1)
    3de8:	aaaab537          	lui	a0,0xaaaab
    3dec:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3df0:	333335b7          	lui	a1,0x33333
    3df4:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    3df8:	00b53633          	sltu	a2,a0,a1
    3dfc:	02c72c23          	sw	a2,56(a4)

00003e00 <inst_545>:

inst_545:
// rs1_val==2863311531 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaab;  op2val:0x66666666
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaab, 0x66666666, x14, 60, x1)
    3e00:	aaaab537          	lui	a0,0xaaaab
    3e04:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3e08:	666665b7          	lui	a1,0x66666
    3e0c:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    3e10:	00b53633          	sltu	a2,a0,a1
    3e14:	02c72e23          	sw	a2,60(a4)

00003e18 <inst_546>:

inst_546:
// rs1_val==2863311531 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaab;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaab, 0xb504, x14, 64, x1)
    3e18:	aaaab537          	lui	a0,0xaaaab
    3e1c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3e20:	0000b5b7          	lui	a1,0xb
    3e24:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    3e28:	00b53633          	sltu	a2,a0,a1
    3e2c:	04c72023          	sw	a2,64(a4)

00003e30 <inst_547>:

inst_547:
// rs1_val==2863311531 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaab;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaab, 0x0, x14, 68, x1)
    3e30:	aaaab537          	lui	a0,0xaaaab
    3e34:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3e38:	00000593          	li	a1,0
    3e3c:	00b53633          	sltu	a2,a0,a1
    3e40:	04c72223          	sw	a2,68(a4)

00003e44 <inst_548>:

inst_548:
// rs1_val==2863311531 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaab;  op2val:0xffff
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaab, 0xffff, x14, 72, x1)
    3e44:	aaaab537          	lui	a0,0xaaaab
    3e48:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3e4c:	000105b7          	lui	a1,0x10
    3e50:	fff58593          	addi	a1,a1,-1 # ffff <_end+0x9ffb>
    3e54:	00b53633          	sltu	a2,a0,a1
    3e58:	04c72423          	sw	a2,72(a4)

00003e5c <inst_549>:

inst_549:
// rs1_val==2863311531 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaab;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaab, 0x2, x14, 76, x1)
    3e5c:	aaaab537          	lui	a0,0xaaaab
    3e60:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3e64:	00200593          	li	a1,2
    3e68:	00b53633          	sltu	a2,a0,a1
    3e6c:	04c72623          	sw	a2,76(a4)

00003e70 <inst_550>:

inst_550:
// rs1_val==2863311531 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaab;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaab, 0x55555554, x14, 80, x1)
    3e70:	aaaab537          	lui	a0,0xaaaab
    3e74:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3e78:	555555b7          	lui	a1,0x55555
    3e7c:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    3e80:	00b53633          	sltu	a2,a0,a1
    3e84:	04c72823          	sw	a2,80(a4)

00003e88 <inst_551>:

inst_551:
// rs1_val==2863311531 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaab;  op2val:0xaaaaaaa9
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaab, 0xaaaaaaa9, x14, 84, x1)
    3e88:	aaaab537          	lui	a0,0xaaaab
    3e8c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3e90:	aaaab5b7          	lui	a1,0xaaaab
    3e94:	aa958593          	addi	a1,a1,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    3e98:	00b53633          	sltu	a2,a0,a1
    3e9c:	04c72a23          	sw	a2,84(a4)

00003ea0 <inst_552>:

inst_552:
// rs1_val==2863311531 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaab;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaab, 0x4, x14, 88, x1)
    3ea0:	aaaab537          	lui	a0,0xaaaab
    3ea4:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3ea8:	00400593          	li	a1,4
    3eac:	00b53633          	sltu	a2,a0,a1
    3eb0:	04c72c23          	sw	a2,88(a4)

00003eb4 <inst_553>:

inst_553:
// rs1_val==2863311531 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaab;  op2val:0x33333332
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaab, 0x33333332, x14, 92, x1)
    3eb4:	aaaab537          	lui	a0,0xaaaab
    3eb8:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3ebc:	333335b7          	lui	a1,0x33333
    3ec0:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    3ec4:	00b53633          	sltu	a2,a0,a1
    3ec8:	04c72e23          	sw	a2,92(a4)

00003ecc <inst_554>:

inst_554:
// rs1_val==2863311531 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaab;  op2val:0x66666665
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaab, 0x66666665, x14, 96, x1)
    3ecc:	aaaab537          	lui	a0,0xaaaab
    3ed0:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3ed4:	666665b7          	lui	a1,0x66666
    3ed8:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    3edc:	00b53633          	sltu	a2,a0,a1
    3ee0:	06c72023          	sw	a2,96(a4)

00003ee4 <inst_555>:

inst_555:
// rs1_val==2863311531 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaab;  op2val:0xb503
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaab, 0xb503, x14, 100, x1)
    3ee4:	aaaab537          	lui	a0,0xaaaab
    3ee8:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3eec:	0000b5b7          	lui	a1,0xb
    3ef0:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    3ef4:	00b53633          	sltu	a2,a0,a1
    3ef8:	06c72223          	sw	a2,100(a4)

00003efc <inst_556>:

inst_556:
// rs1_val==2863311531 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaab;  op2val:0xfffe
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaab, 0xfffe, x14, 104, x1)
    3efc:	aaaab537          	lui	a0,0xaaaab
    3f00:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3f04:	000105b7          	lui	a1,0x10
    3f08:	ffe58593          	addi	a1,a1,-2 # fffe <_end+0x9ffa>
    3f0c:	00b53633          	sltu	a2,a0,a1
    3f10:	06c72423          	sw	a2,104(a4)

00003f14 <inst_557>:

inst_557:
// rs1_val==2863311531 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaab;  op2val:0x55555556
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaab, 0x55555556, x14, 108, x1)
    3f14:	aaaab537          	lui	a0,0xaaaab
    3f18:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3f1c:	555555b7          	lui	a1,0x55555
    3f20:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    3f24:	00b53633          	sltu	a2,a0,a1
    3f28:	06c72623          	sw	a2,108(a4)

00003f2c <inst_558>:

inst_558:
// rs1_val==2863311531 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaab;  op2val:0xaaaaaaab
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaab, 0xaaaaaaab, x14, 112, x1)
    3f2c:	aaaab537          	lui	a0,0xaaaab
    3f30:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3f34:	aaaab5b7          	lui	a1,0xaaaab
    3f38:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3f3c:	00b53633          	sltu	a2,a0,a1
    3f40:	06c72823          	sw	a2,112(a4)

00003f44 <inst_559>:

inst_559:
// rs1_val==2863311531 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaab;  op2val:0x6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaab, 0x6, x14, 116, x1)
    3f44:	aaaab537          	lui	a0,0xaaaab
    3f48:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3f4c:	00600593          	li	a1,6
    3f50:	00b53633          	sltu	a2,a0,a1
    3f54:	06c72a23          	sw	a2,116(a4)

00003f58 <inst_560>:

inst_560:
// rs1_val==2863311531 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaab;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaab, 0x33333334, x14, 120, x1)
    3f58:	aaaab537          	lui	a0,0xaaaab
    3f5c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3f60:	333335b7          	lui	a1,0x33333
    3f64:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    3f68:	00b53633          	sltu	a2,a0,a1
    3f6c:	06c72c23          	sw	a2,120(a4)

00003f70 <inst_561>:

inst_561:
// rs1_val==2863311531 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaab;  op2val:0x66666667
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaab, 0x66666667, x14, 124, x1)
    3f70:	aaaab537          	lui	a0,0xaaaab
    3f74:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3f78:	666665b7          	lui	a1,0x66666
    3f7c:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    3f80:	00b53633          	sltu	a2,a0,a1
    3f84:	06c72e23          	sw	a2,124(a4)

00003f88 <inst_562>:

inst_562:
// rs1_val==2863311531 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaab;  op2val:0xb505
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaab, 0xb505, x14, 128, x1)
    3f88:	aaaab537          	lui	a0,0xaaaab
    3f8c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3f90:	0000b5b7          	lui	a1,0xb
    3f94:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    3f98:	00b53633          	sltu	a2,a0,a1
    3f9c:	08c72023          	sw	a2,128(a4)

00003fa0 <inst_563>:

inst_563:
// rs1_val==2863311531 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaab;  op2val:0x1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaab, 0x1, x14, 132, x1)
    3fa0:	aaaab537          	lui	a0,0xaaaab
    3fa4:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3fa8:	00100593          	li	a1,1
    3fac:	00b53633          	sltu	a2,a0,a1
    3fb0:	08c72223          	sw	a2,132(a4)

00003fb4 <inst_564>:

inst_564:
// rs1_val==2863311531 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xaaaaaaab;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xaaaaaaab, 0x10000, x14, 136, x1)
    3fb4:	aaaab537          	lui	a0,0xaaaab
    3fb8:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    3fbc:	000105b7          	lui	a1,0x10
    3fc0:	00b53633          	sltu	a2,a0,a1
    3fc4:	08c72423          	sw	a2,136(a4)

00003fc8 <inst_565>:

inst_565:
// rs1_val==6 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x6, 0x3, x14, 140, x1)
    3fc8:	00600513          	li	a0,6
    3fcc:	00300593          	li	a1,3
    3fd0:	00b53633          	sltu	a2,a0,a1
    3fd4:	08c72623          	sw	a2,140(a4)

00003fd8 <inst_566>:

inst_566:
// rs1_val==6 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x6, 0x55555555, x14, 144, x1)
    3fd8:	00600513          	li	a0,6
    3fdc:	555555b7          	lui	a1,0x55555
    3fe0:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    3fe4:	00b53633          	sltu	a2,a0,a1
    3fe8:	08c72823          	sw	a2,144(a4)

00003fec <inst_567>:

inst_567:
// rs1_val==6 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0xaaaaaaaa
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x6, 0xaaaaaaaa, x14, 148, x1)
    3fec:	00600513          	li	a0,6
    3ff0:	aaaab5b7          	lui	a1,0xaaaab
    3ff4:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    3ff8:	00b53633          	sltu	a2,a0,a1
    3ffc:	08c72a23          	sw	a2,148(a4)

00004000 <inst_568>:

inst_568:
// rs1_val==6 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x6, 0x5, x14, 152, x1)
    4000:	00600513          	li	a0,6
    4004:	00500593          	li	a1,5
    4008:	00b53633          	sltu	a2,a0,a1
    400c:	08c72c23          	sw	a2,152(a4)

00004010 <inst_569>:

inst_569:
// rs1_val==6 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x33333333
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x6, 0x33333333, x14, 156, x1)
    4010:	00600513          	li	a0,6
    4014:	333335b7          	lui	a1,0x33333
    4018:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    401c:	00b53633          	sltu	a2,a0,a1
    4020:	08c72e23          	sw	a2,156(a4)

00004024 <inst_570>:

inst_570:
// rs1_val==6 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x66666666
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x6, 0x66666666, x14, 160, x1)
    4024:	00600513          	li	a0,6
    4028:	666665b7          	lui	a1,0x66666
    402c:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    4030:	00b53633          	sltu	a2,a0,a1
    4034:	0ac72023          	sw	a2,160(a4)

00004038 <inst_571>:

inst_571:
// rs1_val==6 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x6, 0xb504, x14, 164, x1)
    4038:	00600513          	li	a0,6
    403c:	0000b5b7          	lui	a1,0xb
    4040:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    4044:	00b53633          	sltu	a2,a0,a1
    4048:	0ac72223          	sw	a2,164(a4)

0000404c <inst_572>:

inst_572:
// rs1_val==6 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x6, 0x0, x14, 168, x1)
    404c:	00600513          	li	a0,6
    4050:	00000593          	li	a1,0
    4054:	00b53633          	sltu	a2,a0,a1
    4058:	0ac72423          	sw	a2,168(a4)

0000405c <inst_573>:

inst_573:
// rs1_val==6 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0xffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x6, 0xffff, x14, 172, x1)
    405c:	00600513          	li	a0,6
    4060:	000105b7          	lui	a1,0x10
    4064:	fff58593          	addi	a1,a1,-1 # ffff <_end+0x9ffb>
    4068:	00b53633          	sltu	a2,a0,a1
    406c:	0ac72623          	sw	a2,172(a4)

00004070 <inst_574>:

inst_574:
// rs1_val==6 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x6, 0x2, x14, 176, x1)
    4070:	00600513          	li	a0,6
    4074:	00200593          	li	a1,2
    4078:	00b53633          	sltu	a2,a0,a1
    407c:	0ac72823          	sw	a2,176(a4)

00004080 <inst_575>:

inst_575:
// rs1_val==6 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x6, 0x55555554, x14, 180, x1)
    4080:	00600513          	li	a0,6
    4084:	555555b7          	lui	a1,0x55555
    4088:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    408c:	00b53633          	sltu	a2,a0,a1
    4090:	0ac72a23          	sw	a2,180(a4)

00004094 <inst_576>:

inst_576:
// rs1_val==6 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0xaaaaaaa9
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x6, 0xaaaaaaa9, x14, 184, x1)
    4094:	00600513          	li	a0,6
    4098:	aaaab5b7          	lui	a1,0xaaaab
    409c:	aa958593          	addi	a1,a1,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    40a0:	00b53633          	sltu	a2,a0,a1
    40a4:	0ac72c23          	sw	a2,184(a4)

000040a8 <inst_577>:

inst_577:
// rs1_val==6 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x6, 0x4, x14, 188, x1)
    40a8:	00600513          	li	a0,6
    40ac:	00400593          	li	a1,4
    40b0:	00b53633          	sltu	a2,a0,a1
    40b4:	0ac72e23          	sw	a2,188(a4)

000040b8 <inst_578>:

inst_578:
// rs1_val==6 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x33333332
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x6, 0x33333332, x14, 192, x1)
    40b8:	00600513          	li	a0,6
    40bc:	333335b7          	lui	a1,0x33333
    40c0:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    40c4:	00b53633          	sltu	a2,a0,a1
    40c8:	0cc72023          	sw	a2,192(a4)

000040cc <inst_579>:

inst_579:
// rs1_val==6 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x66666665
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x6, 0x66666665, x14, 196, x1)
    40cc:	00600513          	li	a0,6
    40d0:	666665b7          	lui	a1,0x66666
    40d4:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    40d8:	00b53633          	sltu	a2,a0,a1
    40dc:	0cc72223          	sw	a2,196(a4)

000040e0 <inst_580>:

inst_580:
// rs1_val==6 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0xb503
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x6, 0xb503, x14, 200, x1)
    40e0:	00600513          	li	a0,6
    40e4:	0000b5b7          	lui	a1,0xb
    40e8:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    40ec:	00b53633          	sltu	a2,a0,a1
    40f0:	0cc72423          	sw	a2,200(a4)

000040f4 <inst_581>:

inst_581:
// rs1_val==6 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0xfffe
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x6, 0xfffe, x14, 204, x1)
    40f4:	00600513          	li	a0,6
    40f8:	000105b7          	lui	a1,0x10
    40fc:	ffe58593          	addi	a1,a1,-2 # fffe <_end+0x9ffa>
    4100:	00b53633          	sltu	a2,a0,a1
    4104:	0cc72623          	sw	a2,204(a4)

00004108 <inst_582>:

inst_582:
// rs1_val==6 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x55555556
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x6, 0x55555556, x14, 208, x1)
    4108:	00600513          	li	a0,6
    410c:	555555b7          	lui	a1,0x55555
    4110:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    4114:	00b53633          	sltu	a2,a0,a1
    4118:	0cc72823          	sw	a2,208(a4)

0000411c <inst_583>:

inst_583:
// rs1_val==6 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0xaaaaaaab
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x6, 0xaaaaaaab, x14, 212, x1)
    411c:	00600513          	li	a0,6
    4120:	aaaab5b7          	lui	a1,0xaaaab
    4124:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    4128:	00b53633          	sltu	a2,a0,a1
    412c:	0cc72a23          	sw	a2,212(a4)

00004130 <inst_584>:

inst_584:
// rs1_val==6 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x6, 0x6, x14, 216, x1)
    4130:	00600513          	li	a0,6
    4134:	00600593          	li	a1,6
    4138:	00b53633          	sltu	a2,a0,a1
    413c:	0cc72c23          	sw	a2,216(a4)

00004140 <inst_585>:

inst_585:
// rs1_val==6 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x6, 0x33333334, x14, 220, x1)
    4140:	00600513          	li	a0,6
    4144:	333335b7          	lui	a1,0x33333
    4148:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    414c:	00b53633          	sltu	a2,a0,a1
    4150:	0cc72e23          	sw	a2,220(a4)

00004154 <inst_586>:

inst_586:
// rs1_val==6 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x66666667
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x6, 0x66666667, x14, 224, x1)
    4154:	00600513          	li	a0,6
    4158:	666665b7          	lui	a1,0x66666
    415c:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    4160:	00b53633          	sltu	a2,a0,a1
    4164:	0ec72023          	sw	a2,224(a4)

00004168 <inst_587>:

inst_587:
// rs1_val==6 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0xb505
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x6, 0xb505, x14, 228, x1)
    4168:	00600513          	li	a0,6
    416c:	0000b5b7          	lui	a1,0xb
    4170:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    4174:	00b53633          	sltu	a2,a0,a1
    4178:	0ec72223          	sw	a2,228(a4)

0000417c <inst_588>:

inst_588:
// rs1_val==6 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x6, 0x1, x14, 232, x1)
    417c:	00600513          	li	a0,6
    4180:	00100593          	li	a1,1
    4184:	00b53633          	sltu	a2,a0,a1
    4188:	0ec72423          	sw	a2,232(a4)

0000418c <inst_589>:

inst_589:
// rs1_val==6 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x6, 0x10000, x14, 236, x1)
    418c:	00600513          	li	a0,6
    4190:	000105b7          	lui	a1,0x10
    4194:	00b53633          	sltu	a2,a0,a1
    4198:	0ec72623          	sw	a2,236(a4)

0000419c <inst_590>:

inst_590:
// rs1_val==858993460 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333334, 0x3, x14, 240, x1)
    419c:	33333537          	lui	a0,0x33333
    41a0:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    41a4:	00300593          	li	a1,3
    41a8:	00b53633          	sltu	a2,a0,a1
    41ac:	0ec72823          	sw	a2,240(a4)

000041b0 <inst_591>:

inst_591:
// rs1_val==1717986917 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0xaaaaaaab
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x66666665, 0xaaaaaaab, x14, 244, x1)
    41b0:	66666537          	lui	a0,0x66666
    41b4:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    41b8:	aaaab5b7          	lui	a1,0xaaaab
    41bc:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    41c0:	00b53633          	sltu	a2,a0,a1
    41c4:	0ec72a23          	sw	a2,244(a4)

000041c8 <inst_592>:

inst_592:
// rs1_val==858993460 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333334, 0x55555555, x14, 248, x1)
    41c8:	33333537          	lui	a0,0x33333
    41cc:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    41d0:	555555b7          	lui	a1,0x55555
    41d4:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    41d8:	00b53633          	sltu	a2,a0,a1
    41dc:	0ec72c23          	sw	a2,248(a4)

000041e0 <inst_593>:

inst_593:
// rs1_val==858993460 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0xaaaaaaaa
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333334, 0xaaaaaaaa, x14, 252, x1)
    41e0:	33333537          	lui	a0,0x33333
    41e4:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    41e8:	aaaab5b7          	lui	a1,0xaaaab
    41ec:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    41f0:	00b53633          	sltu	a2,a0,a1
    41f4:	0ec72e23          	sw	a2,252(a4)

000041f8 <inst_594>:

inst_594:
// rs1_val==858993460 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333334, 0x5, x14, 256, x1)
    41f8:	33333537          	lui	a0,0x33333
    41fc:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    4200:	00500593          	li	a1,5
    4204:	00b53633          	sltu	a2,a0,a1
    4208:	10c72023          	sw	a2,256(a4)

0000420c <inst_595>:

inst_595:
// rs1_val==858993460 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x33333333
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333334, 0x33333333, x14, 260, x1)
    420c:	33333537          	lui	a0,0x33333
    4210:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    4214:	333335b7          	lui	a1,0x33333
    4218:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    421c:	00b53633          	sltu	a2,a0,a1
    4220:	10c72223          	sw	a2,260(a4)

00004224 <inst_596>:

inst_596:
// rs1_val==858993460 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x66666666
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333334, 0x66666666, x14, 264, x1)
    4224:	33333537          	lui	a0,0x33333
    4228:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    422c:	666665b7          	lui	a1,0x66666
    4230:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    4234:	00b53633          	sltu	a2,a0,a1
    4238:	10c72423          	sw	a2,264(a4)

0000423c <inst_597>:

inst_597:
// rs1_val==858993460 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333334, 0xb504, x14, 268, x1)
    423c:	33333537          	lui	a0,0x33333
    4240:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    4244:	0000b5b7          	lui	a1,0xb
    4248:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    424c:	00b53633          	sltu	a2,a0,a1
    4250:	10c72623          	sw	a2,268(a4)

00004254 <inst_598>:

inst_598:
// rs1_val==858993460 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333334, 0x0, x14, 272, x1)
    4254:	33333537          	lui	a0,0x33333
    4258:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    425c:	00000593          	li	a1,0
    4260:	00b53633          	sltu	a2,a0,a1
    4264:	10c72823          	sw	a2,272(a4)

00004268 <inst_599>:

inst_599:
// rs1_val==858993460 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0xffff
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333334, 0xffff, x14, 276, x1)
    4268:	33333537          	lui	a0,0x33333
    426c:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    4270:	000105b7          	lui	a1,0x10
    4274:	fff58593          	addi	a1,a1,-1 # ffff <_end+0x9ffb>
    4278:	00b53633          	sltu	a2,a0,a1
    427c:	10c72a23          	sw	a2,276(a4)

00004280 <inst_600>:

inst_600:
// rs1_val==858993460 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333334, 0x2, x14, 280, x1)
    4280:	33333537          	lui	a0,0x33333
    4284:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    4288:	00200593          	li	a1,2
    428c:	00b53633          	sltu	a2,a0,a1
    4290:	10c72c23          	sw	a2,280(a4)

00004294 <inst_601>:

inst_601:
// rs1_val==858993460 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333334, 0x55555554, x14, 284, x1)
    4294:	33333537          	lui	a0,0x33333
    4298:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    429c:	555555b7          	lui	a1,0x55555
    42a0:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    42a4:	00b53633          	sltu	a2,a0,a1
    42a8:	10c72e23          	sw	a2,284(a4)

000042ac <inst_602>:

inst_602:
// rs1_val==858993460 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0xaaaaaaa9
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333334, 0xaaaaaaa9, x14, 288, x1)
    42ac:	33333537          	lui	a0,0x33333
    42b0:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    42b4:	aaaab5b7          	lui	a1,0xaaaab
    42b8:	aa958593          	addi	a1,a1,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    42bc:	00b53633          	sltu	a2,a0,a1
    42c0:	12c72023          	sw	a2,288(a4)

000042c4 <inst_603>:

inst_603:
// rs1_val==858993460 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333334, 0x4, x14, 292, x1)
    42c4:	33333537          	lui	a0,0x33333
    42c8:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    42cc:	00400593          	li	a1,4
    42d0:	00b53633          	sltu	a2,a0,a1
    42d4:	12c72223          	sw	a2,292(a4)

000042d8 <inst_604>:

inst_604:
// rs1_val==858993460 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x33333332
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333334, 0x33333332, x14, 296, x1)
    42d8:	33333537          	lui	a0,0x33333
    42dc:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    42e0:	333335b7          	lui	a1,0x33333
    42e4:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    42e8:	00b53633          	sltu	a2,a0,a1
    42ec:	12c72423          	sw	a2,296(a4)

000042f0 <inst_605>:

inst_605:
// rs1_val==858993460 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x66666665
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333334, 0x66666665, x14, 300, x1)
    42f0:	33333537          	lui	a0,0x33333
    42f4:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    42f8:	666665b7          	lui	a1,0x66666
    42fc:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    4300:	00b53633          	sltu	a2,a0,a1
    4304:	12c72623          	sw	a2,300(a4)

00004308 <inst_606>:

inst_606:
// rs1_val==858993460 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0xb503
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333334, 0xb503, x14, 304, x1)
    4308:	33333537          	lui	a0,0x33333
    430c:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    4310:	0000b5b7          	lui	a1,0xb
    4314:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    4318:	00b53633          	sltu	a2,a0,a1
    431c:	12c72823          	sw	a2,304(a4)

00004320 <inst_607>:

inst_607:
// rs1_val==858993460 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0xfffe
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333334, 0xfffe, x14, 308, x1)
    4320:	33333537          	lui	a0,0x33333
    4324:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    4328:	000105b7          	lui	a1,0x10
    432c:	ffe58593          	addi	a1,a1,-2 # fffe <_end+0x9ffa>
    4330:	00b53633          	sltu	a2,a0,a1
    4334:	12c72a23          	sw	a2,308(a4)

00004338 <inst_608>:

inst_608:
// rs1_val==858993460 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x55555556
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333334, 0x55555556, x14, 312, x1)
    4338:	33333537          	lui	a0,0x33333
    433c:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    4340:	555555b7          	lui	a1,0x55555
    4344:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    4348:	00b53633          	sltu	a2,a0,a1
    434c:	12c72c23          	sw	a2,312(a4)

00004350 <inst_609>:

inst_609:
// rs1_val==858993460 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0xaaaaaaab
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333334, 0xaaaaaaab, x14, 316, x1)
    4350:	33333537          	lui	a0,0x33333
    4354:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    4358:	aaaab5b7          	lui	a1,0xaaaab
    435c:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    4360:	00b53633          	sltu	a2,a0,a1
    4364:	12c72e23          	sw	a2,316(a4)

00004368 <inst_610>:

inst_610:
// rs1_val==858993460 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333334, 0x6, x14, 320, x1)
    4368:	33333537          	lui	a0,0x33333
    436c:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    4370:	00600593          	li	a1,6
    4374:	00b53633          	sltu	a2,a0,a1
    4378:	14c72023          	sw	a2,320(a4)

0000437c <inst_611>:

inst_611:
// rs1_val==858993460 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333334, 0x33333334, x14, 324, x1)
    437c:	33333537          	lui	a0,0x33333
    4380:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    4384:	333335b7          	lui	a1,0x33333
    4388:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    438c:	00b53633          	sltu	a2,a0,a1
    4390:	14c72223          	sw	a2,324(a4)

00004394 <inst_612>:

inst_612:
// rs1_val==858993460 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x66666667
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x33333334, 0x66666667, x14, 328, x1)
    4394:	33333537          	lui	a0,0x33333
    4398:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    439c:	666665b7          	lui	a1,0x66666
    43a0:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    43a4:	00b53633          	sltu	a2,a0,a1
    43a8:	14c72423          	sw	a2,328(a4)

000043ac <inst_613>:

inst_613:
// rs1_val==858993460 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0xb505
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333334, 0xb505, x14, 332, x1)
    43ac:	33333537          	lui	a0,0x33333
    43b0:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    43b4:	0000b5b7          	lui	a1,0xb
    43b8:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    43bc:	00b53633          	sltu	a2,a0,a1
    43c0:	14c72623          	sw	a2,332(a4)

000043c4 <inst_614>:

inst_614:
// rs1_val==858993460 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333334, 0x1, x14, 336, x1)
    43c4:	33333537          	lui	a0,0x33333
    43c8:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    43cc:	00100593          	li	a1,1
    43d0:	00b53633          	sltu	a2,a0,a1
    43d4:	14c72823          	sw	a2,336(a4)

000043d8 <inst_615>:

inst_615:
// rs1_val==858993460 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x33333334, 0x10000, x14, 340, x1)
    43d8:	33333537          	lui	a0,0x33333
    43dc:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x3332d330>
    43e0:	000105b7          	lui	a1,0x10
    43e4:	00b53633          	sltu	a2,a0,a1
    43e8:	14c72a23          	sw	a2,340(a4)

000043ec <inst_616>:

inst_616:
// rs1_val==1717986919 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666667, 0x3, x14, 344, x1)
    43ec:	66666537          	lui	a0,0x66666
    43f0:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    43f4:	00300593          	li	a1,3
    43f8:	00b53633          	sltu	a2,a0,a1
    43fc:	14c72c23          	sw	a2,344(a4)

00004400 <inst_617>:

inst_617:
// rs1_val==1717986919 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666667, 0x55555555, x14, 348, x1)
    4400:	66666537          	lui	a0,0x66666
    4404:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    4408:	555555b7          	lui	a1,0x55555
    440c:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    4410:	00b53633          	sltu	a2,a0,a1
    4414:	14c72e23          	sw	a2,348(a4)

00004418 <inst_618>:

inst_618:
// rs1_val==1717986919 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0xaaaaaaaa
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x66666667, 0xaaaaaaaa, x14, 352, x1)
    4418:	66666537          	lui	a0,0x66666
    441c:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    4420:	aaaab5b7          	lui	a1,0xaaaab
    4424:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    4428:	00b53633          	sltu	a2,a0,a1
    442c:	16c72023          	sw	a2,352(a4)

00004430 <inst_619>:

inst_619:
// rs1_val==1717986919 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666667, 0x5, x14, 356, x1)
    4430:	66666537          	lui	a0,0x66666
    4434:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    4438:	00500593          	li	a1,5
    443c:	00b53633          	sltu	a2,a0,a1
    4440:	16c72223          	sw	a2,356(a4)

00004444 <inst_620>:

inst_620:
// rs1_val==1717986919 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x33333333
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666667, 0x33333333, x14, 360, x1)
    4444:	66666537          	lui	a0,0x66666
    4448:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    444c:	333335b7          	lui	a1,0x33333
    4450:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    4454:	00b53633          	sltu	a2,a0,a1
    4458:	16c72423          	sw	a2,360(a4)

0000445c <inst_621>:

inst_621:
// rs1_val==1717986919 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x66666666
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666667, 0x66666666, x14, 364, x1)
    445c:	66666537          	lui	a0,0x66666
    4460:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    4464:	666665b7          	lui	a1,0x66666
    4468:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    446c:	00b53633          	sltu	a2,a0,a1
    4470:	16c72623          	sw	a2,364(a4)

00004474 <inst_622>:

inst_622:
// rs1_val==1717986919 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666667, 0xb504, x14, 368, x1)
    4474:	66666537          	lui	a0,0x66666
    4478:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    447c:	0000b5b7          	lui	a1,0xb
    4480:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    4484:	00b53633          	sltu	a2,a0,a1
    4488:	16c72823          	sw	a2,368(a4)

0000448c <inst_623>:

inst_623:
// rs1_val==1717986919 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666667, 0x0, x14, 372, x1)
    448c:	66666537          	lui	a0,0x66666
    4490:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    4494:	00000593          	li	a1,0
    4498:	00b53633          	sltu	a2,a0,a1
    449c:	16c72a23          	sw	a2,372(a4)

000044a0 <inst_624>:

inst_624:
// rs1_val==1717986919 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0xffff
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666667, 0xffff, x14, 376, x1)
    44a0:	66666537          	lui	a0,0x66666
    44a4:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    44a8:	000105b7          	lui	a1,0x10
    44ac:	fff58593          	addi	a1,a1,-1 # ffff <_end+0x9ffb>
    44b0:	00b53633          	sltu	a2,a0,a1
    44b4:	16c72c23          	sw	a2,376(a4)

000044b8 <inst_625>:

inst_625:
// rs1_val==1717986919 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666667, 0x2, x14, 380, x1)
    44b8:	66666537          	lui	a0,0x66666
    44bc:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    44c0:	00200593          	li	a1,2
    44c4:	00b53633          	sltu	a2,a0,a1
    44c8:	16c72e23          	sw	a2,380(a4)

000044cc <inst_626>:

inst_626:
// rs1_val==1717986919 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666667, 0x55555554, x14, 384, x1)
    44cc:	66666537          	lui	a0,0x66666
    44d0:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    44d4:	555555b7          	lui	a1,0x55555
    44d8:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    44dc:	00b53633          	sltu	a2,a0,a1
    44e0:	18c72023          	sw	a2,384(a4)

000044e4 <inst_627>:

inst_627:
// rs1_val==1717986919 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0xaaaaaaa9
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x66666667, 0xaaaaaaa9, x14, 388, x1)
    44e4:	66666537          	lui	a0,0x66666
    44e8:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    44ec:	aaaab5b7          	lui	a1,0xaaaab
    44f0:	aa958593          	addi	a1,a1,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    44f4:	00b53633          	sltu	a2,a0,a1
    44f8:	18c72223          	sw	a2,388(a4)

000044fc <inst_628>:

inst_628:
// rs1_val==1717986919 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666667, 0x4, x14, 392, x1)
    44fc:	66666537          	lui	a0,0x66666
    4500:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    4504:	00400593          	li	a1,4
    4508:	00b53633          	sltu	a2,a0,a1
    450c:	18c72423          	sw	a2,392(a4)

00004510 <inst_629>:

inst_629:
// rs1_val==1717986919 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x33333332
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666667, 0x33333332, x14, 396, x1)
    4510:	66666537          	lui	a0,0x66666
    4514:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    4518:	333335b7          	lui	a1,0x33333
    451c:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    4520:	00b53633          	sltu	a2,a0,a1
    4524:	18c72623          	sw	a2,396(a4)

00004528 <inst_630>:

inst_630:
// rs1_val==1717986919 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x66666665
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666667, 0x66666665, x14, 400, x1)
    4528:	66666537          	lui	a0,0x66666
    452c:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    4530:	666665b7          	lui	a1,0x66666
    4534:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    4538:	00b53633          	sltu	a2,a0,a1
    453c:	18c72823          	sw	a2,400(a4)

00004540 <inst_631>:

inst_631:
// rs1_val==1717986919 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0xb503
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666667, 0xb503, x14, 404, x1)
    4540:	66666537          	lui	a0,0x66666
    4544:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    4548:	0000b5b7          	lui	a1,0xb
    454c:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    4550:	00b53633          	sltu	a2,a0,a1
    4554:	18c72a23          	sw	a2,404(a4)

00004558 <inst_632>:

inst_632:
// rs1_val==1717986919 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0xfffe
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666667, 0xfffe, x14, 408, x1)
    4558:	66666537          	lui	a0,0x66666
    455c:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    4560:	000105b7          	lui	a1,0x10
    4564:	ffe58593          	addi	a1,a1,-2 # fffe <_end+0x9ffa>
    4568:	00b53633          	sltu	a2,a0,a1
    456c:	18c72c23          	sw	a2,408(a4)

00004570 <inst_633>:

inst_633:
// rs1_val==1717986919 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x55555556
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666667, 0x55555556, x14, 412, x1)
    4570:	66666537          	lui	a0,0x66666
    4574:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    4578:	555555b7          	lui	a1,0x55555
    457c:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    4580:	00b53633          	sltu	a2,a0,a1
    4584:	18c72e23          	sw	a2,412(a4)

00004588 <inst_634>:

inst_634:
// rs1_val==1717986919 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0xaaaaaaab
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x66666667, 0xaaaaaaab, x14, 416, x1)
    4588:	66666537          	lui	a0,0x66666
    458c:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    4590:	aaaab5b7          	lui	a1,0xaaaab
    4594:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    4598:	00b53633          	sltu	a2,a0,a1
    459c:	1ac72023          	sw	a2,416(a4)

000045a0 <inst_635>:

inst_635:
// rs1_val==1717986919 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666667, 0x6, x14, 420, x1)
    45a0:	66666537          	lui	a0,0x66666
    45a4:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    45a8:	00600593          	li	a1,6
    45ac:	00b53633          	sltu	a2,a0,a1
    45b0:	1ac72223          	sw	a2,420(a4)

000045b4 <inst_636>:

inst_636:
// rs1_val==1717986919 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666667, 0x33333334, x14, 424, x1)
    45b4:	66666537          	lui	a0,0x66666
    45b8:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    45bc:	333335b7          	lui	a1,0x33333
    45c0:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    45c4:	00b53633          	sltu	a2,a0,a1
    45c8:	1ac72423          	sw	a2,424(a4)

000045cc <inst_637>:

inst_637:
// rs1_val==1717986919 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x66666667
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666667, 0x66666667, x14, 428, x1)
    45cc:	66666537          	lui	a0,0x66666
    45d0:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    45d4:	666665b7          	lui	a1,0x66666
    45d8:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    45dc:	00b53633          	sltu	a2,a0,a1
    45e0:	1ac72623          	sw	a2,428(a4)

000045e4 <inst_638>:

inst_638:
// rs1_val==1717986919 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0xb505
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666667, 0xb505, x14, 432, x1)
    45e4:	66666537          	lui	a0,0x66666
    45e8:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    45ec:	0000b5b7          	lui	a1,0xb
    45f0:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    45f4:	00b53633          	sltu	a2,a0,a1
    45f8:	1ac72823          	sw	a2,432(a4)

000045fc <inst_639>:

inst_639:
// rs1_val==1717986919 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666667, 0x1, x14, 436, x1)
    45fc:	66666537          	lui	a0,0x66666
    4600:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    4604:	00100593          	li	a1,1
    4608:	00b53633          	sltu	a2,a0,a1
    460c:	1ac72a23          	sw	a2,436(a4)

00004610 <inst_640>:

inst_640:
// rs1_val==1717986919 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666667, 0x10000, x14, 440, x1)
    4610:	66666537          	lui	a0,0x66666
    4614:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66660663>
    4618:	000105b7          	lui	a1,0x10
    461c:	00b53633          	sltu	a2,a0,a1
    4620:	1ac72c23          	sw	a2,440(a4)

00004624 <inst_641>:

inst_641:
// rs1_val==46341 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb505, 0x3, x14, 444, x1)
    4624:	0000b537          	lui	a0,0xb
    4628:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    462c:	00300593          	li	a1,3
    4630:	00b53633          	sltu	a2,a0,a1
    4634:	1ac72e23          	sw	a2,444(a4)

00004638 <inst_642>:

inst_642:
// rs1_val==46341 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb505, 0x55555555, x14, 448, x1)
    4638:	0000b537          	lui	a0,0xb
    463c:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    4640:	555555b7          	lui	a1,0x55555
    4644:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    4648:	00b53633          	sltu	a2,a0,a1
    464c:	1cc72023          	sw	a2,448(a4)

00004650 <inst_643>:

inst_643:
// rs1_val==46341 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0xaaaaaaaa
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb505, 0xaaaaaaaa, x14, 452, x1)
    4650:	0000b537          	lui	a0,0xb
    4654:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    4658:	aaaab5b7          	lui	a1,0xaaaab
    465c:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    4660:	00b53633          	sltu	a2,a0,a1
    4664:	1cc72223          	sw	a2,452(a4)

00004668 <inst_644>:

inst_644:
// rs1_val==46341 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x5
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb505, 0x5, x14, 456, x1)
    4668:	0000b537          	lui	a0,0xb
    466c:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    4670:	00500593          	li	a1,5
    4674:	00b53633          	sltu	a2,a0,a1
    4678:	1cc72423          	sw	a2,456(a4)

0000467c <inst_645>:

inst_645:
// rs1_val==46341 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x33333333
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb505, 0x33333333, x14, 460, x1)
    467c:	0000b537          	lui	a0,0xb
    4680:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    4684:	333335b7          	lui	a1,0x33333
    4688:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    468c:	00b53633          	sltu	a2,a0,a1
    4690:	1cc72623          	sw	a2,460(a4)

00004694 <inst_646>:

inst_646:
// rs1_val==46341 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x66666666
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb505, 0x66666666, x14, 464, x1)
    4694:	0000b537          	lui	a0,0xb
    4698:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    469c:	666665b7          	lui	a1,0x66666
    46a0:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    46a4:	00b53633          	sltu	a2,a0,a1
    46a8:	1cc72823          	sw	a2,464(a4)

000046ac <inst_647>:

inst_647:
// rs1_val==46341 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb505, 0xb504, x14, 468, x1)
    46ac:	0000b537          	lui	a0,0xb
    46b0:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    46b4:	0000b5b7          	lui	a1,0xb
    46b8:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    46bc:	00b53633          	sltu	a2,a0,a1
    46c0:	1cc72a23          	sw	a2,468(a4)

000046c4 <inst_648>:

inst_648:
// rs1_val==46341 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb505, 0x0, x14, 472, x1)
    46c4:	0000b537          	lui	a0,0xb
    46c8:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    46cc:	00000593          	li	a1,0
    46d0:	00b53633          	sltu	a2,a0,a1
    46d4:	1cc72c23          	sw	a2,472(a4)

000046d8 <inst_649>:

inst_649:
// rs1_val==46341 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0xffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb505, 0xffff, x14, 476, x1)
    46d8:	0000b537          	lui	a0,0xb
    46dc:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    46e0:	000105b7          	lui	a1,0x10
    46e4:	fff58593          	addi	a1,a1,-1 # ffff <_end+0x9ffb>
    46e8:	00b53633          	sltu	a2,a0,a1
    46ec:	1cc72e23          	sw	a2,476(a4)

000046f0 <inst_650>:

inst_650:
// rs1_val==46341 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb505, 0x2, x14, 480, x1)
    46f0:	0000b537          	lui	a0,0xb
    46f4:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    46f8:	00200593          	li	a1,2
    46fc:	00b53633          	sltu	a2,a0,a1
    4700:	1ec72023          	sw	a2,480(a4)

00004704 <inst_651>:

inst_651:
// rs1_val==46341 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb505, 0x55555554, x14, 484, x1)
    4704:	0000b537          	lui	a0,0xb
    4708:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    470c:	555555b7          	lui	a1,0x55555
    4710:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    4714:	00b53633          	sltu	a2,a0,a1
    4718:	1ec72223          	sw	a2,484(a4)

0000471c <inst_652>:

inst_652:
// rs1_val==46341 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0xaaaaaaa9
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb505, 0xaaaaaaa9, x14, 488, x1)
    471c:	0000b537          	lui	a0,0xb
    4720:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    4724:	aaaab5b7          	lui	a1,0xaaaab
    4728:	aa958593          	addi	a1,a1,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    472c:	00b53633          	sltu	a2,a0,a1
    4730:	1ec72423          	sw	a2,488(a4)

00004734 <inst_653>:

inst_653:
// rs1_val==46341 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb505, 0x4, x14, 492, x1)
    4734:	0000b537          	lui	a0,0xb
    4738:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    473c:	00400593          	li	a1,4
    4740:	00b53633          	sltu	a2,a0,a1
    4744:	1ec72623          	sw	a2,492(a4)

00004748 <inst_654>:

inst_654:
// rs1_val==46341 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x33333332
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb505, 0x33333332, x14, 496, x1)
    4748:	0000b537          	lui	a0,0xb
    474c:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    4750:	333335b7          	lui	a1,0x33333
    4754:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    4758:	00b53633          	sltu	a2,a0,a1
    475c:	1ec72823          	sw	a2,496(a4)

00004760 <inst_655>:

inst_655:
// rs1_val==46341 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x66666665
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb505, 0x66666665, x14, 500, x1)
    4760:	0000b537          	lui	a0,0xb
    4764:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    4768:	666665b7          	lui	a1,0x66666
    476c:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    4770:	00b53633          	sltu	a2,a0,a1
    4774:	1ec72a23          	sw	a2,500(a4)

00004778 <inst_656>:

inst_656:
// rs1_val==46341 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0xb503
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb505, 0xb503, x14, 504, x1)
    4778:	0000b537          	lui	a0,0xb
    477c:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    4780:	0000b5b7          	lui	a1,0xb
    4784:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    4788:	00b53633          	sltu	a2,a0,a1
    478c:	1ec72c23          	sw	a2,504(a4)

00004790 <inst_657>:

inst_657:
// rs1_val==46341 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0xfffe
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb505, 0xfffe, x14, 508, x1)
    4790:	0000b537          	lui	a0,0xb
    4794:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    4798:	000105b7          	lui	a1,0x10
    479c:	ffe58593          	addi	a1,a1,-2 # fffe <_end+0x9ffa>
    47a0:	00b53633          	sltu	a2,a0,a1
    47a4:	1ec72e23          	sw	a2,508(a4)

000047a8 <inst_658>:

inst_658:
// rs1_val==46341 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x55555556
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb505, 0x55555556, x14, 512, x1)
    47a8:	0000b537          	lui	a0,0xb
    47ac:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    47b0:	555555b7          	lui	a1,0x55555
    47b4:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    47b8:	00b53633          	sltu	a2,a0,a1
    47bc:	20c72023          	sw	a2,512(a4)

000047c0 <inst_659>:

inst_659:
// rs1_val==46341 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0xaaaaaaab
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb505, 0xaaaaaaab, x14, 516, x1)
    47c0:	0000b537          	lui	a0,0xb
    47c4:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    47c8:	aaaab5b7          	lui	a1,0xaaaab
    47cc:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    47d0:	00b53633          	sltu	a2,a0,a1
    47d4:	20c72223          	sw	a2,516(a4)

000047d8 <inst_660>:

inst_660:
// rs1_val==46341 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb505, 0x6, x14, 520, x1)
    47d8:	0000b537          	lui	a0,0xb
    47dc:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    47e0:	00600593          	li	a1,6
    47e4:	00b53633          	sltu	a2,a0,a1
    47e8:	20c72423          	sw	a2,520(a4)

000047ec <inst_661>:

inst_661:
// rs1_val==46341 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb505, 0x33333334, x14, 524, x1)
    47ec:	0000b537          	lui	a0,0xb
    47f0:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    47f4:	333335b7          	lui	a1,0x33333
    47f8:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    47fc:	00b53633          	sltu	a2,a0,a1
    4800:	20c72623          	sw	a2,524(a4)

00004804 <inst_662>:

inst_662:
// rs1_val==46341 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x66666667
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb505, 0x66666667, x14, 528, x1)
    4804:	0000b537          	lui	a0,0xb
    4808:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    480c:	666665b7          	lui	a1,0x66666
    4810:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    4814:	00b53633          	sltu	a2,a0,a1
    4818:	20c72823          	sw	a2,528(a4)

0000481c <inst_663>:

inst_663:
// rs1_val==46341 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0xb505
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb505, 0xb505, x14, 532, x1)
    481c:	0000b537          	lui	a0,0xb
    4820:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    4824:	0000b5b7          	lui	a1,0xb
    4828:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    482c:	00b53633          	sltu	a2,a0,a1
    4830:	20c72a23          	sw	a2,532(a4)

00004834 <inst_664>:

inst_664:
// rs1_val==46341 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xb505, 0x1, x14, 536, x1)
    4834:	0000b537          	lui	a0,0xb
    4838:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    483c:	00100593          	li	a1,1
    4840:	00b53633          	sltu	a2,a0,a1
    4844:	20c72c23          	sw	a2,536(a4)

00004848 <inst_665>:

inst_665:
// rs1_val==46341 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0xb505, 0x10000, x14, 540, x1)
    4848:	0000b537          	lui	a0,0xb
    484c:	50550513          	addi	a0,a0,1285 # b505 <_end+0x5501>
    4850:	000105b7          	lui	a1,0x10
    4854:	00b53633          	sltu	a2,a0,a1
    4858:	20c72e23          	sw	a2,540(a4)

0000485c <inst_666>:

inst_666:
// rs1_val==1 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x1, 0x3, x14, 544, x1)
    485c:	00100513          	li	a0,1
    4860:	00300593          	li	a1,3
    4864:	00b53633          	sltu	a2,a0,a1
    4868:	22c72023          	sw	a2,544(a4)

0000486c <inst_667>:

inst_667:
// rs1_val==1 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x1, 0x55555555, x14, 548, x1)
    486c:	00100513          	li	a0,1
    4870:	555555b7          	lui	a1,0x55555
    4874:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    4878:	00b53633          	sltu	a2,a0,a1
    487c:	22c72223          	sw	a2,548(a4)

00004880 <inst_668>:

inst_668:
// rs1_val==1 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0xaaaaaaaa
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x1, 0xaaaaaaaa, x14, 552, x1)
    4880:	00100513          	li	a0,1
    4884:	aaaab5b7          	lui	a1,0xaaaab
    4888:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    488c:	00b53633          	sltu	a2,a0,a1
    4890:	22c72423          	sw	a2,552(a4)

00004894 <inst_669>:

inst_669:
// rs1_val==1 and rs2_val==5, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0x5
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x1, 0x5, x14, 556, x1)
    4894:	00100513          	li	a0,1
    4898:	00500593          	li	a1,5
    489c:	00b53633          	sltu	a2,a0,a1
    48a0:	22c72623          	sw	a2,556(a4)

000048a4 <inst_670>:

inst_670:
// rs1_val==1 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0x33333333
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x1, 0x33333333, x14, 560, x1)
    48a4:	00100513          	li	a0,1
    48a8:	333335b7          	lui	a1,0x33333
    48ac:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    48b0:	00b53633          	sltu	a2,a0,a1
    48b4:	22c72823          	sw	a2,560(a4)

000048b8 <inst_671>:

inst_671:
// rs1_val==1 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0x66666666
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x1, 0x66666666, x14, 564, x1)
    48b8:	00100513          	li	a0,1
    48bc:	666665b7          	lui	a1,0x66666
    48c0:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    48c4:	00b53633          	sltu	a2,a0,a1
    48c8:	22c72a23          	sw	a2,564(a4)

000048cc <inst_672>:

inst_672:
// rs1_val==1 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x1, 0xb504, x14, 568, x1)
    48cc:	00100513          	li	a0,1
    48d0:	0000b5b7          	lui	a1,0xb
    48d4:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    48d8:	00b53633          	sltu	a2,a0,a1
    48dc:	22c72c23          	sw	a2,568(a4)

000048e0 <inst_673>:

inst_673:
// rs1_val==1 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x1, 0x0, x14, 572, x1)
    48e0:	00100513          	li	a0,1
    48e4:	00000593          	li	a1,0
    48e8:	00b53633          	sltu	a2,a0,a1
    48ec:	22c72e23          	sw	a2,572(a4)

000048f0 <inst_674>:

inst_674:
// rs1_val==1 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0xffff
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x1, 0xffff, x14, 576, x1)
    48f0:	00100513          	li	a0,1
    48f4:	000105b7          	lui	a1,0x10
    48f8:	fff58593          	addi	a1,a1,-1 # ffff <_end+0x9ffb>
    48fc:	00b53633          	sltu	a2,a0,a1
    4900:	24c72023          	sw	a2,576(a4)

00004904 <inst_675>:

inst_675:
// rs1_val==1 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x1, 0x2, x14, 580, x1)
    4904:	00100513          	li	a0,1
    4908:	00200593          	li	a1,2
    490c:	00b53633          	sltu	a2,a0,a1
    4910:	24c72223          	sw	a2,580(a4)

00004914 <inst_676>:

inst_676:
// rs1_val==1 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x1, 0x55555554, x14, 584, x1)
    4914:	00100513          	li	a0,1
    4918:	555555b7          	lui	a1,0x55555
    491c:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    4920:	00b53633          	sltu	a2,a0,a1
    4924:	24c72423          	sw	a2,584(a4)

00004928 <inst_677>:

inst_677:
// rs1_val==1 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0xaaaaaaa9
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x1, 0xaaaaaaa9, x14, 588, x1)
    4928:	00100513          	li	a0,1
    492c:	aaaab5b7          	lui	a1,0xaaaab
    4930:	aa958593          	addi	a1,a1,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    4934:	00b53633          	sltu	a2,a0,a1
    4938:	24c72623          	sw	a2,588(a4)

0000493c <inst_678>:

inst_678:
// rs1_val==1 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x1, 0x4, x14, 592, x1)
    493c:	00100513          	li	a0,1
    4940:	00400593          	li	a1,4
    4944:	00b53633          	sltu	a2,a0,a1
    4948:	24c72823          	sw	a2,592(a4)

0000494c <inst_679>:

inst_679:
// rs1_val==1 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0x33333332
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x1, 0x33333332, x14, 596, x1)
    494c:	00100513          	li	a0,1
    4950:	333335b7          	lui	a1,0x33333
    4954:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    4958:	00b53633          	sltu	a2,a0,a1
    495c:	24c72a23          	sw	a2,596(a4)

00004960 <inst_680>:

inst_680:
// rs1_val==1 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0x66666665
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x1, 0x66666665, x14, 600, x1)
    4960:	00100513          	li	a0,1
    4964:	666665b7          	lui	a1,0x66666
    4968:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    496c:	00b53633          	sltu	a2,a0,a1
    4970:	24c72c23          	sw	a2,600(a4)

00004974 <inst_681>:

inst_681:
// rs1_val==1 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0xb503
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x1, 0xb503, x14, 604, x1)
    4974:	00100513          	li	a0,1
    4978:	0000b5b7          	lui	a1,0xb
    497c:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    4980:	00b53633          	sltu	a2,a0,a1
    4984:	24c72e23          	sw	a2,604(a4)

00004988 <inst_682>:

inst_682:
// rs1_val==1 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0xfffe
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x1, 0xfffe, x14, 608, x1)
    4988:	00100513          	li	a0,1
    498c:	000105b7          	lui	a1,0x10
    4990:	ffe58593          	addi	a1,a1,-2 # fffe <_end+0x9ffa>
    4994:	00b53633          	sltu	a2,a0,a1
    4998:	26c72023          	sw	a2,608(a4)

0000499c <inst_683>:

inst_683:
// rs1_val==1 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0x55555556
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x1, 0x55555556, x14, 612, x1)
    499c:	00100513          	li	a0,1
    49a0:	555555b7          	lui	a1,0x55555
    49a4:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    49a8:	00b53633          	sltu	a2,a0,a1
    49ac:	26c72223          	sw	a2,612(a4)

000049b0 <inst_684>:

inst_684:
// rs1_val==1 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0xaaaaaaab
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x1, 0xaaaaaaab, x14, 616, x1)
    49b0:	00100513          	li	a0,1
    49b4:	aaaab5b7          	lui	a1,0xaaaab
    49b8:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    49bc:	00b53633          	sltu	a2,a0,a1
    49c0:	26c72423          	sw	a2,616(a4)

000049c4 <inst_685>:

inst_685:
// rs1_val==1 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0x6
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x1, 0x6, x14, 620, x1)
    49c4:	00100513          	li	a0,1
    49c8:	00600593          	li	a1,6
    49cc:	00b53633          	sltu	a2,a0,a1
    49d0:	26c72623          	sw	a2,620(a4)

000049d4 <inst_686>:

inst_686:
// rs1_val==1 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x1, 0x33333334, x14, 624, x1)
    49d4:	00100513          	li	a0,1
    49d8:	333335b7          	lui	a1,0x33333
    49dc:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    49e0:	00b53633          	sltu	a2,a0,a1
    49e4:	26c72823          	sw	a2,624(a4)

000049e8 <inst_687>:

inst_687:
// rs1_val==1 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0x66666667
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x1, 0x66666667, x14, 628, x1)
    49e8:	00100513          	li	a0,1
    49ec:	666665b7          	lui	a1,0x66666
    49f0:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    49f4:	00b53633          	sltu	a2,a0,a1
    49f8:	26c72a23          	sw	a2,628(a4)

000049fc <inst_688>:

inst_688:
// rs1_val==1 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0xb505
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x1, 0xb505, x14, 632, x1)
    49fc:	00100513          	li	a0,1
    4a00:	0000b5b7          	lui	a1,0xb
    4a04:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    4a08:	00b53633          	sltu	a2,a0,a1
    4a0c:	26c72c23          	sw	a2,632(a4)

00004a10 <inst_689>:

inst_689:
// rs1_val==1 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x1, 0x10000, x14, 636, x1)
    4a10:	00100513          	li	a0,1
    4a14:	000105b7          	lui	a1,0x10
    4a18:	00b53633          	sltu	a2,a0,a1
    4a1c:	26c72e23          	sw	a2,636(a4)

00004a20 <inst_690>:

inst_690:
// rs1_val==65536 and rs2_val==3, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:0x3
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x10000, 0x3, x14, 640, x1)
    4a20:	00010537          	lui	a0,0x10
    4a24:	00300593          	li	a1,3
    4a28:	00b53633          	sltu	a2,a0,a1
    4a2c:	28c72023          	sw	a2,640(a4)

00004a30 <inst_691>:

inst_691:
// rs1_val==65536 and rs2_val==1431655765, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:0x55555555
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x10000, 0x55555555, x14, 644, x1)
    4a30:	00010537          	lui	a0,0x10
    4a34:	555555b7          	lui	a1,0x55555
    4a38:	55558593          	addi	a1,a1,1365 # 55555555 <_end+0x5554f551>
    4a3c:	00b53633          	sltu	a2,a0,a1
    4a40:	28c72223          	sw	a2,644(a4)

00004a44 <inst_692>:

inst_692:
// rs1_val==65536 and rs2_val==2863311530, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:0xaaaaaaaa
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x10000, 0xaaaaaaaa, x14, 648, x1)
    4a44:	00010537          	lui	a0,0x10
    4a48:	aaaab5b7          	lui	a1,0xaaaab
    4a4c:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0xaaaa4aa6>
    4a50:	00b53633          	sltu	a2,a0,a1
    4a54:	28c72423          	sw	a2,648(a4)

00004a58 <inst_693>:

inst_693:
// rs1_val==65536 and rs2_val==858993459, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:0x33333333
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x10000, 0x33333333, x14, 652, x1)
    4a58:	00010537          	lui	a0,0x10
    4a5c:	333335b7          	lui	a1,0x33333
    4a60:	33358593          	addi	a1,a1,819 # 33333333 <_end+0x3332d32f>
    4a64:	00b53633          	sltu	a2,a0,a1
    4a68:	28c72623          	sw	a2,652(a4)

00004a6c <inst_694>:

inst_694:
// rs1_val==65536 and rs2_val==1717986918, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:0x66666666
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x10000, 0x66666666, x14, 656, x1)
    4a6c:	00010537          	lui	a0,0x10
    4a70:	666665b7          	lui	a1,0x66666
    4a74:	66658593          	addi	a1,a1,1638 # 66666666 <_end+0x66660662>
    4a78:	00b53633          	sltu	a2,a0,a1
    4a7c:	28c72823          	sw	a2,656(a4)

00004a80 <inst_695>:

inst_695:
// rs1_val==65536 and rs2_val==46340, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:0xb504
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x10000, 0xb504, x14, 660, x1)
    4a80:	00010537          	lui	a0,0x10
    4a84:	0000b5b7          	lui	a1,0xb
    4a88:	50458593          	addi	a1,a1,1284 # b504 <_end+0x5500>
    4a8c:	00b53633          	sltu	a2,a0,a1
    4a90:	28c72a23          	sw	a2,660(a4)

00004a94 <inst_696>:

inst_696:
// rs1_val==65536 and rs2_val==0, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:0x0
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x10000, 0x0, x14, 664, x1)
    4a94:	00010537          	lui	a0,0x10
    4a98:	00000593          	li	a1,0
    4a9c:	00b53633          	sltu	a2,a0,a1
    4aa0:	28c72c23          	sw	a2,664(a4)

00004aa4 <inst_697>:

inst_697:
// rs1_val==65536 and rs2_val==65535, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:0xffff
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x10000, 0xffff, x14, 668, x1)
    4aa4:	00010537          	lui	a0,0x10
    4aa8:	000105b7          	lui	a1,0x10
    4aac:	fff58593          	addi	a1,a1,-1 # ffff <_end+0x9ffb>
    4ab0:	00b53633          	sltu	a2,a0,a1
    4ab4:	28c72e23          	sw	a2,668(a4)

00004ab8 <inst_698>:

inst_698:
// rs1_val==65536 and rs2_val==2, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x10000, 0x2, x14, 672, x1)
    4ab8:	00010537          	lui	a0,0x10
    4abc:	00200593          	li	a1,2
    4ac0:	00b53633          	sltu	a2,a0,a1
    4ac4:	2ac72023          	sw	a2,672(a4)

00004ac8 <inst_699>:

inst_699:
// rs1_val==65536 and rs2_val==1431655764, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:0x55555554
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x10000, 0x55555554, x14, 676, x1)
    4ac8:	00010537          	lui	a0,0x10
    4acc:	555555b7          	lui	a1,0x55555
    4ad0:	55458593          	addi	a1,a1,1364 # 55555554 <_end+0x5554f550>
    4ad4:	00b53633          	sltu	a2,a0,a1
    4ad8:	2ac72223          	sw	a2,676(a4)

00004adc <inst_700>:

inst_700:
// rs1_val==65536 and rs2_val==2863311529, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:0xaaaaaaa9
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x10000, 0xaaaaaaa9, x14, 680, x1)
    4adc:	00010537          	lui	a0,0x10
    4ae0:	aaaab5b7          	lui	a1,0xaaaab
    4ae4:	aa958593          	addi	a1,a1,-1367 # aaaaaaa9 <_end+0xaaaa4aa5>
    4ae8:	00b53633          	sltu	a2,a0,a1
    4aec:	2ac72423          	sw	a2,680(a4)

00004af0 <inst_701>:

inst_701:
// rs1_val==65536 and rs2_val==4, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:0x4
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x10000, 0x4, x14, 684, x1)
    4af0:	00010537          	lui	a0,0x10
    4af4:	00400593          	li	a1,4
    4af8:	00b53633          	sltu	a2,a0,a1
    4afc:	2ac72623          	sw	a2,684(a4)

00004b00 <inst_702>:

inst_702:
// rs1_val==65536 and rs2_val==858993458, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:0x33333332
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x10000, 0x33333332, x14, 688, x1)
    4b00:	00010537          	lui	a0,0x10
    4b04:	333335b7          	lui	a1,0x33333
    4b08:	33258593          	addi	a1,a1,818 # 33333332 <_end+0x3332d32e>
    4b0c:	00b53633          	sltu	a2,a0,a1
    4b10:	2ac72823          	sw	a2,688(a4)

00004b14 <inst_703>:

inst_703:
// rs1_val==65536 and rs2_val==1717986917, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:0x66666665
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x10000, 0x66666665, x14, 692, x1)
    4b14:	00010537          	lui	a0,0x10
    4b18:	666665b7          	lui	a1,0x66666
    4b1c:	66558593          	addi	a1,a1,1637 # 66666665 <_end+0x66660661>
    4b20:	00b53633          	sltu	a2,a0,a1
    4b24:	2ac72a23          	sw	a2,692(a4)

00004b28 <inst_704>:

inst_704:
// rs1_val==65536 and rs2_val==46339, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:0xb503
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x10000, 0xb503, x14, 696, x1)
    4b28:	00010537          	lui	a0,0x10
    4b2c:	0000b5b7          	lui	a1,0xb
    4b30:	50358593          	addi	a1,a1,1283 # b503 <_end+0x54ff>
    4b34:	00b53633          	sltu	a2,a0,a1
    4b38:	2ac72c23          	sw	a2,696(a4)

00004b3c <inst_705>:

inst_705:
// rs1_val==65536 and rs2_val==65534, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:0xfffe
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x10000, 0xfffe, x14, 700, x1)
    4b3c:	00010537          	lui	a0,0x10
    4b40:	000105b7          	lui	a1,0x10
    4b44:	ffe58593          	addi	a1,a1,-2 # fffe <_end+0x9ffa>
    4b48:	00b53633          	sltu	a2,a0,a1
    4b4c:	2ac72e23          	sw	a2,700(a4)

00004b50 <inst_706>:

inst_706:
// rs1_val==65536 and rs2_val==1431655766, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:0x55555556
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x10000, 0x55555556, x14, 704, x1)
    4b50:	00010537          	lui	a0,0x10
    4b54:	555555b7          	lui	a1,0x55555
    4b58:	55658593          	addi	a1,a1,1366 # 55555556 <_end+0x5554f552>
    4b5c:	00b53633          	sltu	a2,a0,a1
    4b60:	2cc72023          	sw	a2,704(a4)

00004b64 <inst_707>:

inst_707:
// rs1_val==65536 and rs2_val==2863311531, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:0xaaaaaaab
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x10000, 0xaaaaaaab, x14, 708, x1)
    4b64:	00010537          	lui	a0,0x10
    4b68:	aaaab5b7          	lui	a1,0xaaaab
    4b6c:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0xaaaa4aa7>
    4b70:	00b53633          	sltu	a2,a0,a1
    4b74:	2cc72223          	sw	a2,708(a4)

00004b78 <inst_708>:

inst_708:
// rs1_val==65536 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:0x6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x10000, 0x6, x14, 712, x1)
    4b78:	00010537          	lui	a0,0x10
    4b7c:	00600593          	li	a1,6
    4b80:	00b53633          	sltu	a2,a0,a1
    4b84:	2cc72423          	sw	a2,712(a4)

00004b88 <inst_709>:

inst_709:
// rs1_val==65536 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x10000, 0x33333334, x14, 716, x1)
    4b88:	00010537          	lui	a0,0x10
    4b8c:	333335b7          	lui	a1,0x33333
    4b90:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    4b94:	00b53633          	sltu	a2,a0,a1
    4b98:	2cc72623          	sw	a2,716(a4)

00004b9c <inst_710>:

inst_710:
// rs1_val==65536 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:0x66666667
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x10000, 0x66666667, x14, 720, x1)
    4b9c:	00010537          	lui	a0,0x10
    4ba0:	666665b7          	lui	a1,0x66666
    4ba4:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    4ba8:	00b53633          	sltu	a2,a0,a1
    4bac:	2cc72823          	sw	a2,720(a4)

00004bb0 <inst_711>:

inst_711:
// rs1_val==65536 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:0xb505
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x10000, 0xb505, x14, 724, x1)
    4bb0:	00010537          	lui	a0,0x10
    4bb4:	0000b5b7          	lui	a1,0xb
    4bb8:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    4bbc:	00b53633          	sltu	a2,a0,a1
    4bc0:	2cc72a23          	sw	a2,724(a4)

00004bc4 <inst_712>:

inst_712:
// rs1_val==65536 and rs2_val==1, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:0x1
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x10000, 0x1, x14, 728, x1)
    4bc4:	00010537          	lui	a0,0x10
    4bc8:	00100593          	li	a1,1
    4bcc:	00b53633          	sltu	a2,a0,a1
    4bd0:	2cc72c23          	sw	a2,728(a4)

00004bd4 <inst_713>:

inst_713:
// rs1_val==65536 and rs2_val==65536, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x10000, 0x10000, x14, 732, x1)
    4bd4:	00010537          	lui	a0,0x10
    4bd8:	000105b7          	lui	a1,0x10
    4bdc:	00b53633          	sltu	a2,a0,a1
    4be0:	2cc72e23          	sw	a2,732(a4)

00004be4 <inst_714>:

inst_714:
// rs1_val==1717986917 and rs2_val==6, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x6
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666665, 0x6, x14, 736, x1)
    4be4:	66666537          	lui	a0,0x66666
    4be8:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    4bec:	00600593          	li	a1,6
    4bf0:	00b53633          	sltu	a2,a0,a1
    4bf4:	2ec72023          	sw	a2,736(a4)

00004bf8 <inst_715>:

inst_715:
// rs1_val==1717986917 and rs2_val==858993460, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x33333334
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666665, 0x33333334, x14, 740, x1)
    4bf8:	66666537          	lui	a0,0x66666
    4bfc:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    4c00:	333335b7          	lui	a1,0x33333
    4c04:	33458593          	addi	a1,a1,820 # 33333334 <_end+0x3332d330>
    4c08:	00b53633          	sltu	a2,a0,a1
    4c0c:	2ec72223          	sw	a2,740(a4)

00004c10 <inst_716>:

inst_716:
// rs1_val==1717986917 and rs2_val==1717986919, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x66666667
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x66666665, 0x66666667, x14, 744, x1)
    4c10:	66666537          	lui	a0,0x66666
    4c14:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    4c18:	666665b7          	lui	a1,0x66666
    4c1c:	66758593          	addi	a1,a1,1639 # 66666667 <_end+0x66660663>
    4c20:	00b53633          	sltu	a2,a0,a1
    4c24:	2ec72423          	sw	a2,744(a4)

00004c28 <inst_717>:

inst_717:
// rs1_val==1717986917 and rs2_val==46341, 
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0xb505
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x66666665, 0xb505, x14, 748, x1)
    4c28:	66666537          	lui	a0,0x66666
    4c2c:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66660661>
    4c30:	0000b5b7          	lui	a1,0xb
    4c34:	50558593          	addi	a1,a1,1285 # b505 <_end+0x5501>
    4c38:	00b53633          	sltu	a2,a0,a1
    4c3c:	2ec72623          	sw	a2,748(a4)

00004c40 <inst_718>:

inst_718:
// rs1_val > 0 and rs2_val > 0, rs2_val == 4294967294, rs1_val != rs2_val and rs1_val > 0 and rs2_val > 0, rs1_val == 2048
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x800;  op2val:0xfffffffe
TEST_RR_OP(sltu, x12, x10, x11, 0x1, 0x800, 0xfffffffe, x14, 752, x1)
    4c40:	00001537          	lui	a0,0x1
    4c44:	80050513          	addi	a0,a0,-2048 # 800 <offset+0x500>
    4c48:	ffe00593          	li	a1,-2
    4c4c:	00b53633          	sltu	a2,a0,a1
    4c50:	2ec72823          	sw	a2,752(a4)

00004c54 <inst_719>:

inst_719:
// rs1_val == rs2_val and rs1_val > 0 and rs2_val > 0, rs2_val == 1048576, rs1_val == 1048576
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x100000;  op2val:0x100000
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x100000, 0x100000, x14, 756, x1)
    4c54:	00100537          	lui	a0,0x100
    4c58:	001005b7          	lui	a1,0x100
    4c5c:	00b53633          	sltu	a2,a0,a1
    4c60:	2ec72a23          	sw	a2,756(a4)

00004c64 <inst_720>:

inst_720:
// rs2_val == 2, rs1_val==4 and rs2_val==2, rs1_val == 4
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x2
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0x4, 0x2, x14, 760, x1)
    4c64:	00400513          	li	a0,4
    4c68:	00200593          	li	a1,2
    4c6c:	00b53633          	sltu	a2,a0,a1
    4c70:	2ec72c23          	sw	a2,760(a4)

00004c74 <inst_721>:

inst_721:
// rs2_val == 65536, rs1_val == 3758096383
// opcode: sltu ; op1:x10; op2:x11; dest:x12; op1val:0xdfffffff;  op2val:0x10000
TEST_RR_OP(sltu, x12, x10, x11, 0x0, 0xdfffffff, 0x10000, x14, 764, x1)
    4c74:	e0000537          	lui	a0,0xe0000
    4c78:	fff50513          	addi	a0,a0,-1 # dfffffff <_end+0xdfff9ffb>
    4c7c:	000105b7          	lui	a1,0x10
    4c80:	00b53633          	sltu	a2,a0,a1
    4c84:	2ec72e23          	sw	a2,764(a4)
    4c88:	00000013          	nop
    4c8c:	00000013          	nop

00004c90 <rvtest_code_end>:
#endif


RVTEST_CODE_END
RVMODEL_HALT
    4c90:	babed0b7          	lui	ra,0xbabed
    4c94:	afe08093          	addi	ra,ra,-1282 # babecafe <_end+0xbabe6afa>

00004c98 <write_tohost>:
    4c98:	00001017          	auipc	zero,0x1
    4c9c:	36102423          	sw	ra,872(zero) # 368 <offset+0x68>

00004ca0 <loop>:
    4ca0:	0000006f          	j	4ca0 <loop>
	...
