
my.elf:     file format elf32-littleriscv


Disassembly of section .text:

00001000 <rvtest_entry_point>:

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN
    1000:	feedc0b7          	lui	ra,0xfeedc
    1004:	ead08093          	addi	ra,ra,-339 # feedbead <_end+0xfeed8ea9>
    1008:	ff76e137          	lui	sp,0xff76e
    100c:	f5610113          	addi	sp,sp,-170 # ff76df56 <_end+0xff76af52>
    1010:	7fbb71b7          	lui	gp,0x7fbb7
    1014:	fab18193          	addi	gp,gp,-85 # 7fbb6fab <_end+0x7fbb3fa7>
    1018:	bfddb237          	lui	tp,0xbfddb
    101c:	7d520213          	addi	tp,tp,2005 # bfddb7d5 <_end+0xbfdd87d1>
    1020:	00000297          	auipc	t0,0x0
    1024:	0d828293          	addi	t0,t0,216 # 10f8 <rvtest_code_begin>
    1028:	00001317          	auipc	t1,0x1
    102c:	fd830313          	addi	t1,t1,-40 # 2000 <rvtest_data_begin>
    1030:	b7fbb3b7          	lui	t2,0xb7fbb
    1034:	6fa38393          	addi	t2,t2,1786 # b7fbb6fa <_end+0xb7fb86f6>
    1038:	5bfde437          	lui	s0,0x5bfde
    103c:	b7d40413          	addi	s0,s0,-1155 # 5bfddb7d <_end+0x5bfdab79>
    1040:	adfef4b7          	lui	s1,0xadfef
    1044:	dbe48493          	addi	s1,s1,-578 # adfeedbe <_end+0xadfebdba>
    1048:	56ff7537          	lui	a0,0x56ff7
    104c:	6df50513          	addi	a0,a0,1759 # 56ff76df <_end+0x56ff46db>
    1050:	ab7fc5b7          	lui	a1,0xab7fc
    1054:	b6f58593          	addi	a1,a1,-1169 # ab7fbb6f <_end+0xab7f8b6b>
    1058:	d5bfe637          	lui	a2,0xd5bfe
    105c:	db760613          	addi	a2,a2,-585 # d5bfddb7 <_end+0xd5bfadb3>
    1060:	eadff6b7          	lui	a3,0xeadff
    1064:	edb68693          	addi	a3,a3,-293 # eadfeedb <_end+0xeadfbed7>
    1068:	f56ff737          	lui	a4,0xf56ff
    106c:	76d70713          	addi	a4,a4,1901 # f56ff76d <_end+0xf56fc769>
    1070:	fab807b7          	lui	a5,0xfab80
    1074:	bb678793          	addi	a5,a5,-1098 # fab7fbb6 <_end+0xfab7cbb2>
    1078:	7d5c0837          	lui	a6,0x7d5c0
    107c:	ddb80813          	addi	a6,a6,-549 # 7d5bfddb <_end+0x7d5bcdd7>
    1080:	beae08b7          	lui	a7,0xbeae0
    1084:	eed88893          	addi	a7,a7,-275 # beadfeed <_end+0xbeadcee9>
    1088:	df570937          	lui	s2,0xdf570
    108c:	f7690913          	addi	s2,s2,-138 # df56ff76 <_end+0xdf56cf72>
    1090:	6fab89b7          	lui	s3,0x6fab8
    1094:	fbb98993          	addi	s3,s3,-69 # 6fab7fbb <_end+0x6fab4fb7>
    1098:	b7d5ca37          	lui	s4,0xb7d5c
    109c:	fdda0a13          	addi	s4,s4,-35 # b7d5bfdd <_end+0xb7d58fd9>
    10a0:	dbeaeab7          	lui	s5,0xdbeae
    10a4:	feea8a93          	addi	s5,s5,-18 # dbeadfee <_end+0xdbeaafea>
    10a8:	6df57b37          	lui	s6,0x6df57
    10ac:	ff7b0b13          	addi	s6,s6,-9 # 6df56ff7 <_end+0x6df53ff3>
    10b0:	b6fabbb7          	lui	s7,0xb6fab
    10b4:	7fbb8b93          	addi	s7,s7,2043 # b6fab7fb <_end+0xb6fa87f7>
    10b8:	db7d6c37          	lui	s8,0xdb7d6
    10bc:	bfdc0c13          	addi	s8,s8,-1027 # db7d5bfd <_end+0xdb7d2bf9>
    10c0:	edbebcb7          	lui	s9,0xedbeb
    10c4:	dfec8c93          	addi	s9,s9,-514 # edbeadfe <_end+0xedbe7dfa>
    10c8:	76df5d37          	lui	s10,0x76df5
    10cc:	6ffd0d13          	addi	s10,s10,1791 # 76df56ff <_end+0x76df26fb>
    10d0:	bb6fbdb7          	lui	s11,0xbb6fb
    10d4:	b7fd8d93          	addi	s11,s11,-1153 # bb6fab7f <_end+0xbb6f7b7b>
    10d8:	ddb7de37          	lui	t3,0xddb7d
    10dc:	5bfe0e13          	addi	t3,t3,1471 # ddb7d5bf <_end+0xddb7a5bb>
    10e0:	eedbfeb7          	lui	t4,0xeedbf
    10e4:	adfe8e93          	addi	t4,t4,-1313 # eedbeadf <_end+0xeedbbadb>
    10e8:	f76dff37          	lui	t5,0xf76df
    10ec:	56ff0f13          	addi	t5,t5,1391 # f76df56f <_end+0xf76dc56b>
    10f0:	fbb70fb7          	lui	t6,0xfbb70
    10f4:	ab7f8f93          	addi	t6,t6,-1353 # fbb6fab7 <_end+0xfbb6cab3>

000010f8 <rvtest_code_begin>:

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*);def TEST_CASE_1=True;",srl)

RVTEST_SIGBASE( x19,signature_x19_1)
    10f8:	00001997          	auipc	s3,0x1
    10fc:	f1898993          	addi	s3,s3,-232 # 2010 <begin_signature>

00001100 <inst_0>:

inst_0:
// rs2 == rd != rs1, rs1==x26, rs2==x11, rd==x11, rs1_val < 0 and rs2_val > 0 and rs2_val < xlen, rs2_val == 15, rs1_val == -4194305
// opcode: srl ; op1:x26; op2:x11; dest:x11; op1val:-0x400001;  op2val:0xf
TEST_RR_OP(srl, x11, x26, x11, 0x1ff7f, -0x400001, 0xf, x19, 0, x24)
    1100:	ffc00d37          	lui	s10,0xffc00
    1104:	fffd0d13          	addi	s10,s10,-1 # ffbfffff <_end+0xffbfcffb>
    1108:	00f00593          	li	a1,15
    110c:	00bd55b3          	srl	a1,s10,a1
    1110:	00b9a023          	sw	a1,0(s3)

00001114 <inst_1>:

inst_1:
// rs1 == rs2 != rd, rs1==x31, rs2==x31, rd==x12, rs1_val > 0 and rs2_val > 0 and rs2_val < xlen, rs1_val==1431655766, rs2_val == 8
// opcode: srl ; op1:x31; op2:x31; dest:x12; op1val:0x55555556;  op2val:0x55555556
TEST_RR_OP(srl, x12, x31, x31, 0x155, 0x55555556, 0x55555556, x19, 4, x24)
    1114:	55555fb7          	lui	t6,0x55555
    1118:	556f8f93          	addi	t6,t6,1366 # 55555556 <_end+0x55552552>
    111c:	55555fb7          	lui	t6,0x55555
    1120:	556f8f93          	addi	t6,t6,1366 # 55555556 <_end+0x55552552>
    1124:	01ffd633          	srl	a2,t6,t6
    1128:	00c9a223          	sw	a2,4(s3)

0000112c <inst_2>:

inst_2:
// rs1 == rs2 == rd, rs1==x7, rs2==x7, rd==x7, rs1_val < 0 and rs2_val == 0, 
// opcode: srl ; op1:x7; op2:x7; dest:x7; op1val:-0x1;  op2val:-0x1
TEST_RR_OP(srl, x7, x7, x7, 0x1, -0x1, -0x1, x19, 8, x24)
    112c:	fff00393          	li	t2,-1
    1130:	fff00393          	li	t2,-1
    1134:	0073d3b3          	srl	t2,t2,t2
    1138:	0079a423          	sw	t2,8(s3)

0000113c <inst_3>:

inst_3:
// rs1 == rd != rs2, rs1==x18, rs2==x12, rd==x18, rs1_val > 0 and rs2_val == 0, rs1_val == 256
// opcode: srl ; op1:x18; op2:x12; dest:x18; op1val:0x100;  op2val:0x0
TEST_RR_OP(srl, x18, x18, x12, 0x100, 0x100, 0x0, x19, 12, x24)
    113c:	10000913          	li	s2,256
    1140:	00000613          	li	a2,0
    1144:	00c95933          	srl	s2,s2,a2
    1148:	0129a623          	sw	s2,12(s3)

0000114c <inst_4>:

inst_4:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x14, rs2==x3, rd==x8, rs1_val == rs2_val and rs2_val > 0 and rs2_val < xlen, 
// opcode: srl ; op1:x14; op2:x3; dest:x8; op1val:0x9;  op2val:0x9
TEST_RR_OP(srl, x8, x14, x3, 0x0, 0x9, 0x9, x19, 16, x24)
    114c:	00900713          	li	a4,9
    1150:	00900193          	li	gp,9
    1154:	00375433          	srl	s0,a4,gp
    1158:	0089a823          	sw	s0,16(s3)

0000115c <inst_5>:

inst_5:
// rs1==x21, rs2==x22, rd==x20, rs1_val == (-2**(xlen-1)) and rs2_val >= 0 and rs2_val < xlen, rs1_val == -2147483648
// opcode: srl ; op1:x21; op2:x22; dest:x20; op1val:-0x80000000;  op2val:0xc
TEST_RR_OP(srl, x20, x21, x22, 0x80000, -0x80000000, 0xc, x19, 20, x24)
    115c:	80000ab7          	lui	s5,0x80000
    1160:	00c00b13          	li	s6,12
    1164:	016ada33          	srl	s4,s5,s6
    1168:	0149aa23          	sw	s4,20(s3)

0000116c <inst_6>:

inst_6:
// rs1==x4, rs2==x17, rd==x30, rs1_val == 0 and rs2_val >= 0 and rs2_val < xlen, rs1_val==0
// opcode: srl ; op1:x4; op2:x17; dest:x30; op1val:0x0;  op2val:0xf
TEST_RR_OP(srl, x30, x4, x17, 0x0, 0x0, 0xf, x19, 24, x24)
    116c:	00000213          	li	tp,0
    1170:	00f00893          	li	a7,15
    1174:	01125f33          	srl	t5,tp,a7
    1178:	01e9ac23          	sw	t5,24(s3)

0000117c <inst_7>:

inst_7:
// rs1==x1, rs2==x4, rd==x6, rs1_val == (2**(xlen-1)-1) and rs2_val >= 0 and rs2_val < xlen, rs1_val == 2147483647, rs2_val == 30
// opcode: srl ; op1:x1; op2:x4; dest:x6; op1val:0x7fffffff;  op2val:0x1e
TEST_RR_OP(srl, x6, x1, x4, 0x1, 0x7fffffff, 0x1e, x19, 28, x24)
    117c:	800000b7          	lui	ra,0x80000
    1180:	fff08093          	addi	ra,ra,-1 # 7fffffff <_end+0x7fffcffb>
    1184:	01e00213          	li	tp,30
    1188:	0040d333          	srl	t1,ra,tp
    118c:	0069ae23          	sw	t1,28(s3)

00001190 <inst_8>:

inst_8:
// rs1==x0, rs2==x21, rd==x15, rs1_val == 1 and rs2_val >= 0 and rs2_val < xlen, rs1_val == 1, rs2_val == 29
// opcode: srl ; op1:x0; op2:x21; dest:x15; op1val:0x0;  op2val:0x1d
TEST_RR_OP(srl, x15, x0, x21, 0x0, 0x0, 0x1d, x19, 32, x24)
    1190:	00000013          	nop
    1194:	01d00a93          	li	s5,29
    1198:	015057b3          	srl	a5,zero,s5
    119c:	02f9a023          	sw	a5,32(s3)

000011a0 <inst_9>:

inst_9:
// rs1==x28, rs2==x23, rd==x5, rs1_val == 2, rs1_val==2
// opcode: srl ; op1:x28; op2:x23; dest:x5; op1val:0x2;  op2val:0x6
TEST_RR_OP(srl, x5, x28, x23, 0x0, 0x2, 0x6, x19, 36, x24)
    11a0:	00200e13          	li	t3,2
    11a4:	00600b93          	li	s7,6
    11a8:	017e52b3          	srl	t0,t3,s7
    11ac:	0259a223          	sw	t0,36(s3)

000011b0 <inst_10>:

inst_10:
// rs1==x9, rs2==x30, rd==x4, rs1_val == 4, rs2_val == 10, rs1_val==4
// opcode: srl ; op1:x9; op2:x30; dest:x4; op1val:0x4;  op2val:0xa
TEST_RR_OP(srl, x4, x9, x30, 0x0, 0x4, 0xa, x19, 40, x24)
    11b0:	00400493          	li	s1,4
    11b4:	00a00f13          	li	t5,10
    11b8:	01e4d233          	srl	tp,s1,t5
    11bc:	0249a423          	sw	tp,40(s3)

000011c0 <inst_11>:

inst_11:
// rs1==x13, rs2==x29, rd==x10, rs1_val == 8, rs2_val == 2
// opcode: srl ; op1:x13; op2:x29; dest:x10; op1val:0x8;  op2val:0x2
TEST_RR_OP(srl, x10, x13, x29, 0x2, 0x8, 0x2, x19, 44, x24)
    11c0:	00800693          	li	a3,8
    11c4:	00200e93          	li	t4,2
    11c8:	01d6d533          	srl	a0,a3,t4
    11cc:	02a9a623          	sw	a0,44(s3)

000011d0 <inst_12>:

inst_12:
// rs1==x2, rs2==x16, rd==x25, rs1_val == 16, 
// opcode: srl ; op1:x2; op2:x16; dest:x25; op1val:0x10;  op2val:0x7
TEST_RR_OP(srl, x25, x2, x16, 0x0, 0x10, 0x7, x19, 48, x24)
    11d0:	01000113          	li	sp,16
    11d4:	00700813          	li	a6,7
    11d8:	01015cb3          	srl	s9,sp,a6
    11dc:	0399a823          	sw	s9,48(s3)
RVTEST_SIGBASE( x4,signature_x4_0)
    11e0:	00001217          	auipc	tp,0x1
    11e4:	e6420213          	addi	tp,tp,-412 # 2044 <signature_x4_0>

000011e8 <inst_13>:

inst_13:
// rs1==x11, rs2==x28, rd==x19, rs1_val == 32, 
// opcode: srl ; op1:x11; op2:x28; dest:x19; op1val:0x20;  op2val:0x8
TEST_RR_OP(srl, x19, x11, x28, 0x0, 0x20, 0x8, x4, 0, x7)
    11e8:	02000593          	li	a1,32
    11ec:	00800e13          	li	t3,8
    11f0:	01c5d9b3          	srl	s3,a1,t3
    11f4:	01322023          	sw	s3,0(tp) # 0 <offset-0xfc>

000011f8 <inst_14>:

inst_14:
// rs1==x10, rs2==x6, rd==x23, rs1_val == 64, 
// opcode: srl ; op1:x10; op2:x6; dest:x23; op1val:0x40;  op2val:0xb
TEST_RR_OP(srl, x23, x10, x6, 0x0, 0x40, 0xb, x4, 4, x7)
    11f8:	04000513          	li	a0,64
    11fc:	00b00313          	li	t1,11
    1200:	00655bb3          	srl	s7,a0,t1
    1204:	01722223          	sw	s7,4(tp) # 4 <offset-0xf8>

00001208 <inst_15>:

inst_15:
// rs1==x3, rs2==x1, rd==x0, rs1_val == 128, 
// opcode: srl ; op1:x3; op2:x1; dest:x0; op1val:0x80;  op2val:0x6
TEST_RR_OP(srl, x0, x3, x1, 0, 0x80, 0x6, x4, 8, x7)
    1208:	08000193          	li	gp,128
    120c:	00600093          	li	ra,6
    1210:	0011d033          	srl	zero,gp,ra
    1214:	00022423          	sw	zero,8(tp) # 8 <offset-0xf4>

00001218 <inst_16>:

inst_16:
// rs1==x6, rs2==x8, rd==x14, rs1_val == 512, 
// opcode: srl ; op1:x6; op2:x8; dest:x14; op1val:0x200;  op2val:0xe
TEST_RR_OP(srl, x14, x6, x8, 0x0, 0x200, 0xe, x4, 12, x7)
    1218:	20000313          	li	t1,512
    121c:	00e00413          	li	s0,14
    1220:	00835733          	srl	a4,t1,s0
    1224:	00e22623          	sw	a4,12(tp) # c <offset-0xf0>

00001228 <inst_17>:

inst_17:
// rs1==x20, rs2==x27, rd==x9, rs1_val == 1024, 
// opcode: srl ; op1:x20; op2:x27; dest:x9; op1val:0x400;  op2val:0x1d
TEST_RR_OP(srl, x9, x20, x27, 0x0, 0x400, 0x1d, x4, 16, x7)
    1228:	40000a13          	li	s4,1024
    122c:	01d00d93          	li	s11,29
    1230:	01ba54b3          	srl	s1,s4,s11
    1234:	00922823          	sw	s1,16(tp) # 10 <offset-0xec>

00001238 <inst_18>:

inst_18:
// rs1==x30, rs2==x18, rd==x16, rs1_val == 2048, 
// opcode: srl ; op1:x30; op2:x18; dest:x16; op1val:0x800;  op2val:0xd
TEST_RR_OP(srl, x16, x30, x18, 0x0, 0x800, 0xd, x4, 20, x7)
    1238:	00001f37          	lui	t5,0x1
    123c:	800f0f13          	addi	t5,t5,-2048 # 800 <offset+0x704>
    1240:	00d00913          	li	s2,13
    1244:	012f5833          	srl	a6,t5,s2
    1248:	01022a23          	sw	a6,20(tp) # 14 <offset-0xe8>

0000124c <inst_19>:

inst_19:
// rs1==x22, rs2==x10, rd==x24, rs1_val == 4096, 
// opcode: srl ; op1:x22; op2:x10; dest:x24; op1val:0x1000;  op2val:0x8
TEST_RR_OP(srl, x24, x22, x10, 0x10, 0x1000, 0x8, x4, 24, x7)
    124c:	00001b37          	lui	s6,0x1
    1250:	00800513          	li	a0,8
    1254:	00ab5c33          	srl	s8,s6,a0
    1258:	01822c23          	sw	s8,24(tp) # 18 <offset-0xe4>

0000125c <inst_20>:

inst_20:
// rs1==x15, rs2==x24, rd==x2, rs1_val == 8192, 
// opcode: srl ; op1:x15; op2:x24; dest:x2; op1val:0x2000;  op2val:0xc
TEST_RR_OP(srl, x2, x15, x24, 0x2, 0x2000, 0xc, x4, 28, x7)
    125c:	000027b7          	lui	a5,0x2
    1260:	00c00c13          	li	s8,12
    1264:	0187d133          	srl	sp,a5,s8
    1268:	00222e23          	sw	sp,28(tp) # 1c <offset-0xe0>

0000126c <inst_21>:

inst_21:
// rs1==x17, rs2==x9, rd==x21, rs1_val == 16384, 
// opcode: srl ; op1:x17; op2:x9; dest:x21; op1val:0x4000;  op2val:0x7
TEST_RR_OP(srl, x21, x17, x9, 0x80, 0x4000, 0x7, x4, 32, x7)
    126c:	000048b7          	lui	a7,0x4
    1270:	00700493          	li	s1,7
    1274:	0098dab3          	srl	s5,a7,s1
    1278:	03522023          	sw	s5,32(tp) # 20 <offset-0xdc>

0000127c <inst_22>:

inst_22:
// rs1==x12, rs2==x20, rd==x27, rs1_val == 32768, 
// opcode: srl ; op1:x12; op2:x20; dest:x27; op1val:0x8000;  op2val:0x1f
TEST_RR_OP(srl, x27, x12, x20, 0x0, 0x8000, 0x1f, x4, 36, x7)
    127c:	00008637          	lui	a2,0x8
    1280:	01f00a13          	li	s4,31
    1284:	01465db3          	srl	s11,a2,s4
    1288:	03b22223          	sw	s11,36(tp) # 24 <offset-0xd8>

0000128c <inst_23>:

inst_23:
// rs1==x27, rs2==x5, rd==x26, rs1_val == 65536, 
// opcode: srl ; op1:x27; op2:x5; dest:x26; op1val:0x10000;  op2val:0x3
TEST_RR_OP(srl, x26, x27, x5, 0x2000, 0x10000, 0x3, x4, 40, x7)
    128c:	00010db7          	lui	s11,0x10
    1290:	00300293          	li	t0,3
    1294:	005ddd33          	srl	s10,s11,t0
    1298:	03a22423          	sw	s10,40(tp) # 28 <offset-0xd4>

0000129c <inst_24>:

inst_24:
// rs1==x16, rs2==x13, rd==x17, rs1_val == 131072, 
// opcode: srl ; op1:x16; op2:x13; dest:x17; op1val:0x20000;  op2val:0x8
TEST_RR_OP(srl, x17, x16, x13, 0x200, 0x20000, 0x8, x4, 44, x7)
    129c:	00020837          	lui	a6,0x20
    12a0:	00800693          	li	a3,8
    12a4:	00d858b3          	srl	a7,a6,a3
    12a8:	03122623          	sw	a7,44(tp) # 2c <offset-0xd0>

000012ac <inst_25>:

inst_25:
// rs1==x23, rs2==x15, rd==x28, rs1_val == 262144, rs2_val == 16
// opcode: srl ; op1:x23; op2:x15; dest:x28; op1val:0x40000;  op2val:0x10
TEST_RR_OP(srl, x28, x23, x15, 0x4, 0x40000, 0x10, x4, 48, x7)
    12ac:	00040bb7          	lui	s7,0x40
    12b0:	01000793          	li	a5,16
    12b4:	00fbde33          	srl	t3,s7,a5
    12b8:	03c22823          	sw	t3,48(tp) # 30 <offset-0xcc>

000012bc <inst_26>:

inst_26:
// rs1==x8, rs2==x26, rd==x1, rs1_val == 524288, 
// opcode: srl ; op1:x8; op2:x26; dest:x1; op1val:0x80000;  op2val:0x5
TEST_RR_OP(srl, x1, x8, x26, 0x4000, 0x80000, 0x5, x4, 52, x7)
    12bc:	00080437          	lui	s0,0x80
    12c0:	00500d13          	li	s10,5
    12c4:	01a450b3          	srl	ra,s0,s10
    12c8:	02122a23          	sw	ra,52(tp) # 34 <offset-0xc8>

000012cc <inst_27>:

inst_27:
// rs1==x24, rs2==x2, rd==x29, rs1_val == 1048576, rs2_val == 23
// opcode: srl ; op1:x24; op2:x2; dest:x29; op1val:0x100000;  op2val:0x17
TEST_RR_OP(srl, x29, x24, x2, 0x0, 0x100000, 0x17, x4, 56, x7)
    12cc:	00100c37          	lui	s8,0x100
    12d0:	01700113          	li	sp,23
    12d4:	002c5eb3          	srl	t4,s8,sp
    12d8:	03d22c23          	sw	t4,56(tp) # 38 <offset-0xc4>

000012dc <inst_28>:

inst_28:
// rs1==x29, rs2==x14, rd==x31, rs1_val == 2097152, 
// opcode: srl ; op1:x29; op2:x14; dest:x31; op1val:0x200000;  op2val:0x10
TEST_RR_OP(srl, x31, x29, x14, 0x20, 0x200000, 0x10, x4, 60, x2)
    12dc:	00200eb7          	lui	t4,0x200
    12e0:	01000713          	li	a4,16
    12e4:	00eedfb3          	srl	t6,t4,a4
    12e8:	03f22e23          	sw	t6,60(tp) # 3c <offset-0xc0>
RVTEST_SIGBASE( x1,signature_x1_0)
    12ec:	00001097          	auipc	ra,0x1
    12f0:	d9808093          	addi	ra,ra,-616 # 2084 <signature_x1_0>

000012f4 <inst_29>:

inst_29:
// rs1==x5, rs2==x19, rd==x22, rs1_val == 4194304, 
// opcode: srl ; op1:x5; op2:x19; dest:x22; op1val:0x400000;  op2val:0x6
TEST_RR_OP(srl, x22, x5, x19, 0x10000, 0x400000, 0x6, x1, 0, x2)
    12f4:	004002b7          	lui	t0,0x400
    12f8:	00600993          	li	s3,6
    12fc:	0132db33          	srl	s6,t0,s3
    1300:	0160a023          	sw	s6,0(ra)

00001304 <inst_30>:

inst_30:
// rs1==x19, rs2==x0, rd==x3, rs1_val == 8388608, rs2_val == 1
// opcode: srl ; op1:x19; op2:x0; dest:x3; op1val:0x800000;  op2val:0x0
TEST_RR_OP(srl, x3, x19, x0, 0x800000, 0x800000, 0x0, x1, 4, x2)
    1304:	008009b7          	lui	s3,0x800
    1308:	00000013          	nop
    130c:	0009d1b3          	srl	gp,s3,zero
    1310:	0030a223          	sw	gp,4(ra)

00001314 <inst_31>:

inst_31:
// rs1==x25, rs1_val == 16777216, 
// opcode: srl ; op1:x25; op2:x4; dest:x8; op1val:0x1000000;  op2val:0x1e
TEST_RR_OP(srl, x8, x25, x4, 0x0, 0x1000000, 0x1e, x1, 8, x2)
    1314:	01000cb7          	lui	s9,0x1000
    1318:	01e00213          	li	tp,30
    131c:	004cd433          	srl	s0,s9,tp
    1320:	0080a423          	sw	s0,8(ra)

00001324 <inst_32>:

inst_32:
// rs2==x25, rs1_val == 33554432, 
// opcode: srl ; op1:x6; op2:x25; dest:x30; op1val:0x2000000;  op2val:0x1d
TEST_RR_OP(srl, x30, x6, x25, 0x0, 0x2000000, 0x1d, x1, 12, x2)
    1324:	02000337          	lui	t1,0x2000
    1328:	01d00c93          	li	s9,29
    132c:	01935f33          	srl	t5,t1,s9
    1330:	01e0a623          	sw	t5,12(ra)

00001334 <inst_33>:

inst_33:
// rd==x13, rs1_val == 67108864, 
// opcode: srl ; op1:x12; op2:x9; dest:x13; op1val:0x4000000;  op2val:0x1e
TEST_RR_OP(srl, x13, x12, x9, 0x0, 0x4000000, 0x1e, x1, 16, x2)
    1334:	04000637          	lui	a2,0x4000
    1338:	01e00493          	li	s1,30
    133c:	009656b3          	srl	a3,a2,s1
    1340:	00d0a823          	sw	a3,16(ra)

00001344 <inst_34>:

inst_34:
// rs1_val == 134217728, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:0x8000000;  op2val:0x8
TEST_RR_OP(srl, x12, x10, x11, 0x80000, 0x8000000, 0x8, x1, 20, x2)
    1344:	08000537          	lui	a0,0x8000
    1348:	00800593          	li	a1,8
    134c:	00b55633          	srl	a2,a0,a1
    1350:	00c0aa23          	sw	a2,20(ra)

00001354 <inst_35>:

inst_35:
// rs1_val == 268435456, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:0x10000000;  op2val:0xc
TEST_RR_OP(srl, x12, x10, x11, 0x10000, 0x10000000, 0xc, x1, 24, x2)
    1354:	10000537          	lui	a0,0x10000
    1358:	00c00593          	li	a1,12
    135c:	00b55633          	srl	a2,a0,a1
    1360:	00c0ac23          	sw	a2,24(ra)

00001364 <inst_36>:

inst_36:
// rs1_val == 536870912, rs2_val == 27
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:0x20000000;  op2val:0x1b
TEST_RR_OP(srl, x12, x10, x11, 0x4, 0x20000000, 0x1b, x1, 28, x2)
    1364:	20000537          	lui	a0,0x20000
    1368:	01b00593          	li	a1,27
    136c:	00b55633          	srl	a2,a0,a1
    1370:	00c0ae23          	sw	a2,28(ra)

00001374 <inst_37>:

inst_37:
// rs1_val == 1073741824, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:0x40000000;  op2val:0x6
TEST_RR_OP(srl, x12, x10, x11, 0x1000000, 0x40000000, 0x6, x1, 32, x2)
    1374:	40000537          	lui	a0,0x40000
    1378:	00600593          	li	a1,6
    137c:	00b55633          	srl	a2,a0,a1
    1380:	02c0a023          	sw	a2,32(ra)

00001384 <inst_38>:

inst_38:
// rs1_val == -2, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x2;  op2val:0xb
TEST_RR_OP(srl, x12, x10, x11, 0x1fffff, -0x2, 0xb, x1, 36, x2)
    1384:	ffe00513          	li	a0,-2
    1388:	00b00593          	li	a1,11
    138c:	00b55633          	srl	a2,a0,a1
    1390:	02c0a223          	sw	a2,36(ra)

00001394 <inst_39>:

inst_39:
// rs1_val == -3, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x3;  op2val:0x13
TEST_RR_OP(srl, x12, x10, x11, 0x1fff, -0x3, 0x13, x1, 40, x2)
    1394:	ffd00513          	li	a0,-3
    1398:	01300593          	li	a1,19
    139c:	00b55633          	srl	a2,a0,a1
    13a0:	02c0a423          	sw	a2,40(ra)

000013a4 <inst_40>:

inst_40:
// rs1_val == -5, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x5;  op2val:0x2
TEST_RR_OP(srl, x12, x10, x11, 0x3ffffffe, -0x5, 0x2, x1, 44, x2)
    13a4:	ffb00513          	li	a0,-5
    13a8:	00200593          	li	a1,2
    13ac:	00b55633          	srl	a2,a0,a1
    13b0:	02c0a623          	sw	a2,44(ra)

000013b4 <inst_41>:

inst_41:
// rs1_val == -9, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x9;  op2val:0x13
TEST_RR_OP(srl, x12, x10, x11, 0x1fff, -0x9, 0x13, x1, 48, x2)
    13b4:	ff700513          	li	a0,-9
    13b8:	01300593          	li	a1,19
    13bc:	00b55633          	srl	a2,a0,a1
    13c0:	02c0a823          	sw	a2,48(ra)

000013c4 <inst_42>:

inst_42:
// rs1_val == -17, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x11;  op2val:0x17
TEST_RR_OP(srl, x12, x10, x11, 0x1ff, -0x11, 0x17, x1, 52, x2)
    13c4:	fef00513          	li	a0,-17
    13c8:	01700593          	li	a1,23
    13cc:	00b55633          	srl	a2,a0,a1
    13d0:	02c0aa23          	sw	a2,52(ra)

000013d4 <inst_43>:

inst_43:
// rs1_val == -33, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x21;  op2val:0xf
TEST_RR_OP(srl, x12, x10, x11, 0x1ffff, -0x21, 0xf, x1, 56, x2)
    13d4:	fdf00513          	li	a0,-33
    13d8:	00f00593          	li	a1,15
    13dc:	00b55633          	srl	a2,a0,a1
    13e0:	02c0ac23          	sw	a2,56(ra)

000013e4 <inst_44>:

inst_44:
// rs1_val == -65, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x41;  op2val:0xe
TEST_RR_OP(srl, x12, x10, x11, 0x3ffff, -0x41, 0xe, x1, 60, x2)
    13e4:	fbf00513          	li	a0,-65
    13e8:	00e00593          	li	a1,14
    13ec:	00b55633          	srl	a2,a0,a1
    13f0:	02c0ae23          	sw	a2,60(ra)

000013f4 <inst_45>:

inst_45:
// rs1_val == -129, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x81;  op2val:0x6
TEST_RR_OP(srl, x12, x10, x11, 0x3fffffd, -0x81, 0x6, x1, 64, x2)
    13f4:	f7f00513          	li	a0,-129
    13f8:	00600593          	li	a1,6
    13fc:	00b55633          	srl	a2,a0,a1
    1400:	04c0a023          	sw	a2,64(ra)

00001404 <inst_46>:

inst_46:
// rs1_val == -257, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x101;  op2val:0xe
TEST_RR_OP(srl, x12, x10, x11, 0x3ffff, -0x101, 0xe, x1, 68, x2)
    1404:	eff00513          	li	a0,-257
    1408:	00e00593          	li	a1,14
    140c:	00b55633          	srl	a2,a0,a1
    1410:	04c0a223          	sw	a2,68(ra)

00001414 <inst_47>:

inst_47:
// rs1_val == -513, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x201;  op2val:0xd
TEST_RR_OP(srl, x12, x10, x11, 0x7ffff, -0x201, 0xd, x1, 72, x2)
    1414:	dff00513          	li	a0,-513
    1418:	00d00593          	li	a1,13
    141c:	00b55633          	srl	a2,a0,a1
    1420:	04c0a423          	sw	a2,72(ra)

00001424 <inst_48>:

inst_48:
// rs1_val == -1025, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x401;  op2val:0x1b
TEST_RR_OP(srl, x12, x10, x11, 0x1f, -0x401, 0x1b, x1, 76, x2)
    1424:	bff00513          	li	a0,-1025
    1428:	01b00593          	li	a1,27
    142c:	00b55633          	srl	a2,a0,a1
    1430:	04c0a623          	sw	a2,76(ra)

00001434 <inst_49>:

inst_49:
// rs1_val == -2049, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x801;  op2val:0x1b
TEST_RR_OP(srl, x12, x10, x11, 0x1f, -0x801, 0x1b, x1, 80, x2)
    1434:	fffff537          	lui	a0,0xfffff
    1438:	7ff50513          	addi	a0,a0,2047 # fffff7ff <_end+0xffffc7fb>
    143c:	01b00593          	li	a1,27
    1440:	00b55633          	srl	a2,a0,a1
    1444:	04c0a823          	sw	a2,80(ra)

00001448 <inst_50>:

inst_50:
// rs1_val == -4097, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x1001;  op2val:0xd
TEST_RR_OP(srl, x12, x10, x11, 0x7ffff, -0x1001, 0xd, x1, 84, x2)
    1448:	fffff537          	lui	a0,0xfffff
    144c:	fff50513          	addi	a0,a0,-1 # ffffefff <_end+0xffffbffb>
    1450:	00d00593          	li	a1,13
    1454:	00b55633          	srl	a2,a0,a1
    1458:	04c0aa23          	sw	a2,84(ra)

0000145c <inst_51>:

inst_51:
// rs1_val == -8193, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x2001;  op2val:0xc
TEST_RR_OP(srl, x12, x10, x11, 0xffffd, -0x2001, 0xc, x1, 88, x2)
    145c:	ffffe537          	lui	a0,0xffffe
    1460:	fff50513          	addi	a0,a0,-1 # ffffdfff <_end+0xffffaffb>
    1464:	00c00593          	li	a1,12
    1468:	00b55633          	srl	a2,a0,a1
    146c:	04c0ac23          	sw	a2,88(ra)

00001470 <inst_52>:

inst_52:
// rs1_val == -16385, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x4001;  op2val:0x10
TEST_RR_OP(srl, x12, x10, x11, 0xffff, -0x4001, 0x10, x1, 92, x2)
    1470:	ffffc537          	lui	a0,0xffffc
    1474:	fff50513          	addi	a0,a0,-1 # ffffbfff <_end+0xffff8ffb>
    1478:	01000593          	li	a1,16
    147c:	00b55633          	srl	a2,a0,a1
    1480:	04c0ae23          	sw	a2,92(ra)

00001484 <inst_53>:

inst_53:
// rs1_val == -32769, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x8001;  op2val:0x1e
TEST_RR_OP(srl, x12, x10, x11, 0x3, -0x8001, 0x1e, x1, 96, x2)
    1484:	ffff8537          	lui	a0,0xffff8
    1488:	fff50513          	addi	a0,a0,-1 # ffff7fff <_end+0xffff4ffb>
    148c:	01e00593          	li	a1,30
    1490:	00b55633          	srl	a2,a0,a1
    1494:	06c0a023          	sw	a2,96(ra)

00001498 <inst_54>:

inst_54:
// rs1_val == -65537, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x10001;  op2val:0x12
TEST_RR_OP(srl, x12, x10, x11, 0x3fff, -0x10001, 0x12, x1, 100, x2)
    1498:	ffff0537          	lui	a0,0xffff0
    149c:	fff50513          	addi	a0,a0,-1 # fffeffff <_end+0xfffecffb>
    14a0:	01200593          	li	a1,18
    14a4:	00b55633          	srl	a2,a0,a1
    14a8:	06c0a223          	sw	a2,100(ra)

000014ac <inst_55>:

inst_55:
// rs1_val == -131073, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x20001;  op2val:0x1f
TEST_RR_OP(srl, x12, x10, x11, 0x1, -0x20001, 0x1f, x1, 104, x2)
    14ac:	fffe0537          	lui	a0,0xfffe0
    14b0:	fff50513          	addi	a0,a0,-1 # fffdffff <_end+0xfffdcffb>
    14b4:	01f00593          	li	a1,31
    14b8:	00b55633          	srl	a2,a0,a1
    14bc:	06c0a423          	sw	a2,104(ra)

000014c0 <inst_56>:

inst_56:
// rs1_val == -262145, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x40001;  op2val:0xf
TEST_RR_OP(srl, x12, x10, x11, 0x1fff7, -0x40001, 0xf, x1, 108, x2)
    14c0:	fffc0537          	lui	a0,0xfffc0
    14c4:	fff50513          	addi	a0,a0,-1 # fffbffff <_end+0xfffbcffb>
    14c8:	00f00593          	li	a1,15
    14cc:	00b55633          	srl	a2,a0,a1
    14d0:	06c0a623          	sw	a2,108(ra)

000014d4 <inst_57>:

inst_57:
// rs1_val == -524289, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x80001;  op2val:0x1b
TEST_RR_OP(srl, x12, x10, x11, 0x1f, -0x80001, 0x1b, x1, 112, x2)
    14d4:	fff80537          	lui	a0,0xfff80
    14d8:	fff50513          	addi	a0,a0,-1 # fff7ffff <_end+0xfff7cffb>
    14dc:	01b00593          	li	a1,27
    14e0:	00b55633          	srl	a2,a0,a1
    14e4:	06c0a823          	sw	a2,112(ra)

000014e8 <inst_58>:

inst_58:
// rs1_val == -1048577, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x100001;  op2val:0x6
TEST_RR_OP(srl, x12, x10, x11, 0x3ffbfff, -0x100001, 0x6, x1, 116, x2)
    14e8:	fff00537          	lui	a0,0xfff00
    14ec:	fff50513          	addi	a0,a0,-1 # ffefffff <_end+0xffefcffb>
    14f0:	00600593          	li	a1,6
    14f4:	00b55633          	srl	a2,a0,a1
    14f8:	06c0aa23          	sw	a2,116(ra)

000014fc <inst_59>:

inst_59:
// rs1_val == -8388609, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x800001;  op2val:0x12
TEST_RR_OP(srl, x12, x10, x11, 0x3fdf, -0x800001, 0x12, x1, 120, x2)
    14fc:	ff800537          	lui	a0,0xff800
    1500:	fff50513          	addi	a0,a0,-1 # ff7fffff <_end+0xff7fcffb>
    1504:	01200593          	li	a1,18
    1508:	00b55633          	srl	a2,a0,a1
    150c:	06c0ac23          	sw	a2,120(ra)

00001510 <inst_60>:

inst_60:
// rs1_val == -16777217, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x1000001;  op2val:0x11
TEST_RR_OP(srl, x12, x10, x11, 0x7f7f, -0x1000001, 0x11, x1, 124, x2)
    1510:	ff000537          	lui	a0,0xff000
    1514:	fff50513          	addi	a0,a0,-1 # feffffff <_end+0xfeffcffb>
    1518:	01100593          	li	a1,17
    151c:	00b55633          	srl	a2,a0,a1
    1520:	06c0ae23          	sw	a2,124(ra)

00001524 <inst_61>:

inst_61:
// rs1_val == -33554433, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x2000001;  op2val:0xc
TEST_RR_OP(srl, x12, x10, x11, 0xfdfff, -0x2000001, 0xc, x1, 128, x2)
    1524:	fe000537          	lui	a0,0xfe000
    1528:	fff50513          	addi	a0,a0,-1 # fdffffff <_end+0xfdffcffb>
    152c:	00c00593          	li	a1,12
    1530:	00b55633          	srl	a2,a0,a1
    1534:	08c0a023          	sw	a2,128(ra)

00001538 <inst_62>:

inst_62:
// rs1_val == -67108865, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x4000001;  op2val:0x17
TEST_RR_OP(srl, x12, x10, x11, 0x1f7, -0x4000001, 0x17, x1, 132, x2)
    1538:	fc000537          	lui	a0,0xfc000
    153c:	fff50513          	addi	a0,a0,-1 # fbffffff <_end+0xfbffcffb>
    1540:	01700593          	li	a1,23
    1544:	00b55633          	srl	a2,a0,a1
    1548:	08c0a223          	sw	a2,132(ra)

0000154c <inst_63>:

inst_63:
// rs1_val == -134217729, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x8000001;  op2val:0x1
TEST_RR_OP(srl, x12, x10, x11, 0x7bffffff, -0x8000001, 0x1, x1, 136, x2)
    154c:	f8000537          	lui	a0,0xf8000
    1550:	fff50513          	addi	a0,a0,-1 # f7ffffff <_end+0xf7ffcffb>
    1554:	00100593          	li	a1,1
    1558:	00b55633          	srl	a2,a0,a1
    155c:	08c0a423          	sw	a2,136(ra)

00001560 <inst_64>:

inst_64:
// rs1_val == -268435457, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x10000001;  op2val:0x9
TEST_RR_OP(srl, x12, x10, x11, 0x77ffff, -0x10000001, 0x9, x1, 140, x2)
    1560:	f0000537          	lui	a0,0xf0000
    1564:	fff50513          	addi	a0,a0,-1 # efffffff <_end+0xefffcffb>
    1568:	00900593          	li	a1,9
    156c:	00b55633          	srl	a2,a0,a1
    1570:	08c0a623          	sw	a2,140(ra)

00001574 <inst_65>:

inst_65:
// rs1_val == -536870913, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x20000001;  op2val:0xd
TEST_RR_OP(srl, x12, x10, x11, 0x6ffff, -0x20000001, 0xd, x1, 144, x2)
    1574:	e0000537          	lui	a0,0xe0000
    1578:	fff50513          	addi	a0,a0,-1 # dfffffff <_end+0xdfffcffb>
    157c:	00d00593          	li	a1,13
    1580:	00b55633          	srl	a2,a0,a1
    1584:	08c0a823          	sw	a2,144(ra)

00001588 <inst_66>:

inst_66:
// rs1_val == -1073741825, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x40000001;  op2val:0x8
TEST_RR_OP(srl, x12, x10, x11, 0xbfffff, -0x40000001, 0x8, x1, 148, x2)
    1588:	c0000537          	lui	a0,0xc0000
    158c:	fff50513          	addi	a0,a0,-1 # bfffffff <_end+0xbfffcffb>
    1590:	00800593          	li	a1,8
    1594:	00b55633          	srl	a2,a0,a1
    1598:	08c0aa23          	sw	a2,148(ra)

0000159c <inst_67>:

inst_67:
// rs1_val == 1431655765, rs1_val==1431655765
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0xb
TEST_RR_OP(srl, x12, x10, x11, 0xaaaaa, 0x55555555, 0xb, x1, 152, x2)
    159c:	55555537          	lui	a0,0x55555
    15a0:	55550513          	addi	a0,a0,1365 # 55555555 <_end+0x55552551>
    15a4:	00b00593          	li	a1,11
    15a8:	00b55633          	srl	a2,a0,a1
    15ac:	08c0ac23          	sw	a2,152(ra)

000015b0 <inst_68>:

inst_68:
// rs1_val == -1431655766, rs1_val==-1431655766
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x1d
TEST_RR_OP(srl, x12, x10, x11, 0x5, -0x55555556, 0x1d, x1, 156, x2)
    15b0:	aaaab537          	lui	a0,0xaaaab
    15b4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0xaaaa7aa6>
    15b8:	01d00593          	li	a1,29
    15bc:	00b55633          	srl	a2,a0,a1
    15c0:	08c0ae23          	sw	a2,156(ra)

000015c4 <inst_69>:

inst_69:
// rs1_val==3, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x3
TEST_RR_OP(srl, x12, x10, x11, 0x0, 0x3, 0x3, x1, 160, x2)
    15c4:	00300513          	li	a0,3
    15c8:	00300593          	li	a1,3
    15cc:	00b55633          	srl	a2,a0,a1
    15d0:	0ac0a023          	sw	a2,160(ra)

000015d4 <inst_70>:

inst_70:
// rs1_val==5, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0xf
TEST_RR_OP(srl, x12, x10, x11, 0x0, 0x5, 0xf, x1, 164, x2)
    15d4:	00500513          	li	a0,5
    15d8:	00f00593          	li	a1,15
    15dc:	00b55633          	srl	a2,a0,a1
    15e0:	0ac0a223          	sw	a2,164(ra)

000015e4 <inst_71>:

inst_71:
// rs1_val==858993459, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0xa
TEST_RR_OP(srl, x12, x10, x11, 0xccccc, 0x33333333, 0xa, x1, 168, x2)
    15e4:	33333537          	lui	a0,0x33333
    15e8:	33350513          	addi	a0,a0,819 # 33333333 <_end+0x3333032f>
    15ec:	00a00593          	li	a1,10
    15f0:	00b55633          	srl	a2,a0,a1
    15f4:	0ac0a423          	sw	a2,168(ra)

000015f8 <inst_72>:

inst_72:
// rs1_val==1717986918, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x13
TEST_RR_OP(srl, x12, x10, x11, 0xccc, 0x66666666, 0x13, x1, 172, x2)
    15f8:	66666537          	lui	a0,0x66666
    15fc:	66650513          	addi	a0,a0,1638 # 66666666 <_end+0x66663662>
    1600:	01300593          	li	a1,19
    1604:	00b55633          	srl	a2,a0,a1
    1608:	0ac0a623          	sw	a2,172(ra)

0000160c <inst_73>:

inst_73:
// rs1_val==46341, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x1f
TEST_RR_OP(srl, x12, x10, x11, 0x0, 0xb505, 0x1f, x1, 176, x2)
    160c:	0000b537          	lui	a0,0xb
    1610:	50550513          	addi	a0,a0,1285 # b505 <_end+0x8501>
    1614:	01f00593          	li	a1,31
    1618:	00b55633          	srl	a2,a0,a1
    161c:	0ac0a823          	sw	a2,176(ra)

00001620 <inst_74>:

inst_74:
// rs2_val == 4, rs1_val==6
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x4
TEST_RR_OP(srl, x12, x10, x11, 0x0, 0x6, 0x4, x1, 180, x2)
    1620:	00600513          	li	a0,6
    1624:	00400593          	li	a1,4
    1628:	00b55633          	srl	a2,a0,a1
    162c:	0ac0aa23          	sw	a2,180(ra)

00001630 <inst_75>:

inst_75:
// rs2_val == 21, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x2000001;  op2val:0x15
TEST_RR_OP(srl, x12, x10, x11, 0x7ef, -0x2000001, 0x15, x1, 184, x2)
    1630:	fe000537          	lui	a0,0xfe000
    1634:	fff50513          	addi	a0,a0,-1 # fdffffff <_end+0xfdffcffb>
    1638:	01500593          	li	a1,21
    163c:	00b55633          	srl	a2,a0,a1
    1640:	0ac0ac23          	sw	a2,184(ra)

00001644 <inst_76>:

inst_76:
// rs1_val==-46340, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0xc
TEST_RR_OP(srl, x12, x10, x11, 0xffff4, -0xb504, 0xc, x1, 188, x2)
    1644:	ffff5537          	lui	a0,0xffff5
    1648:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0xffff1af8>
    164c:	00c00593          	li	a1,12
    1650:	00b55633          	srl	a2,a0,a1
    1654:	0ac0ae23          	sw	a2,188(ra)

00001658 <inst_77>:

inst_77:
// rs1_val==46340, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x1d
TEST_RR_OP(srl, x12, x10, x11, 0x0, 0xb504, 0x1d, x1, 192, x2)
    1658:	0000b537          	lui	a0,0xb
    165c:	50450513          	addi	a0,a0,1284 # b504 <_end+0x8500>
    1660:	01d00593          	li	a1,29
    1664:	00b55633          	srl	a2,a0,a1
    1668:	0cc0a023          	sw	a2,192(ra)

0000166c <inst_78>:

inst_78:
// rs1_val==1431655764, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x15
TEST_RR_OP(srl, x12, x10, x11, 0x2aa, 0x55555554, 0x15, x1, 196, x2)
    166c:	55555537          	lui	a0,0x55555
    1670:	55450513          	addi	a0,a0,1364 # 55555554 <_end+0x55552550>
    1674:	01500593          	li	a1,21
    1678:	00b55633          	srl	a2,a0,a1
    167c:	0cc0a223          	sw	a2,196(ra)

00001680 <inst_79>:

inst_79:
// rs1_val == -2097153, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x200001;  op2val:0xe
TEST_RR_OP(srl, x12, x10, x11, 0x3ff7f, -0x200001, 0xe, x1, 200, x2)
    1680:	ffe00537          	lui	a0,0xffe00
    1684:	fff50513          	addi	a0,a0,-1 # ffdfffff <_end+0xffdfcffb>
    1688:	00e00593          	li	a1,14
    168c:	00b55633          	srl	a2,a0,a1
    1690:	0cc0a423          	sw	a2,200(ra)

00001694 <inst_80>:

inst_80:
// rs1_val==858993458, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x0
TEST_RR_OP(srl, x12, x10, x11, 0x33333332, 0x33333332, 0x0, x1, 204, x2)
    1694:	33333537          	lui	a0,0x33333
    1698:	33250513          	addi	a0,a0,818 # 33333332 <_end+0x3333032e>
    169c:	00000593          	li	a1,0
    16a0:	00b55633          	srl	a2,a0,a1
    16a4:	0cc0a623          	sw	a2,204(ra)

000016a8 <inst_81>:

inst_81:
// rs1_val==1717986917, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x3
TEST_RR_OP(srl, x12, x10, x11, 0xccccccc, 0x66666665, 0x3, x1, 208, x2)
    16a8:	66666537          	lui	a0,0x66666
    16ac:	66550513          	addi	a0,a0,1637 # 66666665 <_end+0x66663661>
    16b0:	00300593          	li	a1,3
    16b4:	00b55633          	srl	a2,a0,a1
    16b8:	0cc0a823          	sw	a2,208(ra)

000016bc <inst_82>:

inst_82:
// rs1_val==46339, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x1
TEST_RR_OP(srl, x12, x10, x11, 0x5a81, 0xb503, 0x1, x1, 212, x2)
    16bc:	0000b537          	lui	a0,0xb
    16c0:	50350513          	addi	a0,a0,1283 # b503 <_end+0x84ff>
    16c4:	00100593          	li	a1,1
    16c8:	00b55633          	srl	a2,a0,a1
    16cc:	0cc0aa23          	sw	a2,212(ra)

000016d0 <inst_83>:

inst_83:
// rs1_val==-1431655765, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0xb
TEST_RR_OP(srl, x12, x10, x11, 0x155555, -0x55555555, 0xb, x1, 216, x2)
    16d0:	aaaab537          	lui	a0,0xaaaab
    16d4:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0xaaaa7aa7>
    16d8:	00b00593          	li	a1,11
    16dc:	00b55633          	srl	a2,a0,a1
    16e0:	0cc0ac23          	sw	a2,216(ra)

000016e4 <inst_84>:

inst_84:
// rs1_val==858993460, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x1b
TEST_RR_OP(srl, x12, x10, x11, 0x6, 0x33333334, 0x1b, x1, 220, x2)
    16e4:	33333537          	lui	a0,0x33333
    16e8:	33450513          	addi	a0,a0,820 # 33333334 <_end+0x33330330>
    16ec:	01b00593          	li	a1,27
    16f0:	00b55633          	srl	a2,a0,a1
    16f4:	0cc0ae23          	sw	a2,220(ra)

000016f8 <inst_85>:

inst_85:
// rs1_val==1717986919, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x6
TEST_RR_OP(srl, x12, x10, x11, 0x1999999, 0x66666667, 0x6, x1, 224, x2)
    16f8:	66666537          	lui	a0,0x66666
    16fc:	66750513          	addi	a0,a0,1639 # 66666667 <_end+0x66663663>
    1700:	00600593          	li	a1,6
    1704:	00b55633          	srl	a2,a0,a1
    1708:	0ec0a023          	sw	a2,224(ra)

0000170c <inst_86>:

inst_86:
// rs1_val==-46339, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x6
TEST_RR_OP(srl, x12, x10, x11, 0x3fffd2b, -0xb503, 0x6, x1, 228, x2)
    170c:	ffff5537          	lui	a0,0xffff5
    1710:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0xffff1af9>
    1714:	00600593          	li	a1,6
    1718:	00b55633          	srl	a2,a0,a1
    171c:	0ec0a223          	sw	a2,228(ra)

00001720 <inst_87>:

inst_87:
// rs1_val > 0 and rs2_val > 0 and rs2_val < xlen, rs1_val==1431655766, rs2_val == 8
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x8
TEST_RR_OP(srl, x12, x10, x11, 0x555555, 0x55555556, 0x8, x1, 232, x2)
    1720:	55555537          	lui	a0,0x55555
    1724:	55650513          	addi	a0,a0,1366 # 55555556 <_end+0x55552552>
    1728:	00800593          	li	a1,8
    172c:	00b55633          	srl	a2,a0,a1
    1730:	0ec0a423          	sw	a2,232(ra)

00001734 <inst_88>:

inst_88:
// rs1_val < 0 and rs2_val == 0, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:-0x1;  op2val:0x0
TEST_RR_OP(srl, x12, x10, x11, 0xffffffff, -0x1, 0x0, x1, 236, x2)
    1734:	fff00513          	li	a0,-1
    1738:	00000593          	li	a1,0
    173c:	00b55633          	srl	a2,a0,a1
    1740:	0ec0a623          	sw	a2,236(ra)

00001744 <inst_89>:

inst_89:
// rs1_val == 1 and rs2_val >= 0 and rs2_val < xlen, rs1_val == 1, rs2_val == 29
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0x1d
TEST_RR_OP(srl, x12, x10, x11, 0x0, 0x1, 0x1d, x1, 240, x2)
    1744:	00100513          	li	a0,1
    1748:	01d00593          	li	a1,29
    174c:	00b55633          	srl	a2,a0,a1
    1750:	0ec0a823          	sw	a2,240(ra)

00001754 <inst_90>:

inst_90:
// rs1_val == 128, 
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:0x80;  op2val:0x6
TEST_RR_OP(srl, x12, x10, x11, 0x2, 0x80, 0x6, x1, 244, x2)
    1754:	08000513          	li	a0,128
    1758:	00600593          	li	a1,6
    175c:	00b55633          	srl	a2,a0,a1
    1760:	0ec0aa23          	sw	a2,244(ra)

00001764 <inst_91>:

inst_91:
// rs1_val == 8388608, rs2_val == 1
// opcode: srl ; op1:x10; op2:x11; dest:x12; op1val:0x800000;  op2val:0x1
TEST_RR_OP(srl, x12, x10, x11, 0x400000, 0x800000, 0x1, x1, 248, x2)
    1764:	00800537          	lui	a0,0x800
    1768:	00100593          	li	a1,1
    176c:	00b55633          	srl	a2,a0,a1
    1770:	0ec0ac23          	sw	a2,248(ra)
    1774:	00000013          	nop
    1778:	00000013          	nop
    177c:	00000013          	nop

00001780 <rvtest_code_end>:
#endif


RVTEST_CODE_END
RVMODEL_HALT
    1780:	babed0b7          	lui	ra,0xbabed
    1784:	afe08093          	addi	ra,ra,-1282 # babecafe <_end+0xbabe9afa>

00001788 <write_tohost>:
    1788:	00002017          	auipc	zero,0x2
    178c:	86102c23          	sw	ra,-1928(zero) # fffff878 <_end+0xffffc874>

00001790 <loop>:
    1790:	0000006f          	j	1790 <loop>
	...
