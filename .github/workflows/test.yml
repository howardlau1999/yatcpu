name: Test

on: [push, pull_request]

jobs:
  test-windows:
    name: Test on Windows
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup Verilator
        run: C:\msys64\usr\bin\bash.exe -l -c "pacman -Sy --noconfirm --needed base-devel mingw-w64-x86_64-toolchain git flex mingw-w64-x86_64-cmake mingw-w64-x86_64-verilator"
      - run: echo 'C:\msys64\usr\bin' | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - run: echo 'C:\msys64\mingw64\bin' | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Setup Developer Command 
        uses: ilammy/msvc-dev-cmd@v1
      - name: Compile executables for testing
        run: cd csrc; .\build.bat
      - name: SBT Test
        run: sbt test
  test-macos:
    name: Test on macOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup Clang
        run: brew install llvm && echo "$(brew --prefix llvm)/bin" >> $GITHUB_PATH
      - name: Setup Verilator
        run: brew install verilator
      - name: Compile executables for testing
        run: cd csrc && ./build.sh
      - name: SBT Test
        run: sbt test
  test-linux:
    name: Test on Linux
    runs-on: ubuntu-latest
    steps:
      - name: Setup Clang
        run: curl -LO https://apt.llvm.org/llvm.sh && sudo bash llvm.sh 14 all
      - name: Update Clang Version
        run: curl -LO https://gist.githubusercontent.com/howardlau1999/7ea2cffedc0491c46fa14e1f2355a9a8/raw/7886c0344e8f010a9d515a3de20983e604ae5a0a/update-alternatives-clang.sh && sudo bash update-alternatives-clang.sh 14 100
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup Verilator
        run: sudo apt install -y verilator
      - name: Setup Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.8
      - name: Cache Scala
        uses: coursier/cache-action@v6
      - name: Compile executables for testing
        run: cd csrc && ./build.sh
      - name: SBT Test
        run: sbt test
  test-docker:
    name: Test in Docker
    runs-on: ubuntu-latest
    container:
      image: howardlau1999/yatcpu
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Cache Scala
        uses: coursier/cache-action@v6
      - name: Compile executables for testing
        run: cd csrc && ./build.sh
      - name: SBT Test
        run: sbt test
  riscv-compliance-test:
    name: Run RISC-V compliance test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: yatcpu
      - name: Checkout RISC-V compliance test
        uses: actions/checkout@v2
        with:
          repository: "riscv-non-isa/riscv-arch-test"
          path: riscv-arch-test
          ref: 2.6.1
      - name: Setup Toolchain
        run: sudo apt install -y verilator binutils-riscv64-unknown-elf gcc-riscv64-unknown-elf
      - name: Setup Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.8
      - name: Set up GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 11
      - name: Cache Scala
        uses: coursier/cache-action@v6
      - name: Generate Verilog
        run: cd yatcpu && sbt "runMain board.verilator.VerilogGenerator"
      - name: Compile Verilated model
        run: cd yatcpu/verilog/verilator && verilator --exe --cc --trace Top.v sim_main.cpp && make -C obj_dir -f VTop.mk
      - name: Run RISC-V compliance test
        run: cd riscv-arch-test && make VERBOSE=1
        env:
          RISCV_TARGET_FLAGS: "-memory 1048576"
          TARGET_SIM: ${{ github.workspace }}/yatcpu/verilog/verilator/obj_dir/VTop
          RISCV_TARGET: yatcpu
          TARGETDIR: ${{ github.workspace }}/yatcpu/riscv-target
